{"version":3,"sources":["containers/SiteMain/MainContent/Main/ChatInput/Snapshot/Snapshot.js"],"names":["videoRef","React","createRef","Snapshot","state","start","err","id","_this","props","match","params","categ","stopRecHandler","current","getImageURL","then","imageData","srcObject","getVideoTracks","forEach","track","stop","history","goBack","editChat","onUploadMedia","file","type","format","chatID","mainID","uuid","catch","setState","navigator","mediaDevices","these","this","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","Promise","resolve","reject","call","video","stream","cnt","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_UI_Loader_Loader__WEBPACK_IMPORTED_MODULE_12__","bg","_components_UI_Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_13__","component","Modal","close","closeModelBackdropHandler","media","className","ref","autoPlay","onClick","disabled","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","Component","withRouter","connect","vidRecBackdrop","dispatch","onTypingErr","actions"],"mappings":"oQAaIA,EAAWC,IAAMC,UAAU,MACzBC,8MACFC,MAAQ,CACJC,OAAO,EACPC,IAAK,KACLC,GAAIC,EAAKC,MAAMC,MAAMC,OAAOJ,GAC5BK,MAAOJ,EAAKC,MAAMC,MAAMC,OAAOC,SAwCnCC,eAAiB,WACTb,GAAYA,EAASc,SACrBC,YAAYf,EAASc,SAASE,KAAK,SAAAC,GAC/BjB,EAASc,QAAQI,UAAUC,iBAAiBC,QAAQ,SAASC,GACzDA,EAAMC,SAEVd,EAAKC,MAAMc,QAAQC,SACfhB,EAAKC,MAAMgB,SACXjB,EAAKC,MAAMiB,cAAc,CAAC,CAACC,KAAMV,EAAWW,KAAM,QAASC,OAAQ,MAAOC,OAAQ,CAACC,OAAQvB,EAAKC,MAAMgB,SAASM,OAAQD,OAAQtB,EAAKC,MAAMgB,SAASK,UAAWtB,EAAKJ,MAAMG,GAAIC,EAAKJ,MAAMQ,OAExLJ,EAAKC,MAAMiB,cAAc,CAAC,CAACC,KAAMV,EAAWW,KAAM,QAASC,OAAQ,MAAMC,OAAQE,QAAUxB,EAAKJ,MAAMG,GAAIC,EAAKJ,MAAMQ,SAE1HqB,MAAM,SAAA3B,GACLE,EAAK0B,SAAS,CAAC5B,6EAjDjB,iBAAkB6B,YACpBA,UAAUC,aAAe,IAE7B,IAAIC,EAAQC,KACN,iBAAkBH,UAAUC,eAC9BD,UAAUC,aAAaG,aAAe,SAASC,GAC/C,IAAID,EAAeJ,UAAUM,oBAAsBN,UAAUO,gBAE7D,OAAKH,EAIE,IAAII,QAAQ,SAASC,EAASC,GACjCN,EAAaO,KAAKX,UAAWK,EAAaI,EAASC,KAJ5CR,EAAMH,SAAS,CAAC5B,IAAK,uCASpC6B,UAAUC,aAAaG,aAAa,CAACQ,OAAO,IACvC/B,KAAK,SAASgC,GACXhD,EAASc,QAAQI,UAAW8B,EAC5BX,EAAMH,SAAS,CAAC7B,OAAO,MAE1B4B,MAAM,SAAS3B,GACZ+B,EAAMH,SAAS,CAAC5B,MAAKD,OAAO,qDAKhCL,GAAYA,EAASc,SAAWd,EAASc,QAAQI,WACjDlB,EAASc,QAAQI,UAAUC,iBAAiBC,QAAQ,SAASC,GACzDA,EAAMC,0CAwBd,IAAI2B,EAAMC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNC,IAAE,IAEFhD,EAAM,KAgBX,OAdKgC,KAAKlC,MAAMC,QACX4C,EAAM,MAGNX,KAAKlC,MAAME,MACXA,EACI4C,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,UAAYC,IACZC,MAAOpB,KAAKqB,0BACZrD,IAAOgC,KAAKlC,MAAME,IAClBsD,OAAK,KAKdV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACTvD,EACF4C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iCACTZ,EACDC,EAAAC,EAAAC,cAAA,SACIU,IAAK9D,EACL+D,UAAQ,EACRF,UAAU,wCACVX,EAAAC,EAAAC,cAAA,yDAEJF,EAAAC,EAAAC,cAAA,UACIY,QAAS1B,KAAKzB,eACdgD,UAAU,gCACVI,UAAW3B,KAAKlC,MAAMC,OACtB6C,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,UAAWN,UAAU,yDAlGrDO,aAwHRC,sBAAWC,YAdF,SAAAlE,GACpB,MAAO,CACHmE,eAAgBnE,EAAM6C,IAAIsB,eAC1B9C,SAAUrB,EAAM6C,IAAIxB,WAID,SAAA+C,GACvB,MAAO,CACHC,YAAa,SAACnE,GAAD,OAASkE,EAASE,IAAqBpE,KACpDoB,cAAe,SAACuB,EAAK1C,EAAIK,GAAV,OAAoB4D,EAASE,KAAwBzB,EAAK1C,EAAIK,OAI3D0D,CAA6CnE","file":"static/js/6.9e891737.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport uuid from 'uuid';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './Snapshot.css';\r\nimport { getImageURL } from '../../../../../../shared/utility';\r\nimport * as actions from '../../../../../../store/actions/index';\r\nimport Loader from '../../../../../../components/UI/Loader/Loader';\r\nimport Backdrop from '../../../../../../components/UI/Backdrop/Backdrop';\r\nimport Modal from '../../../../../../components/UI/Modal/Modal';\r\n\r\nlet videoRef = React.createRef(null);\r\nclass Snapshot extends Component {\r\n    state = {\r\n        start: false,\r\n        err: null,\r\n        id: this.props.match.params.id,\r\n        categ: this.props.match.params.categ,\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!('mediaDevices' in navigator)) {\r\n            navigator.mediaDevices = {};\r\n        }\r\n        let these = this;\r\n        if (!('getUserMedia' in navigator.mediaDevices)) {\r\n            navigator.mediaDevices.getUserMedia = function(constraints) {\r\n            var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        \r\n            if (!getUserMedia) {\r\n                return these.setState({err: 'getUserMedia is not implemented!'});\r\n            }\r\n        \r\n            return new Promise(function(resolve, reject) {\r\n                getUserMedia.call(navigator, constraints, resolve, reject);\r\n            });\r\n            }\r\n        }\r\n    \r\n        navigator.mediaDevices.getUserMedia({video: true})\r\n            .then(function(stream) {\r\n                videoRef.current.srcObject= stream;\r\n                these.setState({start: true})\r\n            })\r\n            .catch(function(err) {\r\n                these.setState({err, start: false})\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (videoRef && videoRef.current && videoRef.current.srcObject) {\r\n            videoRef.current.srcObject.getVideoTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        }\r\n    }\r\n\r\n    stopRecHandler = () => {\r\n        if (videoRef && videoRef.current) {\r\n            getImageURL(videoRef.current).then(imageData => {\r\n                videoRef.current.srcObject.getVideoTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n                this.props.history.goBack()\r\n                if (this.props.editChat) {\r\n                    this.props.onUploadMedia([{file: imageData, type: 'image', format: 'png', chatID: {mainID: this.props.editChat.mainID, chatID: this.props.editChat.chatID}}], this.state.id, this.state.categ)\r\n                } else {\r\n                    this.props.onUploadMedia([{file: imageData, type: 'image', format: 'png',chatID: uuid()}], this.state.id, this.state.categ)\r\n                }\r\n            }).catch(err => {\r\n                this.setState({err})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let cnt = <Loader \r\n            bg/>\r\n\r\n        let err = null;\r\n\r\n        if (this.state.start) {\r\n            cnt = null\r\n        }\r\n\r\n        if (this.state.err) {\r\n            err = (\r\n                <Backdrop \r\n                    component={ Modal }\r\n                    close={this.closeModelBackdropHandler}\r\n                    err={  this.state.err }\r\n                    media />\r\n            )\r\n        }\r\n\r\n       return(\r\n           <div className=\"site-main__chat--cam\">\r\n               { err }\r\n               <div className=\"site-main__chat--cam__wrapper\">\r\n                    {cnt }\r\n                    <video \r\n                        ref={videoRef}\r\n                        autoPlay\r\n                        className=\"site-main__chat--cam__video--wrapper\">\r\n                        <p>our browser doesn't support embedded videos</p>\r\n                    </video>\r\n                    <button \r\n                        onClick={this.stopRecHandler}\r\n                        className=\"site-main__chat--cam__control\"\r\n                        disabled={!this.state.start}>\r\n                        <FontAwesomeIcon icon={['fas', 'camera']} className=\"icon icon__site-main--chat__footer--camera\"/>\r\n                    </button>\r\n               </div>\r\n           </div>\r\n       )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        vidRecBackdrop: state.cnt.vidRecBackdrop,\r\n        editChat: state.cnt.editChat,\r\n    };\r\n }\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTypingErr: (err) => dispatch(actions.fetchCntFail(err)),\r\n        onUploadMedia: (cnt, id, categ) => dispatch(actions.uploadMediaInit(cnt, id, categ))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Snapshot)); "],"sourceRoot":""}