{"version":3,"sources":["containers/SiteMain/MainContent/MainModel/ModelEditor/ModelEditor.js"],"names":["ModelEditor","props","_this","Object","C_Users_g_my_sg_final_deploy_react_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_g_my_sg_final_deploy_react_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_g_my_sg_final_deploy_react_view_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","inputChangedHandler","editorState","setState","inputValue","closeEditorHandler","history","goBack","submitReplyHandler","cnt","JSON","stringify","convertToRaw","state","getCurrentContent","onSubmitComment","location","search","split","match","params","categ","submitStart","EditorState","createEmpty","resetInput","onResetInput","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","icon","react_draft_wysiwyg__WEBPACK_IMPORTED_MODULE_9__","id","data-matching-link","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","toolbar","options","inline","inDropdown","type","disabled","String","blocks","text","length","Component","withRouter","connect","dispatch","cntGp","modelType","actions"],"mappings":"8PAaMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAcVQ,oBAAsB,SAACC,GACnBR,EAAKS,SAAS,CAACC,WAAYF,KAhBZR,EAmBnBW,mBAAqB,WACjBX,EAAKD,MAAMa,QAAQC,UApBJb,EAuBnBc,mBAAqB,WACjB,IAAIC,EAAMC,KAAKC,UAAUC,uBAAalB,EAAKmB,MAAMT,WAAWU,sBAC5DpB,EAAKD,MAAMsB,gBAAgBrB,EAAKD,MAAMuB,SAASC,OAAOC,MAAM,KAAK,GAAIxB,EAAKD,MAAM0B,MAAMC,OAAOC,MAAOZ,EAAK,SACzGf,EAAKS,SAAS,CAACmB,aAAa,KAxB5B5B,EAAKmB,MAAQ,CACTT,WAAYmB,cAAYC,cACxBF,aAAa,GAJF5B,oFAQXG,KAAKgB,MAAMS,aAAezB,KAAKJ,MAAMgC,aACrC5B,KAAKM,SAAS,CAACC,WAAYmB,cAAYC,cAAeF,aAAa,IACnEzB,KAAKJ,MAAMiC,eACX7B,KAAKJ,MAAMa,QAAQC,2CAmBvB,OACIoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,iCACVC,QAASlC,KAAKQ,oBACdsB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,KAAM,CAAC,MAAO,SACdH,UAAU,MAQdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAACK,EAAA,OAAD,CACIC,GAAG,cACHC,qBAAmB,oBACnBC,iBAAiB,GACjBC,gBAAgB,oCAChBC,iBAAiB,6CACjBrC,YAAaL,KAAKgB,MAAMT,WACxBoC,oBAAqB3C,KAAKI,oBAC1BwC,QAAS,CACLC,QAAS,CAAC,SAAU,YAAa,QAAS,SAAU,WACpDC,OAAQ,CAAEC,YAAY,QAItCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,UACIgB,KAAK,SACLC,SAAUjD,KAAKJ,MAAM6B,aAAeyB,OAAOnC,uBAAaf,KAAKgB,MAAMT,WAAWU,qBAAqBkC,OAAO,GAAGC,MAAMC,OAAS,EAC5HnB,QAASlC,KAAKW,oBACdmB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,KAAM,CAAC,MAAO,SACdH,UAAU,iCANlB,oBAjENqB,aAiGXC,sBAAWC,YAdF,SAAAxC,GACpB,MAAO,CACHS,YAAaT,EAAMJ,IAAIa,YACvBG,WAAYZ,EAAMJ,IAAIgB,aAIH,SAAA6B,GACvB,MAAO,CACHvC,gBAAiB,SAACoB,EAAIoB,EAAO9C,EAAK+C,GAAjB,OAA+BF,EAASG,KAA0BtB,EAAIoB,EAAO9C,EAAK+C,KACnG9B,aAAc,kBAAM4B,EAASG,WAIXJ,CAA6C7D","file":"static/js/4.2a44c117.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './ModelEditor.css';\r\nimport '../../../../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { transformNumber, engStrings } from '../../../../../shared/utility';\r\nimport Aux from '../../../../../hoc/Auxs/Aux';\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nclass ModelEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: EditorState.createEmpty(),\r\n            submitStart: false\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.state.submitStart && this.props.resetInput){\r\n            this.setState({inputValue: EditorState.createEmpty(), submitStart: false})\r\n            this.props.onResetInput();\r\n            this.props.history.goBack();\r\n        }\r\n    }\r\n\r\n    inputChangedHandler = (editorState) => {\r\n        this.setState({inputValue: editorState})\r\n    }\r\n\r\n    closeEditorHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    submitReplyHandler = () => {\r\n        let cnt = JSON.stringify(convertToRaw(this.state.inputValue.getCurrentContent()))\r\n        this.props.onSubmitComment(this.props.location.search.split('=')[1], this.props.match.params.categ, cnt, 'reply')\r\n        this.setState({submitStart: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"reuse-view__editor--wrapper\">\r\n                <div className=\"reuse-view__editor--backdrop\">\r\n                    <div className=\"reuse-view__editor\">\r\n                        <div \r\n                            className=\"reuse-view__editor--main-close\"\r\n                            onClick={this.closeEditorHandler}>\r\n                            <FontAwesomeIcon \r\n                                icon={['fas', 'times']} \r\n                                className=\"\" />\r\n                            </div>\r\n                            {/* <ul class=\"reuse-view__comments--box__reply--header\">\r\n                                <li><div class=\"reuse-view__comments--box__reply--header__iconholder\"><i class=\"fas fa-image icon icon__reuse-view--reply__header\"></i></div></li>\r\n                                <li><div class=\"reuse-view__comments--box__reply--header__iconholder\"><i class=\"fas fa-camera icon icon__reuse-view--reply__header\"></i></div></li>\r\n                                <li><div class=\"reuse-view__comments--box__reply--header__iconholder\"><i class=\"fas fa-microphone icon icon__reuse-view--reply__mic\"></i></div></li>\r\n                                <li><div class=\"reuse-view__comments--box__reply--header__iconholder\"><i class=\"fas fa-file icon icon__reuse-view--reply__header\"></i></div></li>\r\n                            </ul> */}\r\n                            <div className=\"reuse-view__editor--content\">\r\n                                <div className=\"reuse-view__form--field__wrapper\">\r\n                                    <Editor \r\n                                        id=\"Add-Comment\" \r\n                                        data-matching-link=\"#Add-Comment-link\"\r\n                                        wrapperClassName=\"\"\r\n                                        editorClassName=\"reuse-view__form--field__textarea\"\r\n                                        toolbarClassName=\"reuse-view__form--field__textarea--toolbar\"\r\n                                        editorState={this.state.inputValue}\r\n                                        onEditorStateChange={this.inputChangedHandler} \r\n                                        toolbar={{\r\n                                            options: ['inline', 'blockType', 'emoji', 'remove', 'history'],\r\n                                            inline: { inDropdown: true }\r\n                                    }}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"reuse-view__editor--footer\">\r\n                                <button \r\n                                    type=\"button\"\r\n                                    disabled={this.props.submitStart || String(convertToRaw(this.state.inputValue.getCurrentContent()).blocks[0].text).length < 6} \r\n                                    onClick={this.submitReplyHandler}>\r\n                                    <FontAwesomeIcon \r\n                                        icon={['fas', 'reply']} \r\n                                        className=\"icon icon__reuse-view--reply\" />\r\n                                    Reply\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        submitStart: state.cnt.submitStart,\r\n        resetInput: state.cnt.resetInput\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitComment: (id, cntGp, cnt, modelType) => dispatch(actions.submitCommentInit(id, cntGp, cnt, modelType)),\r\n        onResetInput: () => dispatch(actions.resetInput())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ModelEditor));"],"sourceRoot":""}