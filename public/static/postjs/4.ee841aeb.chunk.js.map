{"version":3,"sources":["components/Main/MediaItems/MediaItem/MediaItem.js","components/Main/MediaItems/MediaItems.js","containers/SiteMain/MainContent/Form/AddImage/AddImage.js"],"names":["mediaItem","props","mediaCntClass","mediaCloseClass","mediaType","react_default","a","createElement","src","link","alt","className","index","removeMediaItemIndex","push","controls","join","onClick","removeMediaItem","onMouseEnter","removeMediaItemEnable","onMouseLeave","removeMediaItemDisable","index_es","icon","mediaItems","media","map","MediaItem","key","url","bind","id","AddImage","state","inputValue","_this","image","Object","C_Users_g_my_sg_final_deploy_react_addpost_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","snapshotErr","linkVerifyHandler","event","target","value","setState","onCheckLink","addMediaHandler","linkValid","getImageURL","then","dataUrl","file","onResetLink","catch","err","reader","FileReader","these","C_Users_g_my_sg_final_deploy_react_addpost_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","readAsDataURL","addEventListener","result","this","selectMediaHandler","stopPropagation","preventDefault","files","handleFiles","dragEnterMediaHandler","dragOverMediaHandler","dropMediaHandler","dataTransfer","removeMediaItemEnableHandler","removeMediaItemDisableHandler","removeMediaItemHandler","updatedMedia","filter","CurIndex","length","onRemoveMedia","updateObject","_loop","i","type","startsWith","window","URL","createObjectURL","submitMediaHandler","C_Users_g_my_sg_final_deploy_react_addpost_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onSubmitMedia","closeMediaBoxHandler","onhideMediaBox","mediaPreview","mediaAddedViewer","react__WEBPACK_IMPORTED_MODULE_8___default","message","_components_Main_MediaItems_MediaItems__WEBPACK_IMPORTED_MODULE_13__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","name","placeholder","onChange","spellCheck","pattern","disabled","multiple","onDragEnter","onDragOver","onDrop","accept","Component","connect","form","dispatch","imageLink","actions"],"mappings":"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","file":"static/js/4.ee841aeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst mediaItem = props => {\r\n    let mediaCntClass = ['reuse-form__itm--det__view-select--media__wrapper'];\r\n    let mediaCloseClass = ['reuse-form__itm--det__view-select--media__wrapper--close'];\r\n\r\n    let mediaType = (\r\n            <img \r\n                src={props.link} \r\n                alt=\"post\"\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\"/>\r\n    );\r\n\r\n    if (props.index === props.removeMediaItemIndex) {\r\n        mediaCntClass.push('reuse-form__itm--det__view-select--media__wrapper--active');\r\n        mediaCloseClass.push('reuse-form__itm--det__view-select--media__wrapper--close__active');\r\n    }\r\n\r\n    if (props.mediaType === 'video') {\r\n        mediaType = (\r\n            <video \r\n                src={props.link} \r\n                controls\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\">\r\n                <p>our browser doesn't support embedded videos</p>\r\n            </video>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"reuse-form__itm--det__view-select--media\">\r\n            <div className={mediaCntClass.join(' ')}>\r\n                { mediaType }\r\n                <div \r\n                    className={mediaCloseClass.join(' ')}\r\n                    onClick={props.removeMediaItem}\r\n                    onMouseEnter={props.removeMediaItemEnable}\r\n                    onMouseLeave={props.removeMediaItemDisable}>\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'times']} \r\n                        className=\"icon icon__reuse-form--view-select__close\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mediaItem;","import React from 'react';\r\n\r\nimport MediaItem from './MediaItem/MediaItem';\r\n\r\nconst mediaItems = props => {\r\n    const allMedia = props.media.map((link, index) => (\r\n        <MediaItem\r\n            key={index}\r\n            link={link.url}\r\n            index={index}\r\n            mediaType={props.mediaType}\r\n            removeMediaItem={props.removeMediaItem.bind(this, link.id)}\r\n            removeMediaItemEnable={props.removeMediaItemEnable.bind(this, index)}\r\n            removeMediaItemDisable={props.removeMediaItemDisable.bind(this, index)}\r\n            removeMediaItemIndex={props.removeMediaItemIndex}/>\r\n    ));\r\n    return allMedia;\r\n}\r\n\r\nexport default mediaItems;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport { updateObject, getImageURL } from '../../../../../shared/utility';\r\nimport MediaItems from '../../../../../components/Main/MediaItems/MediaItems';\r\n\r\nclass AddImage extends Component {\r\n    state = {\r\n        inputValue: '',\r\n        media: this.props.media.image ? [...this.props.media.image] : [],\r\n        removeMediaItemIndex: null,\r\n        snapshotErr: null\r\n    };\r\n\r\n    linkVerifyHandler = (event) => {\r\n        let inputValue =  event.target.value;\r\n        this.setState({inputValue, snapshotErr: null});\r\n        this.props.onCheckLink(inputValue);\r\n    }\r\n\r\n    addMediaHandler = () => {\r\n        if (this.props.linkValid && this.props.linkValid.media) {\r\n            let media = [...this.state.media];\r\n            getImageURL(this.props.linkValid.media.url).then(dataUrl => {\r\n                media.push({file: dataUrl, url: this.props.linkValid.media.url});\r\n                this.setState({\r\n                    media: media,  inputValue: ''});\r\n                this.props.onResetLink();\r\n            }).catch(err => {\r\n                let reader = new FileReader();\r\n                let these = this;\r\n                reader.readAsDataURL(this.props.linkValid.media.file)\r\n                reader.addEventListener('loadend', function() {\r\n                    media.push({file: reader.result, url: this.props.linkValid.media.url});\r\n                    these.setState({\r\n                        media: media,  inputValue: '',\r\n                        snapshotErr: err});\r\n                    these.props.onResetLink();\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    selectMediaHandler = (event) => {\r\n        this.setState({snapshotErr: null});\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.target.files) {\r\n            const files = event.target.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    dragEnterMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dragOverMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dropMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.dataTransfer) {\r\n            const dt = event.dataTransfer;\r\n            const files = dt.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    removeMediaItemEnableHandler = (index) => {\r\n        this.setState({removeMediaItemIndex: index})\r\n    }\r\n\r\n    removeMediaItemDisableHandler = () => {\r\n        this.setState({removeMediaItemIndex: null})\r\n    }\r\n    \r\n    removeMediaItemHandler = (index) => {\r\n        let media = [...this.state.media];\r\n        let updatedMedia = media.filter((link, CurIndex)=>  CurIndex !== index);\r\n        this.setState({media:  updatedMedia});\r\n        if (this.props.media.image && this.props.media.image.length > 0) {\r\n            this.props.onRemoveMedia(updateObject(this.props.media, {image: updatedMedia}))\r\n        }\r\n    }\r\n\r\n    handleFiles = (files) => {\r\n        let media = [...this.state.media];\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n            if(file.type.startsWith('image/')) {\r\n                let url = window.URL.createObjectURL(file)\r\n                getImageURL(url).then(dataUrl => {\r\n                    media.push({file: dataUrl, url});\r\n                    this.setState({media});\r\n                }).catch(err => {\r\n                    let reader = new FileReader();\r\n                    let these = this;\r\n                    reader.readAsDataURL(file)\r\n                    reader.addEventListener('loadend', function() {\r\n                        media.push({file: reader.result, url});\r\n                        these.setState({media, snapshotErr: err});\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    submitMediaHandler = () => {\r\n        let media = {...this.props.media};\r\n        this.props.onSubmitMedia(updateObject(media, {image: [...this.state.media]}));\r\n    }\r\n\r\n    closeMediaBoxHandler = () => {\r\n        this.props.onhideMediaBox();\r\n    }\r\n\r\n\r\n    render() {\r\n        let mediaPreview = null;\r\n        let mediaAddedViewer = null;\r\n\r\n        if (this.props.linkValid) {\r\n            mediaPreview = this.props.linkValid.media ? (\r\n                <img src={this.props.linkValid.media.url}  alt=\"post\" />\r\n            ): <div className=\"reuse-form__err\">{ this.props.linkValid.err.message}</div>\r\n        }\r\n\r\n        if (this.state.media.length > 0) {\r\n            mediaAddedViewer = (\r\n                <div className=\"reuse-form__itm--det__view-select\">\r\n                    <MediaItems \r\n                       media={this.state.media}\r\n                       mediaType=\"image\"\r\n                       removeMediaItemEnable={this.removeMediaItemEnableHandler}\r\n                       removeMediaItemDisable={this.removeMediaItemDisableHandler}\r\n                       removeMediaItemIndex={this.state.removeMediaItemIndex}\r\n                       removeMediaItem={this.removeMediaItemHandler}/>\r\n                </div>\r\n            ); \r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-form__itm\">\r\n                <h4 className=\"reuse-form__itm--title\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'images']}\r\n                        className=\"icon icon__reuse-form--itm--title\" />\r\n                  Add Image\r\n                </h4>\r\n                <div className=\"reuse-form__itm--det\">\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <label className=\"reuse-form__cnt--title\">Image Link</label>\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <input \r\n                                type=\"url\" \r\n                                name=\"\" \r\n                                className=\"reuse-form__cnt--det__input reuse-form__cnt--det__input--lg\" \r\n                                placeholder=\"paste link\"\r\n                                onChange={this.linkVerifyHandler}\r\n                                value={this.state.inputValue}\r\n                                spellCheck={false}\r\n                                pattern=\"https://.*\"/>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={this.addMediaHandler}\r\n                                    disabled={this.props.linkValid ? this.props.linkValid.err !== null : true}\r\n                                    className=\"reuse-form__cnt--det__btn\">\r\n                                    <FontAwesomeIcon \r\n                                    icon={['fas', 'plus']} />\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__view\">\r\n                        { mediaPreview }\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__alt\">\r\n                        OR\r\n                    </div>\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <div className=\"reuse-form__cnt--det__fil\">\r\n                                Drag and Drop Images\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"\"\r\n                                    multiple\r\n                                    className=\"reuse-form__cnt--det__fil--input\"\r\n                                    onChange={this.selectMediaHandler}\r\n                                    onDragEnter={this.dragEnterMediaHandler}\r\n                                    onDragOver={this.dragOverMediaHandler}\r\n                                    onDrop={this.dropMediaHandler}\r\n                                    accept=\"image/*\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.snapshotErr ? \r\n                        <div className=\"reuse-form__err\">Some features are not available in your browser, { this.state.snapshotErr }</div> : null}\r\n                    { mediaAddedViewer }\r\n                </div>\r\n                <div className=\"reuse-form__itm--footer reuse-form__btn\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--close\"\r\n                        onClick={this.closeMediaBoxHandler}>Exit</button>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--add\"\r\n                        onClick={this.submitMediaHandler}\r\n                        disabled={!this.state.media.length > 0}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        linkValid: state.form.linkValid,\r\n        media: state.form.media\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCheckLink: (imageLink) => dispatch(actions.checkLinkInit(imageLink, 'image')),\r\n        onResetLink: () => dispatch(actions.resetLink()),\r\n        onRemoveMedia: (media) => dispatch(actions.removeMedia(media)),\r\n        onSubmitMedia: (media) => dispatch(actions.submitMedia(media)),\r\n        onhideMediaBox: () => dispatch(actions.hideMediaBox())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddImage)"],"sourceRoot":""}