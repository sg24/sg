{"version":3,"sources":["components/Main/MediaItems/MediaItem/MediaItem.js","components/Main/MediaItems/MediaItems.js","containers/SiteMain/MainContent/Form/AddImage/AddImage.js"],"names":["mediaItem","props","mediaCntClass","mediaCloseClass","mediaType","react_default","a","createElement","src","link","alt","className","index","removeMediaItemIndex","push","controls","join","onClick","removeMediaItem","onMouseEnter","removeMediaItemEnable","onMouseLeave","removeMediaItemDisable","index_es","icon","mediaItems","media","map","MediaItem","key","url","bind","id","AddImage","state","inputValue","_this","image","Object","C_Users_g_my_sg_final_deploy_react_editque_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","snapshotErr","linkVerifyHandler","event","target","value","setState","onCheckLink","addMediaHandler","linkValid","getImageURL","then","dataUrl","file","uuid","onResetLink","catch","err","reader","FileReader","these","C_Users_g_my_sg_final_deploy_react_editque_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","readAsDataURL","addEventListener","result","this","imageEdit","onImageEdit","selectMediaHandler","stopPropagation","preventDefault","files","handleFiles","dragEnterMediaHandler","dragOverMediaHandler","dropMediaHandler","dataTransfer","removeMediaItemEnableHandler","removeMediaItemDisableHandler","removeMediaItemHandler","updatedMedia","filter","length","onRemoveMedia","updateObject","editImage","_loop","i","type","startsWith","window","URL","createObjectURL","submitMediaHandler","C_Users_g_my_sg_final_deploy_react_editque_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","onSubmitMedia","closeMediaBoxHandler","onhideMediaBox","mediaPreview","mediaAddedViewer","react__WEBPACK_IMPORTED_MODULE_8___default","message","_components_Main_MediaItems_MediaItems__WEBPACK_IMPORTED_MODULE_14__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","name","placeholder","onChange","spellCheck","pattern","disabled","multiple","onDragEnter","onDragOver","onDrop","accept","Component","connect","form","dispatch","imageLink","actions"],"mappings":"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","file":"static/js/3.c44b6ea3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst mediaItem = props => {\r\n    let mediaCntClass = ['reuse-form__itm--det__view-select--media__wrapper'];\r\n    let mediaCloseClass = ['reuse-form__itm--det__view-select--media__wrapper--close'];\r\n\r\n    let mediaType = (\r\n            <img \r\n                src={props.link} \r\n                alt=\"post\"\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\"/>\r\n    );\r\n\r\n    if (props.index === props.removeMediaItemIndex) {\r\n        mediaCntClass.push('reuse-form__itm--det__view-select--media__wrapper--active');\r\n        mediaCloseClass.push('reuse-form__itm--det__view-select--media__wrapper--close__active');\r\n    }\r\n\r\n    if (props.mediaType === 'video') {\r\n        mediaType = (\r\n            <video \r\n                src={props.link} \r\n                controls\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\">\r\n                <p>our browser doesn't support embedded videos</p>\r\n            </video>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"reuse-form__itm--det__view-select--media\">\r\n            <div className={mediaCntClass.join(' ')}>\r\n                { mediaType }\r\n                <div \r\n                    className={mediaCloseClass.join(' ')}\r\n                    onClick={props.removeMediaItem}\r\n                    onMouseEnter={props.removeMediaItemEnable}\r\n                    onMouseLeave={props.removeMediaItemDisable}>\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'times']} \r\n                        className=\"icon icon__reuse-form--view-select__close\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mediaItem;","import React from 'react';\r\n\r\nimport MediaItem from './MediaItem/MediaItem';\r\n\r\nconst mediaItems = props => {\r\n    const allMedia = props.media.map((link, index) => (\r\n        <MediaItem\r\n            key={index}\r\n            link={link.url}\r\n            index={index}\r\n            mediaType={props.mediaType}\r\n            removeMediaItem={props.removeMediaItem.bind(this, link.id)}\r\n            removeMediaItemEnable={props.removeMediaItemEnable.bind(this, index)}\r\n            removeMediaItemDisable={props.removeMediaItemDisable.bind(this, index)}\r\n            removeMediaItemIndex={props.removeMediaItemIndex}/>\r\n    ));\r\n    return allMedia;\r\n}\r\n\r\nexport default mediaItems;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport uuid from 'uuid';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport { updateObject, getImageURL } from '../../../../../shared/utility';\r\nimport MediaItems from '../../../../../components/Main/MediaItems/MediaItems';\r\n\r\nclass AddImage extends Component {\r\n    state = {\r\n        inputValue: '',\r\n        media: this.props.media.image ? [...this.props.media.image] : [],\r\n        removeMediaItemIndex: null,\r\n        snapshotErr: null\r\n    };\r\n\r\n    linkVerifyHandler = (event) => {\r\n        let inputValue =  event.target.value;\r\n        this.setState({inputValue, snapshotErr: null});\r\n        this.props.onCheckLink(inputValue);\r\n    }\r\n\r\n    addMediaHandler = () => {\r\n        if (this.props.linkValid && this.props.linkValid.media) {\r\n            let media = [...this.state.media];\r\n            getImageURL(this.props.linkValid.media.url).then(dataUrl => {\r\n                media.push({file: dataUrl, url: this.props.linkValid.media.url, id: uuid()});\r\n                this.setState({\r\n                    media: media,  inputValue: ''});\r\n                this.props.onResetLink();\r\n            }).catch(err => {\r\n                let reader = new FileReader();\r\n                let these = this;\r\n                reader.readAsDataURL(this.props.linkValid.media.file)\r\n                reader.addEventListener('loadend', function() {\r\n                    media.push({file: reader.result, url: this.props.linkValid.media.url, id: uuid()});\r\n                    these.setState({\r\n                        media: media,  inputValue: '',\r\n                        snapshotErr: err});\r\n                    these.props.onResetLink();\r\n                })\r\n            })\r\n            if (!this.props.imageEdit) {\r\n                this.props.onImageEdit()\r\n            }\r\n        }\r\n    }\r\n\r\n    selectMediaHandler = (event) => {\r\n        this.setState({snapshotErr: null});\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.target.files) {\r\n            const files = event.target.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    dragEnterMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dragOverMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dropMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.dataTransfer) {\r\n            const dt = event.dataTransfer;\r\n            const files = dt.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    removeMediaItemEnableHandler = (index) => {\r\n        this.setState({removeMediaItemIndex: index})\r\n    }\r\n\r\n    removeMediaItemDisableHandler = () => {\r\n        this.setState({removeMediaItemIndex: null})\r\n    }\r\n    \r\n    removeMediaItemHandler = (id) => {\r\n        if (!this.props.imageEdit) {\r\n            this.props.onImageEdit()\r\n        }\r\n        let media = [...this.state.media];\r\n        let updatedMedia = media.filter(link =>  link.id !== id);\r\n        this.setState({media:  updatedMedia});\r\n        if (this.props.media.image && this.props.media.image.length > 0) {\r\n            this.props.onRemoveMedia(updateObject(this.props.media, {image: updatedMedia}))\r\n        }\r\n    }\r\n\r\n    handleFiles = (files) => {\r\n        let media = [...this.state.media];\r\n        if (!this.props.editImage) {\r\n            this.props.onImageEdit()\r\n        }\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n            if(file.type.startsWith('image/')) {\r\n                let url = window.URL.createObjectURL(file)\r\n                getImageURL(url).then(dataUrl => {\r\n                    media.push({file: dataUrl, url, id: uuid()});\r\n                    this.setState({media});\r\n                }).catch(err => {\r\n                    let reader = new FileReader();\r\n                    let these = this;\r\n                    reader.readAsDataURL(file)\r\n                    reader.addEventListener('loadend', function() {\r\n                        media.push({file: reader.result, url, id: uuid()});\r\n                        these.setState({media, snapshotErr: err});\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    submitMediaHandler = () => {\r\n        let media = {...this.props.media};\r\n        this.props.onSubmitMedia(updateObject(media, {image: [...this.state.media]}));\r\n    }\r\n\r\n    closeMediaBoxHandler = () => {\r\n        this.props.onhideMediaBox();\r\n    }\r\n\r\n\r\n    render() {\r\n        let mediaPreview = null;\r\n        let mediaAddedViewer = null;\r\n\r\n        if (this.props.linkValid) {\r\n            mediaPreview = this.props.linkValid.media ? (\r\n                <img src={this.props.linkValid.media.url}  alt=\"post\" />\r\n            ): <div className=\"reuse-form__err\">{ this.props.linkValid.err.message}</div>\r\n        }\r\n\r\n        if (this.state.media.length > 0) {\r\n            mediaAddedViewer = (\r\n                <div className=\"reuse-form__itm--det__view-select\">\r\n                    <MediaItems \r\n                       media={this.state.media}\r\n                       mediaType=\"image\"\r\n                       removeMediaItemEnable={this.removeMediaItemEnableHandler}\r\n                       removeMediaItemDisable={this.removeMediaItemDisableHandler}\r\n                       removeMediaItemIndex={this.state.removeMediaItemIndex}\r\n                       removeMediaItem={this.removeMediaItemHandler}/>\r\n                </div>\r\n            ); \r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-form__itm\">\r\n                <h4 className=\"reuse-form__itm--title\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'images']}\r\n                        className=\"icon icon__reuse-form--itm--title\" />\r\n                  Add Image\r\n                </h4>\r\n                <div className=\"reuse-form__itm--det\">\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <label className=\"reuse-form__cnt--title\">Image Link</label>\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <input \r\n                                type=\"url\" \r\n                                name=\"\" \r\n                                className=\"reuse-form__cnt--det__input reuse-form__cnt--det__input--lg\" \r\n                                placeholder=\"paste link\"\r\n                                onChange={this.linkVerifyHandler}\r\n                                value={this.state.inputValue}\r\n                                spellCheck={false}\r\n                                pattern=\"https://.*\"/>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={this.addMediaHandler}\r\n                                    disabled={this.props.linkValid ? this.props.linkValid.err !== null : true}\r\n                                    className=\"reuse-form__cnt--det__btn\">\r\n                                    <FontAwesomeIcon \r\n                                    icon={['fas', 'plus']} />\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__view\">\r\n                        { mediaPreview }\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__alt\">\r\n                        OR\r\n                    </div>\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <div className=\"reuse-form__cnt--det__fil\">\r\n                                Drag and Drop Images\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"\"\r\n                                    multiple\r\n                                    className=\"reuse-form__cnt--det__fil--input\"\r\n                                    onChange={this.selectMediaHandler}\r\n                                    onDragEnter={this.dragEnterMediaHandler}\r\n                                    onDragOver={this.dragOverMediaHandler}\r\n                                    onDrop={this.dropMediaHandler}\r\n                                    accept=\"image/*\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.snapshotErr ? \r\n                        <div className=\"reuse-form__err\">Some features are not available in your browser, { this.state.snapshotErr }</div> : null}\r\n                    { mediaAddedViewer }\r\n                </div>\r\n                <div className=\"reuse-form__itm--footer reuse-form__btn\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--close\"\r\n                        onClick={this.closeMediaBoxHandler}>Exit</button>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--add\"\r\n                        onClick={this.submitMediaHandler}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        linkValid: state.form.linkValid,\r\n        media: state.form.media,\r\n        editImage: state.form.editImage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCheckLink: (imageLink) => dispatch(actions.checkLinkInit(imageLink, 'image')),\r\n        onResetLink: () => dispatch(actions.resetLink()),\r\n        onImageEdit: () => dispatch(actions.imageEdit()),\r\n        onRemoveMedia: (media) => dispatch(actions.removeMedia(media)),\r\n        onSubmitMedia: (media) => dispatch(actions.submitMedia(media)),\r\n        onhideMediaBox: () => dispatch(actions.hideMediaBox()) \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddImage)"],"sourceRoot":""}