{"version":3,"sources":["containers/SiteMain/Share/Input/FilterUser/FilterUser.js","containers/SiteMain/Share/Input/FilterUserSelect/FilterUserSelect.js","containers/SiteMain/Share/Input/Input.js","components/ShareContent/Users/User/User.js","components/ShareContent/Users/Users.js","containers/SiteMain/Share/SelectUsers/Users/Users.js","containers/SiteMain/Share/SelectUsers/UserSelect/UserSelect.js","containers/SiteMain/Share/SelectUsers/SelectUsers.js","components/ShareContent/ShareUsers/ShareUsers.js","components/ShareContent/SocialMed/SocialMed.js","components/ShareContent/SwitchOpt/SwitchOpt.js","containers/SiteMain/Share/ShareOpt/ShareOpt.js","containers/SiteMain/Share/Share.js"],"names":["FilterUser","state","inputValue","filterContentHandler","event","setState","target","value","props","onFilterUser","users","className","placeholder","autoFocus","onChange","this","Component","connect","share","dispatch","filterContent","actions","FilterUserSelect","onFilterUserSelect","userSelect","Input","input","viewAllUsers","user","userClass","userSelectClass","userImg","src","userDet","image","alt","userStatus","status","username","name","size","round","selectedUser","length","id","push","onClick","selected","join","href","student","icon","Users","content","map","index","key","bind","showSelectedUserHandler","userArray","filter","updateUser","updateUsers","onSelectUser","newUser","concat","prevState","onFetchUsers","Loader","filterUser","UserSelect","removeSelectedUserHandler","userObj","updateUserSelect","onRemoveUser","filterUserSelect","JSON","stringify","SelectUsers","shareUsers","viewUsers","Aux","shareUser","socialMed","socialIcnClass","switchOpt","shareFacebook","shareTwitter","ShareOpt","showSocialMed","showShareUser","switchShareOptHandler","viewUsersHandler","onViewUsers","shareUserHandler","onShareUser","shareID","cntType","facebookShareHandler","facebookWindow","window","open","document","location","origin","focus","twitterShareHandler","twitterWindow","show","Share","closeShareHandler","history","goBack","onDefaultShareProps","shareCnt","start","cnt","shareErr","Modal","err","withRouter","auth"],"mappings":"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","file":"static/js/3.81a68873.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nclass FilterUser extends Component  {\r\n    state = {\r\n        inputValue: ''\r\n    };\r\n\r\n    filterContentHandler = (event) => {\r\n        this.setState({inputValue: event.target.value})\r\n        this.props.onFilterUser(this.props.users, event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n            className=\"reuse-share__search--cnt\" \r\n            placeholder=\"search user....\" \r\n            autoFocus\r\n            onChange={this.filterContentHandler} \r\n            value={this.state.inputValue}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSateToProps = state => {\r\n    return {\r\n        users: state.share.users\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFilterUser: (users,filterContent) => dispatch(\r\n                actions.filterUserInit(users, filterContent))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapSateToProps, mapDispatchToProps)(FilterUser); ","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nclass FilterUserSelect extends Component  {\r\n    state = {\r\n        inputValue: ''\r\n    };\r\n\r\n    filterContentHandler = (event) => {\r\n        this.props.onFilterUserSelect(\r\n                event.target.value,\r\n                this.props.userSelect);\r\n        this.setState({inputValue: event.target.value})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFilterUserSelect('', this.props.userSelect);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n                className=\"reuse-share__search--cnt\" \r\n                placeholder=\"search user selected....\" \r\n                autoFocus\r\n                onChange={this.filterContentHandler} \r\n                value={this.state.inputValue}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userSelect: state.share.userSelect\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFilterUserSelect: (filterContent, userSelect) => dispatch(\r\n                actions.filterUserSelectInit(filterContent, userSelect))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUserSelect);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Input.css';\r\nimport FilterUser from './FilterUser/FilterUser'; \r\nimport FilterUserSelect from './FilterUserSelect/FilterUserSelect'; \r\n\r\nclass Input extends Component {\r\n    render() {\r\n        let input = <FilterUser />;\r\n\r\n        if (!this.props.viewAllUsers) {\r\n            input = <FilterUserSelect />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-share__search\">\r\n                { input }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        viewAllUsers: state.share.viewAllUsers\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, null)(Input);","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Avatar from 'react-avatar';\r\n\r\nimport './User.css';\r\nconst user = props => {\r\n    let userClass = ['reuse-user__det'];\r\n    let userSelectClass = ['reuse-user__det--select'];\r\n    let userImg = <img src={props.userDet.image} alt=\"\"/>;\r\n\r\n    let userStatus = (\r\n        <div className=\"reuse-user__det--img__status reuse-user__det--img__status--on\">\r\n        </div>\r\n    );\r\n\r\n    if (!props.userDet.status) {\r\n        userStatus = (\r\n            <div className=\"reuse-user__det--img__status reuse-user__det--img__status--off\">\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n    if (props.userDet.username && !props.userDet.image) {\r\n        userImg = <Avatar  name={props.userDet.username} size='60' round />;\r\n    }\r\n\r\n    if (props.selectedUser.length > 0) {\r\n        for (let user of props.selectedUser) {\r\n            if (user.id === props.id) {\r\n                userClass.push('reuse-user__det--clk');\r\n                userSelectClass.push('reuse-user__det--select__clk > svg')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div  \r\n                className=\"reuse-user\"\r\n                onClick={props.selected}>\r\n                <div className={userClass.join(' ')}>\r\n                    <div className=\"reuse-user__det--img\">\r\n                        {userImg}\r\n                        { userStatus }\r\n                    </div>\r\n                    <ul className=\"reuse-user__det--user\">\r\n                        <li className=\"reuse-user__det--user__info\">  \r\n                            <a href={'/user/profile/' + props.userDet.id}>{ props.userDet.username }</a>\r\n                        </li>\r\n                        <li><div>{ props.userDet.student }</div> Student</li> \r\n                    </ul>\r\n                    <div className={userSelectClass.join(' ')}>\r\n                        <FontAwesomeIcon\r\n                            icon={['fas', 'check-circle']} />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default user;","import React from 'react';\r\n\r\nimport User from './User/User';\r\n\r\nconst Users = props => {\r\n    const allUsers = props.content.map((user, index) => (\r\n        <User \r\n            key={index}\r\n            userDet={user}\r\n            selected={props.selected.bind(this, user)}\r\n            selectedUser={props.selectedUser}\r\n            id={user.id}/> \r\n    ));\r\n\r\n    return allUsers;\r\n};\r\n\r\nexport default Users;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Users.css';\r\nimport User from '../../../../../components/ShareContent/Users/Users';\r\nimport Loader from '../../../../../components/UI/Loader/Loader';\r\nimport * as actions from '../../../../../store/actions/index';\r\n \r\nclass Users extends Component {\r\n    state = {\r\n        users: this.props.userSelect ? this.props.userSelect : []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchUsers();\r\n    }\r\n\r\n    showSelectedUserHandler = (user) => {\r\n        let userArray = this.state.users.filter(userDet => userDet.id === user.id)\r\n        \r\n        if (userArray.length > 0) {\r\n            const updateUser = {...userArray[0]};\r\n            const users = [...this.state.users];\r\n            let updateUsers = users.filter(user => user.id !== updateUser.id)\r\n            this.setState({\r\n                users: updateUsers\r\n            });\r\n            this.props.onSelectUser(updateUsers)\r\n            return\r\n        }\r\n\r\n        let newUser = this.state.users.concat(user);\r\n        this.props.onSelectUser(newUser)\r\n        this.setState(prevState => {\r\n            return {\r\n                users: newUser\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let users = <Loader />;\r\n\r\n        if (this.props.users) {\r\n            users = (\r\n                <div className=\"reuse-share__all-users\">\r\n                    <User \r\n                        content={this.props.filterUser ? this.props.filterUser : this.props.users}\r\n                        selected={this.showSelectedUserHandler}\r\n                        selectedUser={this.state.users}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return users\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.share.users,\r\n        userSelect: state.share.userSelect,\r\n        filterUser: state.share.filterUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchUsers: () => dispatch(actions.fetchUsersInit()),\r\n        onSelectUser: (users) => dispatch(actions.userSelect(users))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './UserSelect.css';\r\nimport User from '../../../../../components/ShareContent/Users/Users';\r\nimport Loader from '../../../../../components/UI/Loader/Loader';\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nclass UserSelect extends Component {\r\n    state = {\r\n        users: this.props.userSelect \r\n    };\r\n\r\n    removeSelectedUserHandler = (user) => {\r\n        const userArray = this.state.users.filter(userObj => userObj.id === user.id)\r\n        \r\n        if (userArray.length > 0) {\r\n            const updateUser = {...userArray[0]};\r\n            const users = [...this.state.users];\r\n            const updateUsers = users.filter(user => user.id !== updateUser.id);\r\n            const updateUserSelect = this.props.userSelect.filter(user => user.id !== updateUser.id);\r\n            this.props.onRemoveUser(updateUserSelect);\r\n            this.props.onFilterUserSelect(null, updateUsers);\r\n            this.setState({\r\n                users: updateUsers\r\n            });\r\n            return\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.filterUserSelect && JSON.stringify(this.state.users) !== JSON.stringify(this.props.filterUserSelect)) {\r\n            this.setState({\r\n                    users: this.props.filterUserSelect\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let users = <Loader />;\r\n\r\n        if (this.state.users) {\r\n            users = <User \r\n                content={this.state.users}\r\n                selected={this.removeSelectedUserHandler}\r\n                selectedUser={this.state.users}/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-share__user-select\">\r\n                <h4 className=\"reuse-share__user-select--title\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'users']} \r\n                        className=\"icon icon__reuse-share--user\" /> \r\n                    User Selected\r\n                </h4>\r\n                {users}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userSelect: state.share.userSelect,\r\n        filterUserSelect: state.share.filterUserSelect\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRemoveUser: (users) => dispatch(actions.removeUser(users)),\r\n        onFilterUserSelect: (filterContent, userSelect) => dispatch(\r\n            actions.filterUserSelectInit(filterContent, userSelect))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSelect);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Users from './Users/Users';\r\nimport UserSelect from './UserSelect/UserSelect';\r\n\r\nclass SelectUsers extends Component {\r\n    render() {\r\n        let users = <Users />\r\n        \r\n        if (!this.props.viewAllUsers) {\r\n            users = <UserSelect />\r\n        }\r\n        return users\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n    viewAllUsers: state.share.viewAllUsers  \r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SelectUsers);","import React from 'react';\r\n\r\nimport './ShareUsers.css'\r\nimport Aux from '../../../hoc/Auxs/Aux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst shareUsers = props =>  {\r\n\r\n    let viewUsers = (\r\n        <Aux>\r\n            <FontAwesomeIcon \r\n                icon={['fas', 'users']} \r\n                className=\"icon__reuse-share--view\" />\r\n            Users\r\n        </Aux>\r\n    );\r\n \r\n    if (props.viewAllUsers) {\r\n        viewUsers = (\r\n            <Aux>\r\n                <FontAwesomeIcon \r\n                    icon={['far', 'eye']} \r\n                    className=\"icon__reuse-share--view\" />\r\n                View \r\n            </Aux>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"reuse-share__user-counter reuse-share__user-counter--more-opt\">\r\n            <div className=\"reuse-share__user-counter--share\" onClick={props.shareUser}>\r\n                <FontAwesomeIcon \r\n                    icon={['fas', 'location-arrow']} \r\n                    className=\"icon icon__reuse-share--share\" />\r\n                Share \r\n                <div className=\"reuse-share__user-counter--share__select\">\r\n                    {props.userSelect.length}\r\n                </div>\r\n            </div>\r\n            <div className=\"reuse-share__user-counter--view\" onClick={props.viewUsers}>\r\n                {viewUsers}\r\n            </div>\r\n        </div>       \r\n    );\r\n}\r\n\r\n\r\nexport default shareUsers;","import React from 'react';\r\n\r\nimport './SocialMed.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst socialMed = props => {\r\n    let socialIcnClass = ['reuse-share__social-icn'];\r\n\r\n    if (props.switchOpt) {\r\n        socialIcnClass.push('reuse-share__social-icn--more-opt');\r\n    };\r\n\r\n    return (\r\n        <ul className={socialIcnClass.join(' ')}>\r\n            <li onClick={props.shareFacebook}>\r\n                <FontAwesomeIcon \r\n                    icon={['fab', 'facebook-square']} \r\n                    className=\"icon icon__reuse-share--facebook\" />\r\n            </li>\r\n            <li onClick={props.shareTwitter}>\r\n                <FontAwesomeIcon \r\n                    icon={['fab', 'twitter']} \r\n                    className=\"icon icon__reuse-share--googleplus\" />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\nexport default socialMed;","import React from 'react';\r\n\r\nimport './SwitchOpt.css'\r\n\r\nconst switchOpt = props => {\r\n    return (\r\n        <div className=\"reuse-share__switch-opt\" onClick={props.switchOpt}>\r\n            <div className=\"reuse-share__switch-opt--mid\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default switchOpt;\r\n    \r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ShareUsers from '../../../../components/ShareContent/ShareUsers/ShareUsers';\r\nimport SocialMed from '../../../../components/ShareContent/SocialMed/SocialMed';\r\nimport SwitchOpt from '../../../../components/ShareContent/SwitchOpt/SwitchOpt';\r\nimport * as actions from '../../../../store/actions/index';\r\nimport Aux from '../../../../hoc/Auxs/Aux';\r\n\r\nclass ShareOpt extends Component {\r\n    state = {\r\n        showSocialMed: true,\r\n        showShareUser: false,\r\n        userSelect: null\r\n    };\r\n\r\n    componentDidUpdate(props, state) {\r\n        if (this.state.userSelect !== this.props.userSelect) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    showSocialMed: this.props.userSelect.length > 0 ? false : true,\r\n                    showShareUser: this.props.userSelect.length > 0,\r\n                    userSelect: this.props.userSelect\r\n                };\r\n            })\r\n        };\r\n    };\r\n\r\n    switchShareOptHandler = () => {\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                showSocialMed: !prevState.showSocialMed,\r\n                showShareUser: !prevState.showShareUser\r\n            };\r\n        })\r\n    }\r\n\r\n    viewUsersHandler = () => {\r\n        this.props.onViewUsers()\r\n    }\r\n\r\n    shareUserHandler = () => {\r\n        this.props.onShareUser(this.props.userSelect, this.props.shareID, this.props.cntType)\r\n    };\r\n\r\n    facebookShareHandler = () => {\r\n        var facebookWindow = window.open(`https://www.facebook.com/sharer/sharer.php?u=${document.location.origin}/view/${this.props.cntType}/${this.props.shareID}`, 'facebook-popup', 'height=350,width=600');\r\n        if(facebookWindow.focus) { facebookWindow.focus(); }\r\n          return false;\r\n    }\r\n\r\n    twitterShareHandler = () => {\r\n        var twitterWindow = window.open(`https://twitter.com/share?url=${document.location.origin}/view/${this.props.cntType}/${this.props.shareID}`, 'twitter-popup', 'height=350,width=600');\r\n          if(twitterWindow.focus) { twitterWindow.focus(); }\r\n            return false;\r\n    }\r\n\r\n    render() {\r\n        let show = null;\r\n        \r\n            if (this.state.showSocialMed) {\r\n                show = <SocialMed \r\n                    shareFacebook={this.facebookShareHandler}\r\n                    shareTwitter={this.twitterShareHandler}/>;\r\n            }\r\n         \r\n            if (this.state.userSelect && this.state.userSelect.length > 0 && this.state.showSocialMed ) {\r\n                show = (\r\n                    <Aux>\r\n                        <SocialMed \r\n                            switchOpt\r\n                            shareFacebook={this.facebookShareHandler}\r\n                            shareTwitter={this.twitterShareHandler}/>\r\n                        <SwitchOpt \r\n                            switchOpt={this.switchShareOptHandler}/>\r\n                    </Aux>\r\n                );\r\n            }\r\n        \r\n            if (this.state.showShareUser) {  \r\n            show = (\r\n                <Aux>\r\n                    <ShareUsers \r\n                        userSelect={this.state.userSelect}\r\n                        viewUsers={this.viewUsersHandler}\r\n                        viewAllUsers={this.props.viewAllUsers}\r\n                        shareUser={this.shareUserHandler}/> \r\n                    <SwitchOpt \r\n                        switchOpt={this.switchShareOptHandler}/>\r\n                </Aux>\r\n            );\r\n            }\r\n            \r\n        \r\n            return show\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userSelect: state.share.userSelect,\r\n        viewAllUsers: state.share.viewAllUsers,\r\n        shareID: state.share.shareID,\r\n        cntType: state.share.cntType\r\n    };\r\n};\r\n\r\nconst mapDispatchToProp = dispatch => {\r\n    return {\r\n        onViewUsers: () => dispatch(actions.viewUsers()),\r\n        onShareUser: (userSelect, shareID, cntType) => dispatch(actions.shareUserInit(userSelect, shareID, cntType))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(ShareOpt);\r\n    \r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Share.css';\r\nimport Input from './Input/Input';\r\nimport SelectUsers from './SelectUsers/SelectUsers';\r\nimport ShareOpt from './ShareOpt/ShareOpt';\r\nimport * as actions from '../../../store/actions/index';\r\nimport Modal from '../../../components/UI/Modal/Modal';\r\nimport Loader from '../../../components/UI/Loader/Loader';\r\n\r\nclass Share extends Component {\r\n    closeShareHandler = () => {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onDefaultShareProps();\r\n    }\r\n\r\n    render() { \r\n        let shareCnt = (\r\n            <div className=\"reuse-share__wrapper\">  \r\n                <Input />\r\n                <SelectUsers />\r\n                <ShareOpt />\r\n            </div>\r\n        )\r\n\r\n        if (this.props.start) {\r\n            shareCnt=(\r\n                <div className=\"reuse-share__wrapper\">  \r\n                    <Loader \r\n                        cnt=\"Sharing .....\"/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.shareErr) {\r\n            shareCnt = (\r\n                <Modal \r\n                    err={this.props.shareErr}/>\r\n            );\r\n        }\r\n\r\n        let share = (\r\n            <div className=\"reuse-share\">\r\n                <div className=\"reuse-share__main-wrapper\">\r\n                    <div className=\"reuse-share__backdrop\"  onClick={this.closeShareHandler}>\r\n                    </div>  \r\n                    { shareCnt }\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        if (!this.props.shareID) {\r\n            this.closeShareHandler();\r\n            share = null\r\n        };\r\n\r\n        return share\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        start: state.share.start,\r\n        shareErr: state.share.shareErr,\r\n        shareID: state.share.shareID,\r\n        status: state.auth.status,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDefaultShareProps: () => dispatch(actions.shareUser())\r\n    };\r\n};\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Share));"],"sourceRoot":""}