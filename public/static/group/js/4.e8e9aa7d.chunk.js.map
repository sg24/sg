{"version":3,"sources":["components/Main/FilterOptions/FilterOption/FilterOption.js","components/Main/FilterOptions/FilterOptions.js","components/Main/FilterCategory/Category/Category.js","components/Main/FilterCategory/FilterCategory.js","components/Main/FilterCategory/SelectCategs/SelectCateg/SelectCateg.js","components/Main/FilterCategory/SelectCategs/SelectCategs.js","containers/SiteMain/MainContent/MainGrp/Filter/FilterContent/FilterContent.js"],"names":["filterOption","props","filterOptClass","filterSelect","id","filterOpt","onClick","filterItm","className","join","filterType","icon","filterRangeIcn","filterRange","filterOptions","map","FilterOption","key","bind","filterCategory","categSelect","category","filterCategs","index","Category","selectCateg","removeSelectCateg","selectCategs","SelectCateg","FilterContent","state","memberTotal","onlineTotal","fav","searchCnt","searchHandler","event","setState","target","value","onFilter","apply","filterItmHandler","filterGrp","rangeIcn","range","filterPayload","rangeType","rangeValue","filter","length","removeItm","updateItms","push","categSelectHandler","categs","categ","removeSelectCategHandler","updateCateg","closeFilterHandler","onHideBackdrop","applyFilterHandler","history","this","onFetchCateg","tags","onResetFilter","filterCategInfo","filterSrchClass","totalFoundCnt","totalFound","filterErr","message","FilterCategory","SelectCategs","type","placeholder","onChange","FilterOptions","disabled","Component","withRouter","connect","cntCateg","dispatch","actions","content"],"mappings":"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","file":"static/js/4.e8e9aa7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst filterOption = props => {\r\n    let filterOptClass = [];\r\n\r\n    for (let filterItm of props.filterSelect) {\r\n        if (filterItm.id === props.filterOpt.id) {\r\n            filterOptClass = ['reuse-filter__opt--cnt__det--active']\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li \r\n            onClick={props.filterItm}\r\n            className={filterOptClass.join(' ')}>\r\n            {props.filterOpt.filterType} \r\n            <span>\r\n                <FontAwesomeIcon \r\n                    icon={['fas', props.filterOpt.filterRangeIcn]}\r\n                    className=\"icon icon__reuse-filter--cnt__angle\" />\r\n                {props.filterOpt.filterRange}\r\n            </span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default filterOption;","import React from 'react';\r\n\r\nimport FilterOption from './FilterOption/FilterOption';\r\n\r\nconst filterOptions = props => {\r\n    let allFilterOpt = props.filterOptions.map(filterOpt => (\r\n        <FilterOption \r\n            key={filterOpt.id}\r\n            filterOpt={filterOpt}\r\n            filterItm={props.filterItm.bind(this, filterOpt.filterRangeIcn, filterOpt.filterRange, filterOpt.id)}\r\n            filterSelect={props.filterSelect}/>\r\n    ));\r\n\r\n    return allFilterOpt;\r\n}\r\n\r\nexport default filterOptions;","import React from 'react';\r\n\r\nconst filterCategory = props => {\r\n\r\n    return (\r\n        <li \r\n            onClick={props.categSelect}>\r\n        { props.category}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default filterCategory;","import React from 'react';\r\n\r\nimport Category from './Category/Category';\r\n\r\nconst filterCategory = props => {\r\n    let allFilterOpt = props.filterCategs.map((category, index) => (\r\n        <Category\r\n            key={index}\r\n            category={category}\r\n            categSelect={props.categSelect.bind(this, category, index)}/>\r\n    ));\r\n\r\n    return allFilterOpt;\r\n}\r\n\r\nexport default filterCategory;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst selectCateg = props => {\r\n\r\n    return (\r\n        <li>\r\n        { props.category}\r\n            <div \r\n                onClick={props.removeSelectCateg}>\r\n                <FontAwesomeIcon \r\n                    icon={['fas', 'times']} \r\n                    className=\"icon icon__reuse-filter--close\"/>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default selectCateg;","import React from 'react';\r\n\r\nimport SelectCateg from './SelectCateg/SelectCateg';\r\n\r\nconst selectCategs = props => {\r\n    let allSelectCategs = props.selectCategs.map(selectCateg => (\r\n        <SelectCateg\r\n            key={selectCateg.id}\r\n            category={selectCateg.category}\r\n            removeSelectCateg={props.removeSelectCateg.bind(this,selectCateg.id)}/>\r\n    ));\r\n\r\n    return allSelectCategs;\r\n}\r\n\r\nexport default selectCategs;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './FilterContent.css';\r\nimport * as actions from '../../../../../../store/actions/index'; \r\nimport FilterOptions from '../../../../../../components/Main/FilterOptions/FilterOptions';\r\nimport FilterCategory from '../../../../../../components/Main/FilterCategory/FilterCategory';\r\nimport SelectCategs from '../../../../../../components/Main/FilterCategory/SelectCategs/SelectCategs';\r\n\r\nclass FilterContent extends Component {\r\n    state = {\r\n        filterOpt: {\r\n            memberTotal: [\r\n                {id: 1, filterType: 'Low', filterRangeIcn: 'angle-left', filterRange:  500},\r\n                {id: 2, filterType: 'Average', filterRangeIcn: 'angle-right', filterRange:  '499 - 999'},\r\n                {id: 3, filterType: 'High', filterRangeIcn: 'angle-right', filterRange:  999}\r\n            ],\r\n            onlineTotal: [\r\n                {id: 4, filterType: 'Low', filterRangeIcn: 'angle-left', filterRange:  500},\r\n                {id: 5, filterType: 'Average', filterRangeIcn: 'angle-right', filterRange:  '499 - 999'},\r\n                {id: 6, filterType: 'High', filterRangeIcn: 'angle-right', filterRange:  999}\r\n            ],\r\n            fav: [\r\n                {id: 7, filterType: 'Low', filterRangeIcn: 'angle-left', filterRange:  500},\r\n                {id: 8, filterType: 'Average', filterRangeIcn: 'angle-right', filterRange:  '499 - 999'},\r\n                {id: 9, filterType: 'High', filterRangeIcn: 'angle-right', filterRange:  999}\r\n            ]\r\n        },\r\n        searchCnt: '',\r\n        filterSelect: [],\r\n        filterCategory: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.push('/group/startfilter')\r\n        if (!this.props.categ) {\r\n            this.props.onFetchCateg(this.props.tags);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onResetFilter();\r\n    }\r\n\r\n    searchHandler = (event) => {\r\n        this.setState({searchCnt: event.target.value});\r\n        this.props.onFilter({searchCnt: event.target.value, filterSelect: this.state.filterSelect, category: this.state.filterCategory, apply: false})\r\n    }\r\n\r\n    filterItmHandler = (filterGrp, rangeIcn, range, id) => {\r\n        let rangeFilter = rangeIcn === 'angle-right' ? '$gt' : '$lt';\r\n        let filterPayload = {\r\n          rangeType: rangeFilter,\r\n          rangeValue: range,\r\n          filterGrp,\r\n          id\r\n        }\r\n\r\n        let filterSelect = [...this.state.filterSelect];\r\n        let checkItms = filterSelect.filter(filterItm => filterItm.filterGrp === filterGrp);\r\n        if (checkItms.length > 0) {\r\n            let removeItm = filterSelect.filter(filterItm => filterItm.id === id);\r\n            if (removeItm.length > 0) {\r\n                removeItm = filterSelect.filter(filterItm => filterItm.id !== id);\r\n                this.setState({filterSelect: removeItm});\r\n                this.props.onFilter({searchCnt: this.state.searchCnt, filterSelect: removeItm, category: this.state.filterCategory, apply: false})\r\n                return\r\n            }\r\n            let updateItms = filterSelect.filter(filterItm => filterItm.filterGrp !== filterGrp);\r\n            updateItms.push(filterPayload);\r\n            this.setState({filterSelect: updateItms});\r\n            this.props.onFilter({searchCnt: this.state.searchCnt, filterSelect: updateItms, category: this.state.filterCategory, apply: false})\r\n            return\r\n        }\r\n        filterSelect.push(filterPayload);\r\n        this.setState({filterSelect});\r\n        this.props.onFilter({searchCnt: this.state.searchCnt, filterSelect, category: this.state.filterCategory, apply: false})\r\n    }\r\n\r\n    categSelectHandler = (category, index) => {\r\n        let categs = [...this.state.filterCategory];\r\n        let filterCateg = categs.filter(categ => categ.id === index);\r\n        if (filterCateg.length > 0) {\r\n            return\r\n        }\r\n        categs.push({id: index, category});\r\n        this.setState({filterCategory: categs});\r\n        this.props.onFilter({searchCnt: this.state.searchCnt, filterSelect: this.state.filterSelect, category: categs, apply: false});\r\n    };\r\n\r\n    removeSelectCategHandler = (id) => {\r\n        let categs = [...this.state.filterCategory];\r\n        let updateCateg = categs.filter(categ => categ.id !== id);\r\n        this.setState({filterCategory: updateCateg});\r\n        this.props.onFilter({searchCnt: this.state.searchCnt, filterSelect: this.state.filterSelect, category: updateCateg, apply: false});\r\n    }\r\n\r\n    \r\n    closeFilterHandler = () => {\r\n        this.props.onHideBackdrop()\r\n    }\r\n\r\n    applyFilterHandler = () => {\r\n        this.props.onHideBackdrop();\r\n        this.props.onFilter({searchCnt: this.state.searchCnt, filterSelect: this.state.filterSelect, category: this.state.filterCategory, apply: true});\r\n        this.props.history.push('/group/filter')\r\n    };\r\n    \r\n    render() {\r\n        let category = 'loading ...';\r\n        let filterCategInfo = null\r\n        let filterSrchClass = ['reuse-filter__opt--srch'];\r\n        let totalFoundCnt = null;\r\n\r\n        if (!this.props.totalFound) {\r\n            filterSrchClass.push('reuse-filter__opt--srch__no-total')\r\n        }\r\n\r\n        if (this.props.totalFound && !this.props.filterErr) {\r\n            filterSrchClass = ['reuse-filter__opt--srch']\r\n            totalFoundCnt = (\r\n                <div className=\"reuse-filter__opt--fnd\">\r\n                    <div className=\"reuse-filter__opt--fnd__title\">\r\n                        Found\r\n                        <div className=\"reuse-filter__opt--fnd__title--total\">\r\n                            {this.props.totalFound}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.filterErr) {\r\n            filterSrchClass = ['reuse-filter__opt--srch']\r\n            totalFoundCnt = (\r\n                <div className=\"reuse-que__filter-err\"> {this.props.filterErr.message} </div>\r\n            )\r\n        }\r\n \r\n        if (this.props.categ && this.props.categ.length > 0) {\r\n            category = <FilterCategory\r\n                filterCategs={this.props.categ}\r\n                categSelect={this.categSelectHandler}/>\r\n        }\r\n\r\n        if (this.state.filterCategory.length > 0 ) {\r\n            filterCategInfo = (\r\n                <div className=\"reuse-filter__opt--info\">\r\n                    <h3>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'bars']} \r\n                            className=\"icon icon__reuse-filter--categ\"/>\r\n                        Category \r\n                    </h3>\r\n                    <ul className=\"reuse-filter__opt--info__cnt\">\r\n                        <SelectCategs \r\n                            selectCategs={this.state.filterCategory}\r\n                            removeSelectCateg={this.removeSelectCategHandler}/>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div className=\"reuse-filter__opt\"> \r\n                <div className={filterSrchClass.join(' ')}>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"reuse-filter__opt--srch__input\" \r\n                        placeholder=\"Enter group Name...\" \r\n                        onChange={this.searchHandler}\r\n                        value={this.state.searchCnt}/>\r\n                </div>\r\n                { totalFoundCnt }\r\n                <div className=\"reuse-filter__opt--cnt\">\r\n                    <div className=\"reuse-filter__opt--cnt__wrapper reuse-filter__opt--cnt__wrapper--mid\">\r\n                        <h3 className=\"reuse-filter__opt--cnt__title\">\r\n                            <FontAwesomeIcon \r\n                            icon={['fas', 'users']} \r\n                            className=\"icon icon__reuse-grp-filter--user\"/>\r\n                            Scholars\r\n                        </h3>\r\n                        <ul className=\"reuse-filter__opt--cnt__det\">\r\n                            <FilterOptions\r\n                                filterOptions={this.state.filterOpt.memberTotal}\r\n                                filterItm={this.filterItmHandler.bind(this, 'memberTotal')}\r\n                                filterSelect={this.state.filterSelect}/>\r\n                        </ul>\r\n                    </div>\r\n        \r\n                    <div className=\"reuse-filter__opt--cnt__wrapper reuse-filter__opt--cnt__wrapper--mid\">\r\n                        <h3 className=\"reuse-filter__opt--cnt__title\">\r\n                            <FontAwesomeIcon \r\n                                icon={['fas', 'circle']} \r\n                                className=\"icon icon__reuse-grp-filter--online\"/>  \r\n                            online\r\n                        </h3>\r\n                        <ul className=\"reuse-filter__opt--cnt__det\">\r\n                            <FilterOptions\r\n                            filterOptions={this.state.filterOpt.onlineTotal}\r\n                            filterItm={this.filterItmHandler.bind(this, 'onlineTotal')}\r\n                                filterSelect={this.state.filterSelect}/>\r\n                        </ul>\r\n                    </div>\r\n        \r\n                    <div className=\"reuse-filter__opt--cnt__wrapper reuse-filter__opt--cnt__wrapper--mid\">\r\n                        <h3 className=\"reuse-filter__opt--cnt__title\">\r\n                            <FontAwesomeIcon \r\n                                icon={['fas', 'bars']} \r\n                                className=\"icon icon__reuse-filter--categ\"/>\r\n                            Category \r\n                        </h3>\r\n                        <ul className=\"reuse-filter__opt--cnt__det reuse-filter__opt--cnt__det--categ\">\r\n                            { category }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n        \r\n                { filterCategInfo }\r\n        \r\n                <div className=\"reuse-filter__opt--btn\">\r\n                    <button \r\n                        className=\"reuse-filter__opt--btn__cancel\" \r\n                        type=\"button\"\r\n                        onClick={this.closeFilterHandler}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'times']} \r\n                            className=\"icon icon__reuse-filter--cancel\"/>\r\n                        Cancel\r\n                    </button>\r\n                    <button \r\n                        className=\"reuse-filter__opt--btn__apply\" \r\n                        type=\"button\"\r\n                        onClick={this.applyFilterHandler}\r\n                        disabled={\r\n                             this.props.totalFound === '0'? true: !this.props.totalFound}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'check']} \r\n                            className=\"icon icon__reuse-filter--apply\"/>\r\n                        Apply\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        totalFound: state.filter.totalFound,\r\n        categ: state.filter.cntCateg,\r\n        filterErr: state.filter.filterErr,\r\n        tags: state.tags.tags\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n         onHideBackdrop: () => dispatch(actions.hideMainBackdrop()),\r\n         onFilter: (content) => dispatch(actions.filterContentInit(content)),\r\n         onFetchCateg: (categ) => dispatch(actions.fetchCntCategInit(categ)),\r\n         onResetFilter: () => dispatch(actions.resetFilter())\r\n    };\r\n }\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FilterContent));"],"sourceRoot":""}