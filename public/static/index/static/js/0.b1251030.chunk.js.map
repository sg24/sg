{"version":3,"sources":["../node_modules/react-timeago/lib/index.js","../node_modules/react-timeago/lib/formatters/buildFormatter.js","../node_modules/pepjs/dist/pep.js","../node_modules/react-timeago/lib/defaultFormatter.js","../node_modules/react-timeago/lib/dateParser.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","sliceIterator","TypeError","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","React","obj","__esModule","newObj","default","_interopRequireWildcard","__webpack_require__","_defaultFormatter2","_interopRequireDefault","_dateParser2","_possibleConstructorReturn","self","ReferenceError","Component","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","TimeAgo","_Component","_ref","_temp","_this","instance","_classCallCheck","this","_len","args","_key","__proto__","getPrototypeOf","apply","concat","isStillMounted","tick","refresh","live","then","date","valueOf","now","seconds","Math","round","abs","unboundPeriod","period","min","max","minPeriod","maxPeriod","timeoutId","clearTimeout","setTimeout","forceUpdate","console","warn","subClass","superClass","create","constructor","setPrototypeOf","_inherits","lastProps","_props","formatter","Komponent","component","title","passDownProps","keys","indexOf","_objectWithoutProperties","timeNow","suffix","_ref2","_ref3","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","bind","createElement","displayName","defaultProps","Infinity","Date","strings","epochMiliseconds","_nextFormmater","current","week","weeks","_days","normalize","normalizeFn","numbers","dateString","prefixAgo","prefixFromNow","isPlural","stringFn","_stringFn","suffixAgo","suffixFromNow","wordSeparator","join","normalizeNumber","String","split","map","digit","match","parseInt","distanceMillis","stringOrFn","module","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","e","document","createEvent","initEvent","bubbles","cancelable","p","buttons","pressure","x","clientX","y","clientY","pointerId","width","height","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","detail","PointerMap","window","Map","forEach","SparseArrayMap","array","size","set","k","v","delete","has","get","clear","callback","thisArg","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","name","s","newEvents","events","register","element","es","l","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","type","fn","listen","addEvent","unlisten","removeEvent","eventName","addEventListener","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","parentNode","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","t","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","querySelector","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","toArray","slice","filter","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","remove","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","el","elementChanged","oldValue","concatLists","accum","list","isElement","n","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","m","added","addedNodes","removed","removedNodes","attrib2css","selector","styles","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","head","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","dy","prepareEvent","pd","webkitForce","WEBKIT_FORCE_AT_MOUSE_DOWN","prepareButtonsForMove","which","mousedown","button","webkitmouseforcechanged","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","a","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","evts","oldSt","scrollTypes","UP","includes","DOWN","LEFT","RIGHT","touchAction","_UP","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","removePrimaryPointer","inPointer","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","id","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","altitudeAngle","tan","radToDeg","PI","atan","cos","azimuthAngle","sin","touchType","altKey","ctrlKey","metaKey","shiftKey","processTouches","inFunction","tl","changedTouches","shouldScroll","currentTarget","dya","dxa","left","right","findTouch","inTL","inId","vacuumTouches","touches","d","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchforcechange","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","splice","r","h","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","Error","assertConnected","elem","parent","ownerDocument","inActiveButtonState","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","textContent","appendChild","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","Element","setPointerCapture","releasePointerCapture","hasPointerCapture","targetFinding","factory","_toConsumableArray","arr2","from","parsed","Number","isNaN","parts","_parts$map","_parts$map2","firstP","secondP","restPs","correctedParts","isoDate","UTC"],"mappings":"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","file":"static/js/0.b1251030.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _defaultFormatter = require('./defaultFormatter');\n\nvar _defaultFormatter2 = _interopRequireDefault(_defaultFormatter);\n\nvar _dateParser = require('./dateParser');\n\nvar _dateParser2 = _interopRequireDefault(_dateParser);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Component = React.Component; // Just some simple constants for readability\n\nvar MINUTE = 60;\nvar HOUR = MINUTE * 60;\nvar DAY = HOUR * 24;\nvar WEEK = DAY * 7;\nvar MONTH = DAY * 30;\nvar YEAR = DAY * 365;\n\nvar TimeAgo = function (_Component) {\n  _inherits(TimeAgo, _Component);\n\n  function TimeAgo() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TimeAgo);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeAgo.__proto__ || Object.getPrototypeOf(TimeAgo)).call.apply(_ref, [this].concat(args))), _this), _this.isStillMounted = false, _this.tick = function (refresh) {\n      if (!_this.isStillMounted || !_this.props.live) {\n        return;\n      }\n\n      var then = (0, _dateParser2.default)(_this.props.date).valueOf();\n\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return;\n      }\n\n      var now = _this.props.now();\n\n      var seconds = Math.round(Math.abs(now - then) / 1000);\n      var unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 0;\n      var period = Math.min(Math.max(unboundPeriod, _this.props.minPeriod * 1000), _this.props.maxPeriod * 1000);\n\n      if (period) {\n        if (_this.timeoutId) {\n          clearTimeout(_this.timeoutId);\n        }\n\n        _this.timeoutId = setTimeout(_this.tick, period);\n      }\n\n      if (!refresh) {\n        _this.forceUpdate();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TimeAgo, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.isStillMounted = true;\n\n      if (this.props.live) {\n        this.tick(true);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(lastProps) {\n      if (this.props.live !== lastProps.live || this.props.date !== lastProps.date) {\n        if (!this.props.live && this.timeoutId) {\n          clearTimeout(this.timeoutId);\n        }\n\n        this.tick();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.isStillMounted = false;\n\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = undefined;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      /* eslint-disable no-unused-vars */\n      var _props = this.props,\n          date = _props.date,\n          formatter = _props.formatter,\n          Komponent = _props.component,\n          live = _props.live,\n          minPeriod = _props.minPeriod,\n          maxPeriod = _props.maxPeriod,\n          title = _props.title,\n          now = _props.now,\n          passDownProps = _objectWithoutProperties(_props, ['date', 'formatter', 'component', 'live', 'minPeriod', 'maxPeriod', 'title', 'now']);\n      /* eslint-enable no-unused-vars */\n\n\n      var then = (0, _dateParser2.default)(date).valueOf();\n\n      if (!then) {\n        return null;\n      }\n\n      var timeNow = now();\n      var seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      var suffix = then < timeNow ? 'ago' : 'from now';\n\n      var _ref2 = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'],\n          _ref3 = _slicedToArray(_ref2, 2),\n          value = _ref3[0],\n          unit = _ref3[1];\n\n      var passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : (0, _dateParser2.default)(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n      var spreadProps = Komponent === 'time' ? Object.assign({}, passDownProps, {\n        dateTime: (0, _dateParser2.default)(date).toISOString()\n      }) : passDownProps;\n\n      var nextFormatter = _defaultFormatter2.default.bind(null, value, unit, suffix);\n\n      return React.createElement(Komponent, _extends({}, spreadProps, {\n        title: passDownTitle\n      }), formatter(value, unit, suffix, then, nextFormatter, now));\n    }\n  }]);\n\n  return TimeAgo;\n}(Component);\n\nTimeAgo.displayName = 'TimeAgo';\nTimeAgo.defaultProps = {\n  live: true,\n  component: 'time',\n  minPeriod: 0,\n  maxPeriod: Infinity,\n  formatter: _defaultFormatter2.default,\n  now: function now() {\n    return Date.now();\n  }\n};\nexports.default = TimeAgo;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildFormatter;\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n} // If the numbers array is present, format numbers with it,\n// otherwise just cast the number to a string and return it\n\n\nvar normalizeNumber = function normalizeNumber(numbers, value) {\n  return numbers && numbers.length === 10 ? String(value).split('').map(function (digit) {\n    return digit.match(/^[0-9]$/) ? numbers[parseInt(digit)] : digit;\n  }).join('') : String(value);\n}; // Take a string or a function that takes number of days and returns a string\n// and provide a uniform API to create string parts\n\n\nvar normalizeFn = function normalizeFn(value, distanceMillis, numbers) {\n  return function (stringOrFn) {\n    return typeof stringOrFn === 'function' ? stringOrFn(value, distanceMillis).replace(/%d/g, normalizeNumber(numbers, value)) : stringOrFn.replace(/%d/g, normalizeNumber(numbers, value));\n  };\n};\n\nfunction buildFormatter(strings) {\n  return function formatter(value, unit, suffix, epochMiliseconds, _nextFormmater, now) {\n    var current = now(); // convert weeks to days if strings don't handle weeks\n\n    if (unit === 'week' && !strings.week && !strings.weeks) {\n      var _days = Math.round(Math.abs(epochMiliseconds - current) / (1000 * 60 * 60 * 24));\n\n      value = _days;\n      unit = 'day';\n    } // create a normalize function for given value\n\n\n    var normalize = normalizeFn(value, current - epochMiliseconds, strings.numbers != null ? strings.numbers : undefined); // The eventual return value stored in an array so that the wordSeparator can be used\n\n    var dateString = []; // handle prefixes\n\n    if (suffix === 'ago' && strings.prefixAgo) {\n      dateString.push(normalize(strings.prefixAgo));\n    }\n\n    if (suffix === 'from now' && strings.prefixFromNow) {\n      dateString.push(normalize(strings.prefixFromNow));\n    } // Handle Main number and unit\n\n\n    var isPlural = value > 1;\n\n    if (isPlural) {\n      var stringFn = strings[unit + 's'] || strings[unit] || '%d ' + unit;\n      dateString.push(normalize(stringFn));\n    } else {\n      var _stringFn = strings[unit] || strings[unit + 's'] || '%d ' + unit;\n\n      dateString.push(normalize(_stringFn));\n    } // Handle Suffixes\n\n\n    if (suffix === 'ago' && strings.suffixAgo) {\n      dateString.push(normalize(strings.suffixAgo));\n    }\n\n    if (suffix === 'from now' && strings.suffixFromNow) {\n      dateString.push(normalize(strings.suffixFromNow));\n    } // join the array into a string and return it\n\n\n    var wordSeparator = typeof strings.wordSeparator === 'string' ? strings.wordSeparator : ' ';\n    return dateString.join(wordSeparator);\n  };\n}","/*!\n * PEP v0.5.1 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.PointerEventsPolyfill = factory();\n})(this, function () {\n  'use strict';\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n\n  var MOUSE_PROPS = ['bubbles', 'cancelable', 'view', 'screenX', 'screenY', 'clientX', 'clientY', 'ctrlKey', 'altKey', 'shiftKey', 'metaKey', 'button', 'relatedTarget', 'pageX', 'pageY'];\n  var MOUSE_DEFAULTS = [false, false, null, 0, 0, 0, 0, false, false, false, false, 0, null, 0, 0];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false); // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n\n    e.buttons = inDict.buttons || 0; // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n\n    var pressure = 0;\n\n    if (inDict.pressure !== undefined && e.buttons) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    } // add x/y properties aliased to clientX/Y\n\n\n    e.x = e.clientX;\n    e.y = e.clientY; // define the properties of the PointerEvent interface\n\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 1;\n    e.height = inDict.height || 1;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.twist = inDict.twist || 0;\n    e.tangentialPressure = inDict.tangentialPressure || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    e.detail = 0;\n    return e;\n  }\n  /**\n   * This module implements a map of pointer states\n   */\n\n\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function set(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n\n      if (!this.has(k)) {\n        this.size++;\n      }\n\n      this.array[k] = v;\n    },\n    has: function has(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function _delete(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function get(k) {\n      return this.array[k];\n    },\n    clear: function clear() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n    // return value, key, map\n    forEach: function forEach(callback, thisArg) {\n      return this.array.forEach(function (v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n  var CLONE_PROPS = [// MouseEvent\n  'bubbles', 'cancelable', 'view', 'detail', 'screenX', 'screenY', 'clientX', 'clientY', 'ctrlKey', 'altKey', 'shiftKey', 'metaKey', 'button', 'relatedTarget', // DOM Level 3\n  'buttons', // PointerEvent\n  'pointerId', 'width', 'height', 'pressure', 'tiltX', 'tiltY', 'pointerType', 'hwTimestamp', 'isPrimary', // event instance\n  'type', 'target', 'currentTarget', 'which', 'pageX', 'pageY', 'timeStamp'];\n  var CLONE_DEFAULTS = [// MouseEvent\n  false, false, null, null, 0, 0, 0, 0, false, false, false, false, 0, null, // DOM Level 3\n  0, // PointerEvent\n  0, 0, 0, 0, 0, 0, '', 0, false, // event instance\n  '', null, null, 0, 0, 0, 0];\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n  var HAS_SVG_INSTANCE = typeof SVGElementInstance !== 'undefined';\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n\n  var dispatcher = {\n    pointermap: new PointerMap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function registerSource(name, source) {\n      var s = source;\n      var newEvents = s.events;\n\n      if (newEvents) {\n        newEvents.forEach(function (e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function register(element) {\n      var l = this.eventSourceList.length;\n\n      for (var i = 0, es; i < l && (es = this.eventSourceList[i]); i++) {\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function unregister(element) {\n      var l = this.eventSourceList.length;\n\n      for (var i = 0, es; i < l && (es = this.eventSourceList[i]); i++) {\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains:\n    /*scope.external.contains || */\n    function contains(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n    // EVENTS\n    down: function down(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function move(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function up(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function enter(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function leave(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function over(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function out(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function cancel(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function leaveOut(event) {\n      this.out(event);\n      this.propagate(event, this.leave, false);\n    },\n    enterOver: function enterOver(event) {\n      this.over(event);\n      this.propagate(event, this.enter, true);\n    },\n    // LISTENER LOGIC\n    eventHandler: function eventHandler(inEvent) {\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n\n      if (fn) {\n        fn(inEvent);\n      }\n\n      inEvent._handledByPE = true;\n    },\n    // set up event listeners\n    listen: function listen(target, events) {\n      events.forEach(function (e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n    // remove event listeners\n    unlisten: function unlisten(target, events) {\n      events.forEach(function (e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent:\n    /*scope.external.addEvent || */\n    function addEvent(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent:\n    /*scope.external.removeEvent || */\n    function removeEvent(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n    // EVENT CREATION AND TRACKING\n\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function makeEvent(inType, inEvent) {\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n\n      var e = new PointerEvent(inType, inEvent);\n\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n    // make and dispatch an event in one call\n    fireEvent: function fireEvent(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function cloneEvent(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i]; // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      } // keep the semantics of preventDefault\n\n\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function () {\n          inEvent.preventDefault();\n        };\n      }\n\n      return eventCopy;\n    },\n    getTarget: function getTarget(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n\n      if (!capture) {\n        return inEvent._target;\n      }\n\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    propagate: function propagate(event, fn, propagateDown) {\n      var target = event.target;\n      var targets = []; // Order of conditions due to document.contains() missing in IE.\n\n      while (target != null && target !== document && !target.contains(event.relatedTarget)) {\n        targets.push(target);\n        target = target.parentNode; // Touch: Do not propagate if node is detached.\n\n        if (!target) {\n          return;\n        }\n      }\n\n      if (propagateDown) {\n        targets.reverse();\n      }\n\n      targets.forEach(function (target) {\n        event.target = target;\n        fn.call(this, event);\n      }, this);\n    },\n    setCapture: function setCapture(inPointerId, inTarget, skipDispatch) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId, skipDispatch);\n      }\n\n      this.captureInfo[inPointerId] = inTarget;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n      var e = new PointerEvent('gotpointercapture', {\n        bubbles: true\n      });\n      e.pointerId = inPointerId;\n      e._target = inTarget;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    releaseCapture: function releaseCapture(inPointerId, skipDispatch) {\n      var t = this.captureInfo[inPointerId];\n\n      if (!t) {\n        return;\n      }\n\n      this.captureInfo[inPointerId] = undefined;\n      document.removeEventListener('pointerup', this.implicitRelease);\n      document.removeEventListener('pointercancel', this.implicitRelease);\n      var e = new PointerEvent('lostpointercapture', {\n        bubbles: true\n      });\n      e.pointerId = inPointerId;\n      e._target = t;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent:\n    /*scope.external.dispatchEvent || */\n    function dispatchEvent(inEvent) {\n      var t = this.getTarget(inEvent);\n\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function asyncDispatchEvent(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n  var targeting = {\n    shadow: function shadow(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function canTarget(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function targetingShadow(inEl) {\n      var s = this.shadow(inEl);\n\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function olderShadow(shadow) {\n      var os = shadow.olderShadowRoot;\n\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n\n      return os;\n    },\n    allShadows: function allShadows(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n\n      return shadows;\n    },\n    searchRoot: function searchRoot(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr; // is element a shadow host?\n\n        sr = this.targetingShadow(t);\n\n        while (sr) {\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n\n          if (!st) {\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        } // light dom element is the target\n\n\n        return t;\n      }\n    },\n    owner: function owner(element) {\n      var s = element; // walk up until you hit the shadow root or document\n\n      while (s.parentNode) {\n        s = s.parentNode;\n      } // the owner element is expected to be a Document or ShadowRoot\n\n\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n\n      return s;\n    },\n    findTarget: function findTarget(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY; // if the listener is in the shadow root, it is much faster to start there\n\n      var s = this.owner(inEvent.target); // if x, y is not in this root, fall back to document search\n\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n\n      return this.searchRoot(s, x, y);\n    }\n  };\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function watchSubtree(target) {\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function enableOnSubtree(target) {\n      this.watchSubtree(target);\n\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function installNewSubtree(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function findElements(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n\n      return [];\n    },\n    removeElement: function removeElement(el) {\n      this.removeCallback(el);\n    },\n    addElement: function addElement(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function elementChanged(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function concatLists(accum, list) {\n      return accum.concat(toArray(list));\n    },\n    // register all touch-action = none nodes on document load\n    installOnLoad: function installOnLoad() {\n      document.addEventListener('readystatechange', function () {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function isElement(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function flattenMutationTree(inNodes) {\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this); // make sure the added nodes are accounted for\n\n      tree.push(filter(inNodes, this.isElement)); // flatten the list\n\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function mutationWatcher(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function mutationHandler(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  function shadowSelector(s) {\n    return 'body /shadow-deep/ ' + s;\n  }\n\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\n  }\n\n  var attrib2css = [{\n    selector: '[touch-action=\"none\"]',\n    value: 'none'\n  }, {\n    selector: '[touch-action=\"auto\"]',\n    value: 'auto'\n  }, {\n    selector: '[touch-action~=\"pan-x\"]',\n    value: 'pan-x'\n  }, {\n    selector: '[touch-action~=\"pan-y\"]',\n    value: 'pan-y'\n  }, {\n    selector: '[touch-action~=\"pan-up\"]',\n    value: 'pan-up'\n  }, {\n    selector: '[touch-action~=\"pan-down\"]',\n    value: 'pan-down'\n  }, {\n    selector: '[touch-action~=\"pan-left\"]',\n    value: 'pan-left'\n  }, {\n    selector: '[touch-action~=\"pan-right\"]',\n    value: 'pan-right'\n  }];\n  var styles = ''; // only install stylesheet if the browser has touch action support\n\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent; // only add shadow selectors if shadowdom is supported\n\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function (r) {\n        styles += r.selector + rule(r.value) + '\\n';\n\n        if (hasShadowRoot) {\n          styles += shadowSelector(r.selector) + rule(r.value) + '\\n';\n        }\n      });\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var pointermap = dispatcher.pointermap; // radius around touchend that swallows mouse events\n\n  var DEDUP_DIST = 25; // left, middle, right, back, forward\n\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n  var HAS_BUTTONS = false;\n\n  try {\n    HAS_BUTTONS = new MouseEvent('test', {\n      buttons: 1\n    }).buttons === 1;\n  } catch (e) {} // handler block for native mouse events\n\n\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: ['mousedown', 'webkitmouseforcechanged', 'mousemove', 'mouseup', 'mouseover', 'mouseout'],\n    register: function register(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function unregister(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function isEventSimulatedFromTouch(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function prepareEvent(inEvent) {\n      var e = dispatcher.cloneEvent(inEvent); // forward mouse preventDefault\n\n      var pd = e.preventDefault;\n\n      e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n      };\n\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n\n      if ('webkitForce' in inEvent) {\n        e.pressure = inEvent.webkitForce - MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN;\n      }\n\n      return e;\n    },\n    prepareButtonsForMove: function prepareButtonsForMove(e, inEvent) {\n      var p = pointermap.get(this.POINTER_ID); // Update buttons state after possible out-of-document mouseup.\n\n      if (inEvent.which === 0 || !p) {\n        e.buttons = 0;\n      } else {\n        e.buttons = p.buttons;\n      }\n\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function mousedown(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n\n          if (p) {\n            e.buttons |= p.buttons;\n          }\n\n          inEvent.buttons = e.buttons;\n        }\n\n        pointermap.set(this.POINTER_ID, inEvent);\n\n        if (!p || p.buttons === 0) {\n          dispatcher.down(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    // This is called when the user force presses without moving x/y\n    webkitmouseforcechanged: function webkitmouseforcechanged(inEvent) {\n      this.mousemove(inEvent);\n    },\n    mousemove: function mousemove(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n\n        if (!HAS_BUTTONS) {\n          this.prepareButtonsForMove(e, inEvent);\n        }\n\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.move(e);\n      }\n    },\n    mouseup: function mouseup(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button]; // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n\n        pointermap.set(this.POINTER_ID, inEvent); // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\n\n        if (e.buttons === 0) {\n          dispatcher.up(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function mouseover(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n\n        if (!HAS_BUTTONS) {\n          this.prepareButtonsForMove(e, inEvent);\n        }\n\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function mouseout(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n\n        if (!HAS_BUTTONS) {\n          this.prepareButtonsForMove(e, inEvent);\n        }\n\n        e.button = -1;\n        dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function cancel(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.deactivateMouse();\n    },\n    deactivateMouse: function deactivateMouse() {\n      pointermap.delete(this.POINTER_ID);\n    }\n  };\n  var captureInfo = dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var pointermap$1 = dispatcher.pointermap; // this should be long enough to ignore compat mouse events made by touch\n\n  var DEDUP_TIMEOUT = 2500;\n  var ATTRIB = 'touch-action';\n  var INSTALLER; // bitmask for _scrollType\n\n  var _UP = 1;\n  var _DOWN = 2;\n  var _LEFT = 4;\n  var _RIGHT = 8;\n  var AUTO = _UP | _DOWN | _LEFT | _RIGHT; // handler block for native touch events\n\n  var touchEvents = {\n    events: ['touchstart', 'touchmove', 'touchforcechange', 'touchend', 'touchcancel'],\n    register: function register(target) {\n      INSTALLER.enableOnSubtree(target);\n    },\n    unregister: function unregister() {// TODO(dfreedman): is it worth it to disconnect the MO?\n    },\n    elementAdded: function elementAdded(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n\n      if (typeof st === \"number\") {\n        el._scrollType = st;\n        dispatcher.listen(el, this.events); // set touch-action on shadows as well\n\n        allShadows(el).forEach(function (s) {\n          s._scrollType = st;\n          dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function elementRemoved(el) {\n      // In some cases, an element is removed before a touchend.\n      // When this is the case, we should wait for the touchend before unlistening,\n      // because we still want pointer events to bubble up after removing from DOM.\n      if (pointermap$1.size > 0) {\n        var evts = this.events;\n        el.addEventListener('touchend', function () {\n          el._scrollType = undefined;\n          dispatcher.unlisten(el, evts);\n        });\n      } else {\n        el._scrollType = undefined;\n        dispatcher.unlisten(el, this.events);\n      } // remove touch-action from shadow\n\n\n      allShadows(el).forEach(function (s) {\n        s._scrollType = undefined;\n        dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function elementChanged(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue); // simply update scrollType if listeners are already established\n\n      if (typeof st === \"number\" && typeof oldSt === \"number\") {\n        el._scrollType = st;\n        allShadows(el).forEach(function (s) {\n          s._scrollType = st;\n        }, this);\n      } else if (typeof oldSt === \"number\") {\n        this.elementRemoved(el);\n      } else if (typeof st === \"number\") {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      UP: function UP(s) {\n        return s.includes('pan-y') || s.includes('pan-up') ? _UP : 0;\n      },\n      DOWN: function DOWN(s) {\n        return s.includes('pan-y') || s.includes('pan-down') ? _DOWN : 0;\n      },\n      LEFT: function LEFT(s) {\n        return s.includes('pan-x') || s.includes('pan-left') ? _LEFT : 0;\n      },\n      RIGHT: function RIGHT(s) {\n        return s.includes('pan-x') || s.includes('pan-right') ? _RIGHT : 0;\n      }\n    },\n    touchActionToScrollType: function touchActionToScrollType(touchAction) {\n      if (!touchAction) {\n        return;\n      }\n\n      if (touchAction === \"auto\") {\n        return AUTO;\n      }\n\n      if (touchAction === \"none\") {\n        return 0;\n      }\n\n      var s = touchAction.split(' ');\n      var st = this.scrollTypes; // construct a bitmask of allowed scroll directions\n\n      return st.UP(s) | st.DOWN(s) | st.LEFT(s) | st.RIGHT(s);\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function isPrimaryTouch(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function setPrimaryTouch(inTouch) {\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (pointermap$1.size === 0 || pointermap$1.size === 1 && pointermap$1.has(1)) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = {\n          X: inTouch.clientX,\n          Y: inTouch.clientY\n        };\n        this.scrolling = false;\n      }\n    },\n    removePrimaryPointer: function removePrimaryPointer(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n      }\n    },\n    typeToButtons: function typeToButtons(type) {\n      var ret = 0;\n\n      if (type === 'touchstart' || type === 'touchmove' || type === 'touchforcechange') {\n        ret = 1;\n      }\n\n      return ret;\n    },\n    touchToPointer: function touchToPointer(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = dispatcher.cloneEvent(inTouch); // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\n      e.pressure = inTouch.force !== undefined ? inTouch.force : inTouch.webkitForce !== undefined ? inTouch.webkitForce : undefined;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n\n      if (inTouch.altitudeAngle) {\n        var tan = Math.tan(inTouch.altitudeAngle);\n        var radToDeg = 180 / Math.PI;\n        e.tiltX = Math.atan(Math.cos(inTouch.azimuthAngle) / tan) * radToDeg;\n        e.tiltY = Math.atan(Math.sin(inTouch.azimuthAngle) / tan) * radToDeg;\n      } else {\n        e.tiltX = 0;\n        e.tiltY = 0;\n      }\n\n      if (inTouch.touchType === 'stylus') {\n        e.pointerType = 'pen';\n      } else {\n        e.pointerType = this.POINTER_TYPE;\n      } // forward modifier keys\n\n\n      e.altKey = cte.altKey;\n      e.ctrlKey = cte.ctrlKey;\n      e.metaKey = cte.metaKey;\n      e.shiftKey = cte.shiftKey; // forward touch preventDefaults\n\n      var self = this;\n\n      e.preventDefault = function () {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n\n      return e;\n    },\n    processTouches: function processTouches(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function shouldScroll(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var st = inEvent.currentTarget._scrollType;\n\n        if (st === 0) {\n          // this element is a `touch-action: none`, should never scroll\n          ret = false;\n        } else if (st === AUTO) {\n          // this element is a `touch-action: auto`, should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n          var dy = t.clientY - this.firstXY.Y;\n          var dya = Math.abs(dy);\n          var dx = t.clientX - this.firstXY.X;\n          var dxa = Math.abs(dx);\n          var up = st & _UP;\n          var down = st & _DOWN;\n          var left = st & _LEFT;\n          var right = st & _RIGHT;\n\n          if (left && right) {\n            // should scroll on the x axis\n            ret = dxa > dya;\n          } else if (left) {\n            // should scroll left\n            ret = dxa > dya && dx > 0;\n          } else if (right) {\n            // should scroll right\n            ret = dxa > dya && dx < 0;\n          }\n\n          if (!ret) {\n            if (up && down) {\n              // should scroll on the y axis\n              ret = dxa < dya;\n            } else if (up) {\n              // should scroll up\n              ret = dxa < dya && dy > 0;\n            } else if (down) {\n              // should scroll down\n              ret = dxa < dya && dy < 0;\n            }\n          }\n        }\n\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function findTouch(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function vacuumTouches(inEvent) {\n      var tl = inEvent.touches; // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n\n      if (pointermap$1.size >= tl.length) {\n        var d = [];\n        pointermap$1.forEach(function (value, key) {\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function touchstart(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n\n      if (!this.scrolling) {\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function overDown(inPointer) {\n      pointermap$1.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      dispatcher.enterOver(inPointer);\n      dispatcher.down(inPointer);\n    },\n    // Called when pressure or tilt changes without the x/y changing\n    touchforcechange: function touchforcechange(inEvent) {\n      this.touchmove(inEvent);\n    },\n    touchmove: function touchmove(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          inEvent.preventDefault();\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function moveOverOut(inPointer) {\n      var event = inPointer;\n      var pointer = pointermap$1.get(event.pointerId); // a finger drifted off the screen, ignore it\n\n      if (!pointer) {\n        return;\n      }\n\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      dispatcher.move(event);\n\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget; // recover from retargeting by shadow\n\n        outEvent.target = outTarget;\n\n        if (event.target) {\n          dispatcher.leaveOut(outEvent);\n          dispatcher.enterOver(event);\n        } else {\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function touchend(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function upOut(inPointer) {\n      if (!this.scrolling) {\n        dispatcher.up(inPointer);\n        dispatcher.leaveOut(inPointer);\n      }\n\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function touchcancel(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function cancelOut(inPointer) {\n      dispatcher.cancel(inPointer);\n      dispatcher.leaveOut(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function cleanUpPointer(inPointer) {\n      pointermap$1.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function dedupSynthMouse(inEvent) {\n      var lts = mouseEvents.lastTouches;\n      var t = inEvent.changedTouches[0]; // only the primary finger will synth mouse events\n\n      if (this.isPrimaryTouch(t)) {\n        // remember x/y of last touch\n        var lt = {\n          x: t.clientX,\n          y: t.clientY\n        };\n        lts.push(lt);\n\n        var fn = function (lts, lt) {\n          var i = lts.indexOf(lt);\n\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }.bind(null, lts, lt);\n\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved, touchEvents.elementChanged, touchEvents);\n  var pointermap$2 = dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent && typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: ['MSPointerDown', 'MSPointerMove', 'MSPointerUp', 'MSPointerOut', 'MSPointerOver', 'MSPointerCancel', 'MSGotPointerCapture', 'MSLostPointerCapture'],\n    register: function register(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function unregister(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: ['', 'unavailable', 'touch', 'pen', 'mouse'],\n    prepareEvent: function prepareEvent(inEvent) {\n      var e = inEvent;\n\n      if (HAS_BITMAP_TYPE) {\n        e = dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n\n      return e;\n    },\n    cleanup: function cleanup(id) {\n      pointermap$2.delete(id);\n    },\n    MSPointerDown: function MSPointerDown(inEvent) {\n      pointermap$2.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      dispatcher.down(e);\n    },\n    MSPointerMove: function MSPointerMove(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.move(e);\n    },\n    MSPointerUp: function MSPointerUp(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function MSPointerOut(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function MSPointerOver(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function MSPointerCancel(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function MSLostPointerCapture(inEvent) {\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function MSGotPointerCapture(inEvent) {\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    }\n  };\n\n  function applyPolyfill() {\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        dispatcher.registerSource('ms', msEvents);\n      } else {\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: 0,\n          enumerable: true\n        });\n        dispatcher.registerSource('mouse', mouseEvents);\n\n        if (window.ontouchstart !== undefined) {\n          dispatcher.registerSource('touch', touchEvents);\n        }\n      }\n\n      dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s;\n  var r;\n  var h;\n\n  function assertActive(id) {\n    if (!dispatcher.pointermap.has(id)) {\n      var error = new Error('NotFoundError');\n      error.name = 'NotFoundError';\n      throw error;\n    }\n  }\n\n  function assertConnected(elem) {\n    var parent = elem.parentNode;\n\n    while (parent && parent !== elem.ownerDocument) {\n      parent = parent.parentNode;\n    }\n\n    if (!parent) {\n      var error = new Error('InvalidStateError');\n      error.name = 'InvalidStateError';\n      throw error;\n    }\n  }\n\n  function inActiveButtonState(id) {\n    var p = dispatcher.pointermap.get(id);\n    return p.buttons !== 0;\n  }\n\n  if (n.msPointerEnabled) {\n    s = function s(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this, true);\n        this.msSetPointerCapture(pointerId);\n      }\n    };\n\n    r = function r(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId, true);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this);\n      }\n    };\n\n    r = function releasePointerCapture(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId);\n    };\n  }\n\n  h = function hasPointerCapture(pointerId) {\n    return !!dispatcher.captureInfo[pointerId];\n  };\n\n  function applyPolyfill$1() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        },\n        'hasPointerCapture': {\n          value: h\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  applyPolyfill();\n  applyPolyfill$1();\n  var pointerevents = {\n    dispatcher: dispatcher,\n    Installer: Installer,\n    PointerEvent: PointerEvent,\n    PointerMap: PointerMap,\n    targetFinding: targeting\n  };\n  return pointerevents;\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defaultFormatter;\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction defaultFormatter(value, unit, suffix) {\n  if (value !== 1) {\n    unit += 's';\n  }\n\n  return value + ' ' + unit + ' ' + suffix;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = dateParser;\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _toArray(arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n}\n\nfunction dateParser(date) {\n  var parsed = new Date(date);\n\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n\n  var parts = String(date).match(/\\d+/g);\n\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    var _parts$map = parts.map(function (x) {\n      return parseInt(x);\n    }),\n        _parts$map2 = _toArray(_parts$map),\n        firstP = _parts$map2[0],\n        secondP = _parts$map2[1],\n        restPs = _parts$map2.slice(2);\n\n    var correctedParts = [firstP, secondP - 1].concat(_toConsumableArray(restPs));\n    var isoDate = new Date(Date.UTC.apply(Date, _toConsumableArray(correctedParts)));\n    return isoDate;\n  }\n}"],"sourceRoot":""}