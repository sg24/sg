{"version":3,"sources":["containers/SiteMain/MainContent/HelpMe/HelpMe.js"],"names":["IS_ANIMATED","withRouter","connect","state","status","auth","cnts","cnt","skipCnt","cntTotal","changedFav","favChange","cntErr","postVideo","videoErr","filterDet","dispatch","onFetchShareActive","actions","onFetchShareCntActive","onFetchCntActive","onFetchNotifyActive","onFetchPtActive","onFetchQueActive","onFetchReqActive","onFetchCnt","userID","fetchType","limit","onFetchCntReset","onChangeFav","id","liked","favAdd","cntGrp","onChangeShareID","shareID","cntType","onChangeTag","path","onFetchVideo","url","onChangeCnt","title","det","confirm","modelType","Component","constructor","props","super","this","onScroll","window","innerHeight","Math","ceil","pageYOffset","document","body","offsetHeight","fetchLimit","showUserOptHandler","cntOpt","setState","prevState","updateObject","visible","newCntOpt","changeFavoriteHandler","isLiked","showShareHandler","history","push","changeMediaHandler","maxLength","type","removePrevMedia","removeAnim","animateSlider","removeAnimHandler","event","playVideoHandler","snapshot","concat","location","protocol","host","videoCnt","slidePlayHandler","target","setPointerCapture","pointerId","playerIcnId","clearSlidePlayhandler","slide","releasePointerCapture","style","left","videoPlayerIcn","querySelector","moveSlidePlayHandler","hasPointerCapture","newpos","clientX","parentElement","offsetLeft","offsetWidth","playerIcnHeight","timeFrame","setTimeout","mediaItms","filterMedia","filter","media","mediaDet","position","length","_step","_iterator","Object","C_Users_g_my_sg_final_deploy_react_index_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__","s","n","done","mediaItm","value","updateMedia","animateItm","direction","err","e","f","changeCntHandler","checkTitle","String","substr","filterTag","animationComplete","scrollEnable","componentDidMount","componentDidUpdate","addEventListener","componentWillUnmount","removeEventListener","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_UI_Loader_Loader__WEBPACK_IMPORTED_MODULE_6__","_components_Main_NoAcc_NoAcc__WEBPACK_IMPORTED_MODULE_7__","isAuth","icn","_components_Main_Question_Question__WEBPACK_IMPORTED_MODULE_5__","content","userOpt","showCntOpt","fav","share","nextMedia","prevMedia","disableAnim","playVideo","video","slidePlay","moveSlidePlay","clearSlidePlay","changeCnt"],"mappings":"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","file":"static/js/12.78cff1d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'pepjs';\r\n\r\nimport Question from '../../../../components/Main/Question/Question';\r\nimport Loader from '../../../../components/UI/Loader/Loader';\r\nimport NoAcc from '../../../../components/Main/NoAcc/NoAcc';\r\nimport { updateObject } from '../../../../shared/utility';\r\nimport * as actions from '../../../../store/actions/index';\r\n\r\nlet IS_ANIMATED = true;\r\n\r\nclass Questions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.onFetchCntReset();\r\n        let limit = 0;\r\n        if (window.innerHeight >= 1200) {\r\n            limit = 18\r\n        } else if(window.innerHeight >= 900) {\r\n            limit = 12;\r\n        } else if(window.innerHeight >= 500) {\r\n            limit = 9\r\n        } else {\r\n            limit = 6;\r\n        }\r\n        this.state = {\r\n            cntOpt: null,\r\n            fetchLimit: limit,\r\n            filterTag: 'shared',\r\n            mediaItms: [],\r\n            animateItm: null,\r\n            removeAnim: false,\r\n            removePrevMedia: null,\r\n            playerIcnId: null,\r\n            animationComplete: true,\r\n            scrollEnable: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchCnt(this.props.userID, this.state.filterTag, this.state.fetchLimit, 0, 0);\r\n        this.props.onChangeTag('/question');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cnts && this.props.cnts.length > 0 && !this.state.scrollEnable) {\r\n            window.addEventListener('scroll', this.onScroll, false);\r\n            this.setState({scrollEnable: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onFetchCntReset();\r\n        window.removeEventListener('scroll', this.onScroll, false);\r\n    }\r\n\r\n    onScroll = () => {\r\n        if ((window.innerHeight + Math.ceil(window.pageYOffset + 1)) >= document.body.offsetHeight) {\r\n            this.props.onFetchCnt(\r\n                    this.props.userID,  'shared' ,\r\n                    this.state.fetchLimit, this.props.skipCnt + this.state.fetchLimit, this.props.cntTotal);\r\n        }\r\n    } \r\n\r\n    showUserOptHandler = (id) => {\r\n        if (this.state.cntOpt && this.state.cntOpt.id === id) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    cntOpt: updateObject(prevState.cntOpt, {visible: !prevState.cntOpt.visible})\r\n                }\r\n            });\r\n            return\r\n        }\r\n\r\n        const newCntOpt = {visible: true, id}\r\n        this.setState({cntOpt: newCntOpt})\r\n    }\r\n\r\n    changeFavoriteHandler = (id, isLiked, favAdd, cntGrp) => {\r\n        this.props.onChangeFav(id, isLiked, favAdd, this.props.changedFav, this.props.userID, cntGrp);\r\n    }\r\n\r\n    showShareHandler = (shareID) => {\r\n        this.props.onChangeShareID(shareID, 'question');\r\n        this.props.history.push('/index/question/share')\r\n    };\r\n\r\n    changeMediaHandler = (id, maxLength, type) => {\r\n        this.setState({removePrevMedia: {id, type}, removeAnim: false});\r\n        this.animateSlider(id, maxLength, type, 900);\r\n    }\r\n\r\n    removeAnimHandler = (event) => {\r\n        if (!this.state.removePrevMedia) {\r\n            this.setState({removeAnim: true})\r\n        }\r\n    }\r\n\r\n    playVideoHandler = (snapshot) => {\r\n        this.props.onFetchVideo(snapshot.id, `${window.location.protocol + '//' + window.location.host}/media/video/${snapshot.videoCnt}`)\r\n    }\r\n\r\n    slidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        slide.setPointerCapture(event.pointerId);\r\n        this.setState({playerIcnId: id})\r\n    }\r\n\r\n    clearSlidePlayhandler = (event) => {\r\n        let slide = event.target;\r\n        slide.releasePointerCapture(event.pointerId);\r\n        slide.style.left = 0 +'px';\r\n        let videoPlayerIcn = document.querySelector('.reuse-que__media--wrapper__icn-move');\r\n        if (videoPlayerIcn) {\r\n            videoPlayerIcn.style.left = 42 + '%';\r\n        }\r\n    }\r\n\r\n    moveSlidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        if (slide.hasPointerCapture && slide.hasPointerCapture(event.pointerId)) {\r\n            let newpos = event.clientX - slide.parentElement.offsetLeft - (slide.offsetWidth/2);\r\n            if (newpos < -(slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'next', 0)\r\n                }\r\n            } else if ( newpos > (slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'prev', 0)\r\n                }\r\n            } \r\n            let videoPlayerIcn = document.querySelector('.reuse-que__media--wrapper__icn-move');\r\n            if (videoPlayerIcn) {\r\n                let playerIcnHeight = (newpos / slide.offsetWidth) * 100\r\n                videoPlayerIcn.style.left =  playerIcnHeight + 42 + '%';\r\n            }\r\n            slide.style.left = newpos +'px';\r\n        }\r\n    }\r\n\r\n    animateSlider = (id, maxLength, type, timeFrame) => {\r\n        setTimeout(() => {\r\n            let mediaItms = [...this.state.mediaItms];\r\n            let filterMedia = mediaItms.filter(media => media.id === id);\r\n            let mediaDet = {id, position: type === 'next' ? 1 : maxLength - 1};\r\n            if (filterMedia.length > 0) {\r\n                for (let mediaItm of filterMedia) {\r\n                    mediaDet = {id: mediaItm.id, position: type === 'next' ? mediaItm.position+=1 : mediaItm.position-=1};\r\n                    if (mediaDet.position > maxLength - 1) {\r\n                        mediaDet = updateObject(mediaDet, {position: 0});\r\n                    }\r\n    \r\n                    if (mediaDet.position < 0) {\r\n                        mediaDet = updateObject(mediaDet, {position: maxLength - 1});\r\n                    }\r\n                    let updateMedia = mediaItms.filter(media => media.id !== id);\r\n                    updateMedia.push(mediaDet);\r\n                    this.setState({mediaItms: updateMedia, removeAnim: false,  removePrevMedia: null, animateItm: {id, direction: type}})\r\n                }\r\n                return\r\n            }\r\n            mediaItms.push(mediaDet);\r\n            this.setState({mediaItms, removeAnim: false, removePrevMedia: null,  animateItm: {id, direction: type}})   \r\n        }, timeFrame)\r\n\r\n        setTimeout(() => {\r\n            IS_ANIMATED = true;\r\n        }, 500)\r\n    }\r\n    changeCntHandler = (id, title, det, modelType) => {\r\n        let checkTitle = String(title).length > 50 ? String(title).substr(0, 50) + '...' : title\r\n        this.props.onChangeCnt(id, checkTitle, det, false, modelType);\r\n    }\r\n\r\n    render() {\r\n        let cnt = <Loader />;\r\n        if (this.props.cntErr) {\r\n            cnt = null\r\n        }\r\n        \r\n        if (this.props.cnts && this.props.cnts.length === 0 ) {\r\n            cnt = <NoAcc \r\n                    isAuth={this.props.status}\r\n                    det='No Shared Question found!'\r\n                    icn='hand-paper'\r\n                    filter />\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length > 0) {\r\n            cnt = <Question \r\n                content={this.props.cnts} \r\n                media={this.props.media}\r\n                userOpt={this.showUserOptHandler}\r\n                showCntOpt={this.state.cntOpt}\r\n                fav={this.changeFavoriteHandler}\r\n                changedFav={this.props.changedFav}\r\n                favChange={this.props.favChange}\r\n                share={this.showShareHandler}\r\n                nextMedia={this.changeMediaHandler}\r\n                prevMedia={this.changeMediaHandler}\r\n                mediaItms={this.state.mediaItms}\r\n                removeAnim={this.removeAnimHandler}\r\n                disableAnim={this.state.removeAnim}\r\n                animateItm={this.state.animateItm}\r\n                removePrevMedia={this.state.removePrevMedia}\r\n                playVideo={this.playVideoHandler}\r\n                videoErr={this.props.videoErr}\r\n                video={this.props.postVideo}\r\n                playerIcnId={this.state.playerIcnId}\r\n                slidePlay={this.slidePlayHandler}\r\n                moveSlidePlay={this.moveSlidePlayHandler}\r\n                clearSlidePlay={this.clearSlidePlayhandler}\r\n                changeCnt={this.changeCntHandler}/>\r\n        }\r\n\r\n        if (!this.props.status) {\r\n            cnt = <NoAcc \r\n            isAuth={this.props.status}\r\n            det='No Shared Question found!'\r\n            icn='hand-paper'\r\n            filter />\r\n        }\r\n\r\n        return cnt\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        status: state.auth.status,\r\n        cnts: state.cnt.cnts,\r\n        skipCnt: state.cnt.skipCnt,\r\n        cntTotal: state.cnt.cntTotal,\r\n        changedFav: state.cnt.changedFav,\r\n        favChange: state.cnt.favChange,\r\n        cntErr: state.cnt.cntErr,\r\n        postVideo: state.cnt.postVideo,\r\n        videoErr: state.cnt.videoErr,\r\n        filterDet: state.cnt.filterDet\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchShareActive: () => dispatch(actions.fetchShareactiveInit()),\r\n        onFetchShareCntActive: () => dispatch(actions.fetchShareCntactiveInit()),\r\n        onFetchCntActive: () => dispatch(actions.fetchCntActiveInit()),\r\n        onFetchNotifyActive: () => dispatch(actions.fetchNotifyactiveInit()),\r\n        onFetchPtActive: () => dispatch(actions.fetchPtActiveInit()),\r\n        onFetchQueActive: () => dispatch(actions.fetchQueActiveInit()),\r\n        onFetchReqActive: () => dispatch(actions.fetchReqActiveInit()),\r\n        onFetchCnt: (userID, fetchType, limit, skipCnt, cntTotal) => dispatch(actions.fetchCntInit(userID, fetchType, limit, skipCnt, cntTotal)),\r\n        onFetchCntReset: () => dispatch(actions.fetchCntReset()),\r\n        onChangeFav: (id, liked, favAdd, changedFav, userID, cntGrp) => dispatch(actions.changeFavInit(id, liked, favAdd, changedFav, userID, cntGrp)),\r\n        onChangeShareID: (shareID,  cntType) => dispatch(actions.shareID(shareID,  cntType)),\r\n        onChangeTag: (path) => dispatch(actions.changeTagsPath(path)),\r\n        onFetchVideo: (id, url) => dispatch(actions.fetchVideo(id, url)),\r\n        onChangeCnt: (id, title, det, confirm, modelType) => dispatch(actions.changeCntInit(id, title, det, confirm,  modelType))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Questions));"],"sourceRoot":""}