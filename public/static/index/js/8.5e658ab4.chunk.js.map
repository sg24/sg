{"version":3,"sources":["components/Main/Users/User/User.js","components/Main/Users/Users.js","containers/SiteMain/MainContent/Users/Users.js"],"names":["user","props","status","userImg","src","image","alt","userOpt","className","onClick","addUser","push","name","username","size","round","request","acceptUser","rejUser","icon","pending","cancelReq","accept","unfriend","join","href","id","studenttotal","users","content","map","index","key","changeCnt","bind","blockUser","Model","onScroll","document","documentElement","scrollHeight","scrollTop","clientHeight","onFetchCnt","userID","state","fetchLimit","skipCnt","cntTotal","changeCntHandler","title","det","confirm","modelType","onChangeCnt","onFetchCntReset","limit","window","innerHeight","filterTag","scrollEnable","this","onChangeTag","cnts","length","addEventListener","setState","removeEventListener","onFetchShareActive","onFetchCntActive","onFetchShareCntActive","onFetchNotifyActive","onFetchPtActive","onFetchQueActive","onFetchReqActive","cnt","Loader","cntErr","NoAcc","isAuth","icn","filter","Users","Component","withRouter","connect","auth","filterDet","blocked","dispatch","actions","fetchType","path"],"mappings":"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","file":"static/js/8.5e658ab4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './User.css'; \r\n\r\nconst user = props => {\r\n    let status = ['reuse-user__det--img__status--off'];\r\n    let userImg = <img src={props.user.image} alt=\"\"/>\r\n    let userOpt = (\r\n        <ul className=\"reuse-user__opt\">\r\n            <li>\r\n                <div \r\n                    className=\"reuse-user__opt--add\"\r\n                    onClick={props.addUser}>\r\n                     Add\r\n                </div>\r\n            </li>\r\n            {/* <li>\r\n                <div \r\n                    className=\"reuse-user__opt--blk\"\r\n                    onClick={props.blockUser}>\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'eye-slash']} \r\n                        className=\"icon icon__reuse-user--opt\" />\r\n                    Block\r\n                </div>\r\n            </li> */}\r\n        </ul>\r\n    );\r\n\r\n    if (props.user.status) {\r\n        status.push('reuse-user__det--img__status--on')\r\n    }\r\n\r\n    if (props.user.image === '') {\r\n        userImg = <Avatar name={props.user.username} size='60' round />\r\n    }\r\n\r\n    if (props.user.request) {\r\n        userOpt = (\r\n            <ul className=\"reuse-user__opt\">\r\n                <li>\r\n                    <div \r\n                        className=\"reuse-user__opt--acc\"\r\n                        onClick={props.acceptUser}>\r\n                        Accept\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div \r\n                        className=\"reuse-user__opt--rej\"\r\n                        onClick={props.rejUser}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'user-slash']} \r\n                            className=\"icon icon__reuse-user--opt\" />\r\n                        Reject\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    if (props.user.pending) {\r\n        userOpt = (\r\n            <ul className=\"reuse-user__opt\">\r\n                <li \r\n                    onClick={props.cancelReq}>\r\n                    <div className=\"reuse-user__opt--cancel\">\r\n                        Cancel\r\n                    </div>\r\n                </li>\r\n                {/* <li>\r\n                    <div \r\n                        className=\"reuse-user__opt--blk\"\r\n                        onClick={props.blockUser}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'eye-slash']} \r\n                            className=\"icon icon__reuse-user--opt\" />\r\n                        Block\r\n                    </div>\r\n                </li> */}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    if (props.user.accept) {\r\n        userOpt = (\r\n            <ul className=\"reuse-user__opt\">\r\n                <li \r\n                    onClick={props.unfriend}>\r\n                    <div className=\"reuse-user__opt--rej\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'user-slash']} \r\n                        className=\"icon icon__reuse-user--opt\" />\r\n                        Unfriend\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <div className=\"reuse-user\">\r\n        <div className=\"reuse-user__det\">\r\n            <div className=\"reuse-user__det--img\">\r\n                { userImg }\r\n                <div className={`reuse-user__det--img__status ${status.join(' ')}`}>\r\n                </div>\r\n            </div>\r\n            <ul className=\"reuse-user__det--user\">\r\n                <li className=\"reuse-user__det--user__info\">  \r\n                    <a href={`/user/profile/${props.user.id}`}>{props.user.username}</a>\r\n                </li>\r\n                <li><div>{props.user.studenttotal}</div> Student</li> \r\n            </ul>\r\n        </div>\r\n       {userOpt}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default user;","import React from 'react';\r\n\r\nimport User from './User/User';\r\n\r\nconst users = props => {\r\n    const allUser = props.content.map((user, index) => (\r\n        <User \r\n            key={index} \r\n            user={user}\r\n            addUser={props.changeCnt.bind(this, user.id, null, 'addUser', true, 'user')}\r\n            blockUser={props.changeCnt.bind(this, user.id, user.username, 'blockUser', false, 'user')}\r\n            acceptUser={props.changeCnt.bind(this, user.id, user.username, 'acceptUser', false, 'user')}\r\n            rejUser={props.changeCnt.bind(this, user.id, user.username, 'rejUser', false, 'user')}\r\n            cancelReq={props.changeCnt.bind(this, user.id, user.username, 'cancelReq', false, 'user')}\r\n            unfriend={props.changeCnt.bind(this, user.id, user.username, 'unfriend', false, 'user')}/>\r\n    ));\r\n\r\n    return allUser;\r\n}\r\n\r\nexport default users;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Users from '../../../../components/Main/Users/Users';\r\nimport NoAcc from '../../../../components/Main/NoAcc/NoAcc';\r\nimport Loader from '../../../../components/UI/Loader/Loader';\r\nimport * as actions from '../../../../store/actions/index';\r\n\r\nclass Model extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.onFetchCntReset();\r\n        let limit = 0;\r\n        if (window.innerHeight >= 1200) {\r\n            limit = 20;\r\n        } else if(window.innerHeight >= 900) {\r\n            limit = 16;\r\n        } else if(window.innerHeight >= 500) {\r\n            limit = 12;\r\n        } else {\r\n            limit = 8;\r\n        }\r\n        this.state = {\r\n            fetchLimit: limit,\r\n            filterTag: 'users',\r\n            scrollEnable: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchCnt(this.props.userID, this.state.filterTag, this.state.fetchLimit, 0, 0);\r\n        this.props.onChangeTag('/users');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cnts && this.props.cnts.length > 0 && !this.state.scrollEnable) {\r\n            window.addEventListener('scroll', this.onScroll, false);\r\n            this.setState({scrollEnable: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onFetchCntReset();\r\n        window.removeEventListener('scroll', this.onScroll, false);\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (document.documentElement.scrollHeight - document.documentElement.scrollTop === document.documentElement.clientHeight) {\r\n            this.props.onFetchCnt(\r\n                    this.props.userID,  'users' ,\r\n                    this.state.fetchLimit, this.props.skipCnt + this.state.fetchLimit, this.props.cntTotal);\r\n        }\r\n    } \r\n\r\n\r\n    changeCntHandler = (id, title, det, confirm, modelType) => {\r\n        this.props.onChangeCnt(id, title, det, confirm, modelType);\r\n    };\r\n\r\n    render() {\r\n        this.props.onFetchShareActive();\r\n        this.props.onFetchCntActive();\r\n        this.props.onFetchShareCntActive();\r\n        this.props.onFetchNotifyActive();\r\n        this.props.onFetchPtActive();\r\n        this.props.onFetchQueActive();\r\n        this.props.onFetchReqActive();\r\n\r\n        let cnt = <Loader />;\r\n        if (this.props.cntErr) {\r\n            cnt = null\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length === 0) {\r\n            cnt = <NoAcc \r\n                isAuth={this.props.status}\r\n                det='Users not found !!'\r\n                icn='users'\r\n                filter/>\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length > 0) {\r\n            cnt = <Users\r\n                content={this.props.cnts}\r\n                changeCnt={this.changeCntHandler}/>\r\n        }\r\n\r\n        return cnt\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        status: state.auth.status,\r\n        cnts: state.cnt.cnts,\r\n        skipCnt: state.cnt.skipCnt,\r\n        cntTotal: state.cnt.cntTotal,\r\n        filterDet: state.cnt.filterDet,\r\n        cntErr: state.cnt.cntErr,\r\n        addUser: state.cnt.addUser,\r\n        pending: state.cnt.pending,\r\n        request: state.cnt.request,\r\n        blocked: state.cnt.blocked,\r\n        accept: state.cnt.accept\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchShareActive: () => dispatch(actions.fetchShareactiveInit()),\r\n        onFetchShareCntActive: () => dispatch(actions.fetchShareCntactiveInit()),\r\n        onFetchCntActive: () => dispatch(actions.fetchCntActiveInit()),\r\n        onFetchNotifyActive: () => dispatch(actions.fetchNotifyactiveInit()),\r\n        onFetchPtActive: () => dispatch(actions.fetchPtActiveInit()),\r\n        onFetchQueActive: () => dispatch(actions.fetchQueActiveInit()),\r\n        onFetchReqActive: () => dispatch(actions.fetchReqActiveInit()),\r\n        onFetchCnt: (userID, fetchType, limit, skipCnt, cntTotal) => dispatch(actions.fetchCntInit(userID, fetchType, limit, skipCnt, cntTotal)),\r\n        onFetchCntReset: () => dispatch(actions.fetchCntReset()),\r\n        onChangeTag: (path) => dispatch(actions.changeTagsPath(path)),\r\n        onChangeCnt: (id, title, det, confirm, modelType) => dispatch(actions.changeCntInit(id, title, det, confirm, modelType))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Model));"],"sourceRoot":""}