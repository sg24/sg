{"version":3,"sources":["containers/SiteMain/MainContent/Questions/Questions.js"],"names":["IS_ANIMATED","Questions","props","onScroll","document","documentElement","scrollHeight","scrollTop","clientHeight","onFetchCnt","userID","state","fetchLimit","skipCnt","cntTotal","showUserOptHandler","id","cntOpt","setState","prevState","updateObject","visible","newCntOpt","changeFavoriteHandler","isLiked","favAdd","cntGrp","onChangeFav","changedFav","showShareHandler","shareID","onChangeShareID","history","push","changeMediaHandler","maxLength","type","removePrevMedia","removeAnim","animateSlider","removeAnimHandler","event","playVideoHandler","snapshot","onFetchVideo","window","location","protocol","host","videoCnt","slidePlayHandler","target","setPointerCapture","pointerId","playerIcnId","clearSlidePlayhandler","slide","releasePointerCapture","style","left","videoPlayerIcn","querySelector","moveSlidePlayHandler","hasPointerCapture","newpos","clientX","parentElement","offsetLeft","offsetWidth","playerIcnHeight","timeFrame","setTimeout","mediaItms","filterMedia","filter","media","mediaDet","position","length","mediaItm","updateMedia","animateItm","direction","changeCntHandler","title","det","modelType","checkTitle","String","substr","onChangeCnt","onFetchCntReset","limit","innerHeight","filterTag","animationComplete","scrollEnable","this","onChangeTag","cnts","addEventListener","removeEventListener","onFetchShareActive","onFetchCntActive","onFetchShareCntActive","onFetchNotifyActive","onFetchPtActive","onFetchQueActive","onFetchReqActive","cnt","cntErr","isAuth","icn","content","userOpt","showCntOpt","fav","favChange","share","nextMedia","prevMedia","disableAnim","playVideo","videoErr","video","postVideo","slidePlay","moveSlidePlay","clearSlidePlay","changeCnt","Component","withRouter","connect","auth","filterDet","dispatch","actions","fetchType","liked","cntType","path","url","confirm"],"mappings":"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","file":"static/js/10.0241de36.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'pepjs';\r\n\r\nimport Question from '../../../../components/Main/Question/Question';\r\nimport Loader from '../../../../components/UI/Loader/Loader';\r\nimport NoAcc from '../../../../components/Main/NoAcc/NoAcc';\r\nimport { updateObject } from '../../../../shared/utility';\r\nimport * as actions from '../../../../store/actions/index';\r\n\r\nlet IS_ANIMATED = true;\r\n\r\nclass Questions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.onFetchCntReset();\r\n        let limit = 0;\r\n        if (window.innerHeight >= 1200) {\r\n            limit = 18\r\n        } else if(window.innerHeight >= 900) {\r\n            limit = 12;\r\n        } else if(window.innerHeight >= 500) {\r\n            limit = 9\r\n        } else {\r\n            limit = 6;\r\n        }\r\n        this.state = {\r\n            cntOpt: null,\r\n            fetchLimit: limit,\r\n            filterTag: 'question',\r\n            mediaItms: [],\r\n            animateItm: null,\r\n            removeAnim: false,\r\n            removePrevMedia: null,\r\n            playerIcnId: null,\r\n            animationComplete: true,\r\n            scrollEnable: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchCnt(this.props.userID, this.state.filterTag, this.state.fetchLimit, 0, 0);\r\n        this.props.onChangeTag('/question');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cnts && this.props.cnts.length > 0 && !this.state.scrollEnable) {\r\n            window.addEventListener('scroll', this.onScroll, false);\r\n            this.setState({scrollEnable: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onFetchCntReset();\r\n        window.removeEventListener('scroll', this.onScroll, false);\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (document.documentElement.scrollHeight - document.documentElement.scrollTop === document.documentElement.clientHeight) {\r\n            this.props.onFetchCnt(\r\n                    this.props.userID,  'question' ,\r\n                    this.state.fetchLimit, this.props.skipCnt + this.state.fetchLimit, this.props.cntTotal);\r\n        }\r\n    } \r\n\r\n    showUserOptHandler = (id) => {\r\n        if (this.state.cntOpt && this.state.cntOpt.id === id) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    cntOpt: updateObject(prevState.cntOpt, {visible: !prevState.cntOpt.visible})\r\n                }\r\n            });\r\n            return\r\n        }\r\n\r\n        const newCntOpt = {visible: true, id}\r\n        this.setState({cntOpt: newCntOpt})\r\n    }\r\n\r\n    changeFavoriteHandler = (id, isLiked, favAdd, cntGrp) => {\r\n        this.props.onChangeFav(id, isLiked, favAdd, this.props.changedFav, this.props.userID, cntGrp);\r\n    }\r\n\r\n    showShareHandler = (shareID) => {\r\n        this.props.onChangeShareID(shareID, 'question');\r\n        this.props.history.push('/index/question/share')\r\n    };\r\n\r\n    changeMediaHandler = (id, maxLength, type) => {\r\n        this.setState({removePrevMedia: {id, type}, removeAnim: false});\r\n        this.animateSlider(id, maxLength, type, 900);\r\n    }\r\n\r\n    removeAnimHandler = (event) => {\r\n        if (!this.state.removePrevMedia) {\r\n            this.setState({removeAnim: true})\r\n        }\r\n    }\r\n\r\n    playVideoHandler = (snapshot) => {\r\n        this.props.onFetchVideo(snapshot.id, `${window.location.protocol + '//' + window.location.host}/media/video/${snapshot.videoCnt}`)\r\n    }\r\n\r\n    slidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        slide.setPointerCapture(event.pointerId);\r\n        this.setState({playerIcnId: id})\r\n    }\r\n\r\n    clearSlidePlayhandler = (event) => {\r\n        let slide = event.target;\r\n        slide.releasePointerCapture(event.pointerId);\r\n        slide.style.left = 0 +'px';\r\n        let videoPlayerIcn = document.querySelector('.reuse-que__media--wrapper__icn-move');\r\n        if (videoPlayerIcn) {\r\n            videoPlayerIcn.style.left = 42 + '%';\r\n        }\r\n    }\r\n\r\n    moveSlidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        if (slide.hasPointerCapture && slide.hasPointerCapture(event.pointerId)) {\r\n            let newpos = event.clientX - slide.parentElement.offsetLeft - (slide.offsetWidth/2);\r\n            if (newpos < -(slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'next', 0)\r\n                }\r\n            } else if ( newpos > (slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'prev', 0)\r\n                }\r\n            } \r\n            let videoPlayerIcn = document.querySelector('.reuse-que__media--wrapper__icn-move');\r\n            if (videoPlayerIcn) {\r\n                let playerIcnHeight = (newpos / slide.offsetWidth) * 100\r\n                videoPlayerIcn.style.left =  playerIcnHeight + 42 + '%';\r\n            }\r\n            slide.style.left = newpos +'px';\r\n        }\r\n    }\r\n\r\n    animateSlider = (id, maxLength, type, timeFrame) => {\r\n        setTimeout(() => {\r\n            let mediaItms = [...this.state.mediaItms];\r\n            let filterMedia = mediaItms.filter(media => media.id === id);\r\n            let mediaDet = {id, position: type === 'next' ?  maxLength > 1 ? 1 : 0 : maxLength - 1};\r\n            if (filterMedia.length > 0) {\r\n                for (let mediaItm of filterMedia) {\r\n                    mediaDet = {id: mediaItm.id, position: type === 'next' ? mediaItm.position+=1 : mediaItm.position-=1};\r\n                    if (mediaDet.position > maxLength - 1) {\r\n                        mediaDet = updateObject(mediaDet, {position: 0});\r\n                    }\r\n    \r\n                    if (mediaDet.position < 0) {\r\n                        mediaDet = updateObject(mediaDet, {position: maxLength - 1});\r\n                    }\r\n                    let updateMedia = mediaItms.filter(media => media.id !== id);\r\n                    updateMedia.push(mediaDet);\r\n                    this.setState({mediaItms: updateMedia, removeAnim: false,  removePrevMedia: null, animateItm: {id, direction: type}})\r\n                }\r\n                return\r\n            }\r\n            mediaItms.push(mediaDet);\r\n            this.setState({mediaItms, removeAnim: false, removePrevMedia: null,  animateItm: {id, direction: type}})   \r\n        }, timeFrame)\r\n\r\n        setTimeout(() => {\r\n            IS_ANIMATED = true;\r\n        }, 500)\r\n    }\r\n    changeCntHandler = (id, title, det, modelType) => {\r\n        let checkTitle = String(title).length > 50 ? String(title).substr(0, 50) + '...' : title\r\n        this.props.onChangeCnt(id, checkTitle, det, false, modelType);\r\n    }\r\n\r\n    render() {\r\n        this.props.onFetchShareActive();\r\n        this.props.onFetchCntActive();\r\n        this.props.onFetchShareCntActive();\r\n        this.props.onFetchNotifyActive();\r\n        this.props.onFetchPtActive();\r\n        this.props.onFetchQueActive();\r\n        this.props.onFetchReqActive();\r\n\r\n        let cnt = <Loader />;\r\n        if (this.props.cntErr) {\r\n            cnt = null\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length === 0 ) {\r\n            cnt = <NoAcc \r\n                    isAuth={this.props.userID !== null}\r\n                    det='No content found!'\r\n                    icn='clone'\r\n                    filter />\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length === 0 ) {\r\n            cnt = <NoAcc \r\n                    isAuth={this.props.userID !== null}\r\n                    det='No content found!'\r\n                    icn='clone'\r\n                    filter />\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length > 0) {\r\n            cnt = <Question \r\n                content={this.props.cnts} \r\n                media={this.props.media}\r\n                userOpt={this.showUserOptHandler}\r\n                showCntOpt={this.state.cntOpt}\r\n                fav={this.changeFavoriteHandler}\r\n                changedFav={this.props.changedFav}\r\n                favChange={this.props.favChange}\r\n                share={this.showShareHandler}\r\n                nextMedia={this.changeMediaHandler}\r\n                prevMedia={this.changeMediaHandler}\r\n                mediaItms={this.state.mediaItms}\r\n                removeAnim={this.removeAnimHandler}\r\n                disableAnim={this.state.removeAnim}\r\n                animateItm={this.state.animateItm}\r\n                removePrevMedia={this.state.removePrevMedia}\r\n                playVideo={this.playVideoHandler}\r\n                videoErr={this.props.videoErr}\r\n                video={this.props.postVideo}\r\n                playerIcnId={this.state.playerIcnId}\r\n                slidePlay={this.slidePlayHandler}\r\n                moveSlidePlay={this.moveSlidePlayHandler}\r\n                clearSlidePlay={this.clearSlidePlayhandler}\r\n                changeCnt={this.changeCntHandler}/>\r\n        }\r\n\r\n        return cnt\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userID: state.auth.userID,\r\n        cnts: state.cnt.cnts,\r\n        skipCnt: state.cnt.skipCnt,\r\n        cntTotal: state.cnt.cntTotal,\r\n        changedFav: state.cnt.changedFav,\r\n        favChange: state.cnt.favChange,\r\n        cntErr: state.cnt.cntErr,\r\n        postVideo: state.cnt.postVideo,\r\n        videoErr: state.cnt.videoErr,\r\n        filterDet: state.cnt.filterDet\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchShareActive: () => dispatch(actions.fetchShareactiveInit()),\r\n        onFetchShareCntActive: () => dispatch(actions.fetchShareCntactiveInit()),\r\n        onFetchCntActive: () => dispatch(actions.fetchCntActiveInit()),\r\n        onFetchNotifyActive: () => dispatch(actions.fetchNotifyactiveInit()),\r\n        onFetchPtActive: () => dispatch(actions.fetchPtActiveInit()),\r\n        onFetchQueActive: () => dispatch(actions.fetchQueActiveInit()),\r\n        onFetchReqActive: () => dispatch(actions.fetchReqActiveInit()),\r\n        onFetchCnt: (userID, fetchType, limit, skipCnt, cntTotal) => dispatch(actions.fetchCntInit(userID, fetchType, limit, skipCnt, cntTotal)),\r\n        onFetchCntReset: () => dispatch(actions.fetchCntReset()),\r\n        onChangeFav: (id, liked, favAdd, changedFav, userID, cntGrp) => dispatch(actions.changeFavInit(id, liked, favAdd, changedFav, userID, cntGrp)),\r\n        onChangeShareID: (shareID,  cntType) => dispatch(actions.shareID(shareID,  cntType)),\r\n        onChangeTag: (path) => dispatch(actions.changeTagsPath(path)),\r\n        onFetchVideo: (id, url) => dispatch(actions.fetchVideo(id, url)),\r\n        onChangeCnt: (id, title, det, confirm, modelType) => dispatch(actions.changeCntInit(id, title, det, confirm,  modelType))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Questions));"],"sourceRoot":""}