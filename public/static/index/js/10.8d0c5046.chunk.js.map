{"version":3,"sources":["containers/SiteMain/MainContent/Questions/Questions.js"],"names":["IS_ANIMATED","Questions","props","_this","Object","C_Users_g_my_sg_final_deploy_react_index_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_g_my_sg_final_deploy_react_index_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_g_my_sg_final_deploy_react_index_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","onScroll","document","documentElement","scrollHeight","scrollTop","clientHeight","onFetchCnt","userID","state","fetchLimit","skipCnt","cntTotal","showUserOptHandler","id","cntOpt","setState","prevState","updateObject","visible","newCntOpt","changeFavoriteHandler","isLiked","favAdd","cntGrp","onChangeFav","changedFav","showShareHandler","shareID","onChangeShareID","history","push","changeMediaHandler","maxLength","type","removePrevMedia","removeAnim","animateSlider","removeAnimHandler","event","playVideoHandler","snapshot","onFetchVideo","concat","window","location","protocol","host","videoCnt","slidePlayHandler","target","setPointerCapture","pointerId","playerIcnId","clearSlidePlayhandler","slide","releasePointerCapture","style","left","videoPlayerIcn","querySelector","moveSlidePlayHandler","hasPointerCapture","newpos","clientX","parentElement","offsetLeft","offsetWidth","playerIcnHeight","timeFrame","setTimeout","mediaItms","C_Users_g_my_sg_final_deploy_react_index_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","filterMedia","filter","media","mediaDet","position","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","mediaItm","value","updateMedia","animateItm","direction","err","return","changeCntHandler","title","det","modelType","checkTitle","String","substr","onChangeCnt","onFetchCntReset","limit","innerHeight","filterTag","animationComplete","scrollEnable","onChangeTag","cnts","addEventListener","removeEventListener","onFetchShareActive","onFetchCntActive","onFetchShareCntActive","onFetchNotifyActive","onFetchPtActive","onFetchQueActive","onFetchReqActive","cnt","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_UI_Loader_Loader__WEBPACK_IMPORTED_MODULE_11__","cntErr","_components_Main_NoAcc_NoAcc__WEBPACK_IMPORTED_MODULE_12__","isAuth","icn","_components_Main_Question_Question__WEBPACK_IMPORTED_MODULE_10__","content","userOpt","showCntOpt","fav","favChange","share","nextMedia","prevMedia","disableAnim","playVideo","videoErr","video","postVideo","slidePlay","moveSlidePlay","clearSlidePlay","changeCnt","Component","withRouter","connect","auth","filterDet","dispatch","actions","fetchType","liked","cntType","path","url","confirm"],"mappings":"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","file":"static/js/10.8d0c5046.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'pepjs';\r\n\r\nimport Question from '../../../../components/Main/Question/Question';\r\nimport Loader from '../../../../components/UI/Loader/Loader';\r\nimport NoAcc from '../../../../components/Main/NoAcc/NoAcc';\r\nimport { updateObject } from '../../../../shared/utility';\r\nimport * as actions from '../../../../store/actions/index';\r\n\r\nlet IS_ANIMATED = true;\r\n\r\nclass Questions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.onFetchCntReset();\r\n        let limit = 0;\r\n        if (window.innerHeight >= 1200) {\r\n            limit = 18\r\n        } else if(window.innerHeight >= 900) {\r\n            limit = 12;\r\n        } else if(window.innerHeight >= 500) {\r\n            limit = 9\r\n        } else {\r\n            limit = 6;\r\n        }\r\n        this.state = {\r\n            cntOpt: null,\r\n            fetchLimit: limit,\r\n            filterTag: 'question',\r\n            mediaItms: [],\r\n            animateItm: null,\r\n            removeAnim: false,\r\n            removePrevMedia: null,\r\n            playerIcnId: null,\r\n            animationComplete: true,\r\n            scrollEnable: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchCnt(this.props.userID, this.state.filterTag, this.state.fetchLimit, 0, 0);\r\n        this.props.onChangeTag('/question');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cnts && this.props.cnts.length > 0 && !this.state.scrollEnable) {\r\n            window.addEventListener('scroll', this.onScroll, false);\r\n            this.setState({scrollEnable: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onFetchCntReset();\r\n        window.removeEventListener('scroll', this.onScroll, false);\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (document.documentElement.scrollHeight - document.documentElement.scrollTop === document.documentElement.clientHeight) {\r\n            this.props.onFetchCnt(\r\n                    this.props.userID,  'question' ,\r\n                    this.state.fetchLimit, this.props.skipCnt + this.state.fetchLimit, this.props.cntTotal);\r\n        }\r\n    } \r\n\r\n    showUserOptHandler = (id) => {\r\n        if (this.state.cntOpt && this.state.cntOpt.id === id) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    cntOpt: updateObject(prevState.cntOpt, {visible: !prevState.cntOpt.visible})\r\n                }\r\n            });\r\n            return\r\n        }\r\n\r\n        const newCntOpt = {visible: true, id}\r\n        this.setState({cntOpt: newCntOpt})\r\n    }\r\n\r\n    changeFavoriteHandler = (id, isLiked, favAdd, cntGrp) => {\r\n        this.props.onChangeFav(id, isLiked, favAdd, this.props.changedFav, this.props.userID, cntGrp);\r\n    }\r\n\r\n    showShareHandler = (shareID) => {\r\n        this.props.onChangeShareID(shareID, 'question');\r\n        this.props.history.push('/index/question/share')\r\n    };\r\n\r\n    changeMediaHandler = (id, maxLength, type) => {\r\n        this.setState({removePrevMedia: {id, type}, removeAnim: false});\r\n        this.animateSlider(id, maxLength, type, 900);\r\n    }\r\n\r\n    removeAnimHandler = (event) => {\r\n        if (!this.state.removePrevMedia) {\r\n            this.setState({removeAnim: true})\r\n        }\r\n    }\r\n\r\n    playVideoHandler = (snapshot) => {\r\n        this.props.onFetchVideo(snapshot.id, `${window.location.protocol + '//' + window.location.host}/media/video/${snapshot.videoCnt}`)\r\n    }\r\n\r\n    slidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        slide.setPointerCapture(event.pointerId);\r\n        this.setState({playerIcnId: id})\r\n    }\r\n\r\n    clearSlidePlayhandler = (event) => {\r\n        let slide = event.target;\r\n        slide.releasePointerCapture(event.pointerId);\r\n        slide.style.left = 0 +'px';\r\n        let videoPlayerIcn = document.querySelector('.reuse-que__media--wrapper__icn-move');\r\n        if (videoPlayerIcn) {\r\n            videoPlayerIcn.style.left = 42 + '%';\r\n        }\r\n    }\r\n\r\n    moveSlidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        if (slide.hasPointerCapture && slide.hasPointerCapture(event.pointerId)) {\r\n            let newpos = event.clientX - slide.parentElement.offsetLeft - (slide.offsetWidth/2);\r\n            if (newpos < -(slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'next', 0)\r\n                }\r\n            } else if ( newpos > (slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'prev', 0)\r\n                }\r\n            } \r\n            let videoPlayerIcn = document.querySelector('.reuse-que__media--wrapper__icn-move');\r\n            if (videoPlayerIcn) {\r\n                let playerIcnHeight = (newpos / slide.offsetWidth) * 100\r\n                videoPlayerIcn.style.left =  playerIcnHeight + 42 + '%';\r\n            }\r\n            slide.style.left = newpos +'px';\r\n        }\r\n    }\r\n\r\n    animateSlider = (id, maxLength, type, timeFrame) => {\r\n        setTimeout(() => {\r\n            let mediaItms = [...this.state.mediaItms];\r\n            let filterMedia = mediaItms.filter(media => media.id === id);\r\n            let mediaDet = {id, position: type === 'next' ?  maxLength > 1 ? 1 : 0 : maxLength - 1};\r\n            if (filterMedia.length > 0) {\r\n                for (let mediaItm of filterMedia) {\r\n                    mediaDet = {id: mediaItm.id, position: type === 'next' ? mediaItm.position+=1 : mediaItm.position-=1};\r\n                    if (mediaDet.position > maxLength - 1) {\r\n                        mediaDet = updateObject(mediaDet, {position: 0});\r\n                    }\r\n    \r\n                    if (mediaDet.position < 0) {\r\n                        mediaDet = updateObject(mediaDet, {position: maxLength - 1});\r\n                    }\r\n                    let updateMedia = mediaItms.filter(media => media.id !== id);\r\n                    updateMedia.push(mediaDet);\r\n                    this.setState({mediaItms: updateMedia, removeAnim: false,  removePrevMedia: null, animateItm: {id, direction: type}})\r\n                }\r\n                return\r\n            }\r\n            mediaItms.push(mediaDet);\r\n            this.setState({mediaItms, removeAnim: false, removePrevMedia: null,  animateItm: {id, direction: type}})   \r\n        }, timeFrame)\r\n\r\n        setTimeout(() => {\r\n            IS_ANIMATED = true;\r\n        }, 500)\r\n    }\r\n    changeCntHandler = (id, title, det, modelType) => {\r\n        let checkTitle = String(title).length > 50 ? String(title).substr(0, 50) + '...' : title\r\n        this.props.onChangeCnt(id, checkTitle, det, false, modelType);\r\n    }\r\n\r\n    render() {\r\n        this.props.onFetchShareActive();\r\n        this.props.onFetchCntActive();\r\n        this.props.onFetchShareCntActive();\r\n        this.props.onFetchNotifyActive();\r\n        this.props.onFetchPtActive();\r\n        this.props.onFetchQueActive();\r\n        this.props.onFetchReqActive();\r\n\r\n        let cnt = <Loader />;\r\n        if (this.props.cntErr) {\r\n            cnt = null\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length === 0 ) {\r\n            cnt = <NoAcc \r\n                    isAuth={this.props.userID !== null}\r\n                    det='No content found!'\r\n                    icn='clone'\r\n                    filter />\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length === 0 ) {\r\n            cnt = <NoAcc \r\n                    isAuth={this.props.userID !== null}\r\n                    det='No content found!'\r\n                    icn='clone'\r\n                    filter />\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length > 0) {\r\n            cnt = <Question \r\n                content={this.props.cnts} \r\n                media={this.props.media}\r\n                userOpt={this.showUserOptHandler}\r\n                showCntOpt={this.state.cntOpt}\r\n                fav={this.changeFavoriteHandler}\r\n                changedFav={this.props.changedFav}\r\n                favChange={this.props.favChange}\r\n                share={this.showShareHandler}\r\n                nextMedia={this.changeMediaHandler}\r\n                prevMedia={this.changeMediaHandler}\r\n                mediaItms={this.state.mediaItms}\r\n                removeAnim={this.removeAnimHandler}\r\n                disableAnim={this.state.removeAnim}\r\n                animateItm={this.state.animateItm}\r\n                removePrevMedia={this.state.removePrevMedia}\r\n                playVideo={this.playVideoHandler}\r\n                videoErr={this.props.videoErr}\r\n                video={this.props.postVideo}\r\n                playerIcnId={this.state.playerIcnId}\r\n                slidePlay={this.slidePlayHandler}\r\n                moveSlidePlay={this.moveSlidePlayHandler}\r\n                clearSlidePlay={this.clearSlidePlayhandler}\r\n                changeCnt={this.changeCntHandler}/>\r\n        }\r\n\r\n        return cnt\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userID: state.auth.userID,\r\n        cnts: state.cnt.cnts,\r\n        skipCnt: state.cnt.skipCnt,\r\n        cntTotal: state.cnt.cntTotal,\r\n        changedFav: state.cnt.changedFav,\r\n        favChange: state.cnt.favChange,\r\n        cntErr: state.cnt.cntErr,\r\n        postVideo: state.cnt.postVideo,\r\n        videoErr: state.cnt.videoErr,\r\n        filterDet: state.cnt.filterDet\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchShareActive: () => dispatch(actions.fetchShareactiveInit()),\r\n        onFetchShareCntActive: () => dispatch(actions.fetchShareCntactiveInit()),\r\n        onFetchCntActive: () => dispatch(actions.fetchCntActiveInit()),\r\n        onFetchNotifyActive: () => dispatch(actions.fetchNotifyactiveInit()),\r\n        onFetchPtActive: () => dispatch(actions.fetchPtActiveInit()),\r\n        onFetchQueActive: () => dispatch(actions.fetchQueActiveInit()),\r\n        onFetchReqActive: () => dispatch(actions.fetchReqActiveInit()),\r\n        onFetchCnt: (userID, fetchType, limit, skipCnt, cntTotal) => dispatch(actions.fetchCntInit(userID, fetchType, limit, skipCnt, cntTotal)),\r\n        onFetchCntReset: () => dispatch(actions.fetchCntReset()),\r\n        onChangeFav: (id, liked, favAdd, changedFav, userID, cntGrp) => dispatch(actions.changeFavInit(id, liked, favAdd, changedFav, userID, cntGrp)),\r\n        onChangeShareID: (shareID,  cntType) => dispatch(actions.shareID(shareID,  cntType)),\r\n        onChangeTag: (path) => dispatch(actions.changeTagsPath(path)),\r\n        onFetchVideo: (id, url) => dispatch(actions.fetchVideo(id, url)),\r\n        onChangeCnt: (id, title, det, confirm, modelType) => dispatch(actions.changeCntInit(id, title, det, confirm,  modelType))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Questions));"],"sourceRoot":""}