{"version":3,"sources":["components/Main/MediaItems/MediaItem/MediaItem.js","components/Main/MediaItems/MediaItems.js","containers/SiteMain/MainContent/Form/AddImage/AddImage.js"],"names":["mediaItem","props","mediaCntClass","mediaCloseClass","mediaType","src","link","alt","className","index","removeMediaItemIndex","push","controls","join","onClick","removeMediaItem","onMouseEnter","removeMediaItemEnable","onMouseLeave","removeMediaItemDisable","icon","mediaItems","media","map","MediaItem","key","url","bind","id","AddImage","state","inputValue","image","snapshotErr","linkVerifyHandler","event","target","value","setState","onCheckLink","addMediaHandler","linkValid","getImageURL","then","dataUrl","file","onResetLink","catch","err","reader","FileReader","these","readAsDataURL","addEventListener","result","this","selectMediaHandler","stopPropagation","preventDefault","files","handleFiles","dragEnterMediaHandler","dragOverMediaHandler","dropMediaHandler","dataTransfer","removeMediaItemEnableHandler","removeMediaItemDisableHandler","removeMediaItemHandler","updatedMedia","filter","CurIndex","length","onRemoveMedia","updateObject","i","type","startsWith","window","URL","createObjectURL","submitMediaHandler","onSubmitMedia","closeMediaBoxHandler","onhideMediaBox","mediaPreview","mediaAddedViewer","message","name","placeholder","onChange","spellCheck","pattern","disabled","multiple","onDragEnter","onDragOver","onDrop","accept","Component","connect","form","dispatch","imageLink","actions"],"mappings":"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","file":"static/js/4.4975525a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst mediaItem = props => {\r\n    let mediaCntClass = ['reuse-form__itm--det__view-select--media__wrapper'];\r\n    let mediaCloseClass = ['reuse-form__itm--det__view-select--media__wrapper--close'];\r\n\r\n    let mediaType = (\r\n            <img \r\n                src={props.link} \r\n                alt=\"post\"\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\"/>\r\n    );\r\n\r\n    if (props.index === props.removeMediaItemIndex) {\r\n        mediaCntClass.push('reuse-form__itm--det__view-select--media__wrapper--active');\r\n        mediaCloseClass.push('reuse-form__itm--det__view-select--media__wrapper--close__active');\r\n    }\r\n\r\n    if (props.mediaType === 'video') {\r\n        mediaType = (\r\n            <video \r\n                src={props.link} \r\n                controls\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\">\r\n                <p>our browser doesn't support embedded videos</p>\r\n            </video>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"reuse-form__itm--det__view-select--media\">\r\n            <div className={mediaCntClass.join(' ')}>\r\n                { mediaType }\r\n                <div \r\n                    className={mediaCloseClass.join(' ')}\r\n                    onClick={props.removeMediaItem}\r\n                    onMouseEnter={props.removeMediaItemEnable}\r\n                    onMouseLeave={props.removeMediaItemDisable}>\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'times']} \r\n                        className=\"icon icon__reuse-form--view-select__close\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mediaItem;","import React from 'react';\r\n\r\nimport MediaItem from './MediaItem/MediaItem';\r\n\r\nconst mediaItems = props => {\r\n    const allMedia = props.media.map((link, index) => (\r\n        <MediaItem\r\n            key={index}\r\n            link={link.url}\r\n            index={index}\r\n            mediaType={props.mediaType}\r\n            removeMediaItem={props.removeMediaItem.bind(this, link.id)}\r\n            removeMediaItemEnable={props.removeMediaItemEnable.bind(this, index)}\r\n            removeMediaItemDisable={props.removeMediaItemDisable.bind(this, index)}\r\n            removeMediaItemIndex={props.removeMediaItemIndex}/>\r\n    ));\r\n    return allMedia;\r\n}\r\n\r\nexport default mediaItems;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport { updateObject, getImageURL } from '../../../../../shared/utility';\r\nimport MediaItems from '../../../../../components/Main/MediaItems/MediaItems';\r\n\r\nclass AddImage extends Component {\r\n    state = {\r\n        inputValue: '',\r\n        media: this.props.media.image ? [...this.props.media.image] : [],\r\n        removeMediaItemIndex: null,\r\n        snapshotErr: null\r\n    };\r\n\r\n    linkVerifyHandler = (event) => {\r\n        let inputValue =  event.target.value;\r\n        this.setState({inputValue, snapshotErr: null});\r\n        this.props.onCheckLink(inputValue);\r\n    }\r\n\r\n    addMediaHandler = () => {\r\n        if (this.props.linkValid && this.props.linkValid.media) {\r\n            let media = [...this.state.media];\r\n            getImageURL(this.props.linkValid.media.url).then(dataUrl => {\r\n                media.push({file: dataUrl, url: this.props.linkValid.media.url});\r\n                this.setState({\r\n                    media: media,  inputValue: ''});\r\n                this.props.onResetLink();\r\n            }).catch(err => {\r\n                let reader = new FileReader();\r\n                let these = this;\r\n                reader.readAsDataURL(this.props.linkValid.media.file)\r\n                reader.addEventListener('loadend', function() {\r\n                    media.push({file: reader.result, url: this.props.linkValid.media.url});\r\n                    these.setState({\r\n                        media: media,  inputValue: '',\r\n                        snapshotErr: err});\r\n                    these.props.onResetLink();\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    selectMediaHandler = (event) => {\r\n        this.setState({snapshotErr: null});\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.target.files) {\r\n            const files = event.target.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    dragEnterMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dragOverMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dropMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.dataTransfer) {\r\n            const dt = event.dataTransfer;\r\n            const files = dt.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    removeMediaItemEnableHandler = (index) => {\r\n        this.setState({removeMediaItemIndex: index})\r\n    }\r\n\r\n    removeMediaItemDisableHandler = () => {\r\n        this.setState({removeMediaItemIndex: null})\r\n    }\r\n    \r\n    removeMediaItemHandler = (index) => {\r\n        let media = [...this.state.media];\r\n        let updatedMedia = media.filter((link, CurIndex)=>  CurIndex !== index);\r\n        this.setState({media:  updatedMedia});\r\n        if (this.props.media.image && this.props.media.image.length > 0) {\r\n            this.props.onRemoveMedia(updateObject(this.props.media, {image: updatedMedia}))\r\n        }\r\n    }\r\n\r\n    handleFiles = (files) => {\r\n        let media = [...this.state.media];\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n            if(file.type.startsWith('image/')) {\r\n                let url = window.URL.createObjectURL(file)\r\n                getImageURL(url).then(dataUrl => {\r\n                    media.push({file: dataUrl, url});\r\n                    this.setState({media});\r\n                }).catch(err => {\r\n                    let reader = new FileReader();\r\n                    let these = this;\r\n                    reader.readAsDataURL(file)\r\n                    reader.addEventListener('loadend', function() {\r\n                        media.push({file: reader.result, url});\r\n                        these.setState({media, snapshotErr: err});\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    submitMediaHandler = () => {\r\n        let media = {...this.props.media};\r\n        this.props.onSubmitMedia(updateObject(media, {image: [...this.state.media]}));\r\n    }\r\n\r\n    closeMediaBoxHandler = () => {\r\n        this.props.onhideMediaBox();\r\n    }\r\n\r\n\r\n    render() {\r\n        let mediaPreview = null;\r\n        let mediaAddedViewer = null;\r\n\r\n        if (this.props.linkValid) {\r\n            mediaPreview = this.props.linkValid.media ? (\r\n                <img src={this.props.linkValid.media.url}  alt=\"post\" />\r\n            ): <div className=\"reuse-form__err\">{ this.props.linkValid.err.message}</div>\r\n        }\r\n\r\n        if (this.state.media.length > 0) {\r\n            mediaAddedViewer = (\r\n                <div className=\"reuse-form__itm--det__view-select\">\r\n                    <MediaItems \r\n                       media={this.state.media}\r\n                       mediaType=\"image\"\r\n                       removeMediaItemEnable={this.removeMediaItemEnableHandler}\r\n                       removeMediaItemDisable={this.removeMediaItemDisableHandler}\r\n                       removeMediaItemIndex={this.state.removeMediaItemIndex}\r\n                       removeMediaItem={this.removeMediaItemHandler}/>\r\n                </div>\r\n            ); \r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-form__itm\">\r\n                <h4 className=\"reuse-form__itm--title\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'images']}\r\n                        className=\"icon icon__reuse-form--itm--title\" />\r\n                  Add Image\r\n                </h4>\r\n                <div className=\"reuse-form__itm--det\">\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <label className=\"reuse-form__cnt--title\">Image Link</label>\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <input \r\n                                type=\"url\" \r\n                                name=\"\" \r\n                                className=\"reuse-form__cnt--det__input reuse-form__cnt--det__input--lg\" \r\n                                placeholder=\"paste link\"\r\n                                onChange={this.linkVerifyHandler}\r\n                                value={this.state.inputValue}\r\n                                spellCheck={false}\r\n                                pattern=\"https://.*\"/>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={this.addMediaHandler}\r\n                                    disabled={this.props.linkValid ? this.props.linkValid.err !== null : true}\r\n                                    className=\"reuse-form__cnt--det__btn\">\r\n                                    <FontAwesomeIcon \r\n                                    icon={['fas', 'plus']} />\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__view\">\r\n                        { mediaPreview }\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__alt\">\r\n                        OR\r\n                    </div>\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <div className=\"reuse-form__cnt--det__fil\">\r\n                                Drag and Drop Images\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"\"\r\n                                    multiple\r\n                                    className=\"reuse-form__cnt--det__fil--input\"\r\n                                    onChange={this.selectMediaHandler}\r\n                                    onDragEnter={this.dragEnterMediaHandler}\r\n                                    onDragOver={this.dragOverMediaHandler}\r\n                                    onDrop={this.dropMediaHandler}\r\n                                    accept=\"image/*\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.snapshotErr ? \r\n                        <div className=\"reuse-form__err\">Some features are not available in your browser, { this.state.snapshotErr }</div> : null}\r\n                    { mediaAddedViewer }\r\n                </div>\r\n                <div className=\"reuse-form__itm--footer reuse-form__btn\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--close\"\r\n                        onClick={this.closeMediaBoxHandler}>Exit</button>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--add\"\r\n                        onClick={this.submitMediaHandler}\r\n                        disabled={!this.state.media.length > 0}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        linkValid: state.form.linkValid,\r\n        media: state.form.media\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCheckLink: (imageLink) => dispatch(actions.checkLinkInit(imageLink, 'image')),\r\n        onResetLink: () => dispatch(actions.resetLink()),\r\n        onRemoveMedia: (media) => dispatch(actions.removeMedia(media)),\r\n        onSubmitMedia: (media) => dispatch(actions.submitMedia(media)),\r\n        onhideMediaBox: () => dispatch(actions.hideMediaBox())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddImage)"],"sourceRoot":""}