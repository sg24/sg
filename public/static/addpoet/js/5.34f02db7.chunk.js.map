{"version":3,"sources":["components/Main/Users/User/User.js","components/Main/Users/Users.js","containers/SiteMain/MainContent/Form/AddUsers/Input/FilterUser/FilterUser.js","containers/SiteMain/MainContent/Form/AddUsers/Input/Input.js","containers/SiteMain/MainContent/Form/AddUsers/AddUsers.js"],"names":["user","props","userClass","userSelectClass","userImg","src","userDet","image","alt","userStatus","className","status","username","name","size","round","selectedUser","length","id","push","onClick","selected","join","href","student","icon","Users","content","map","index","User","key","bind","FilterUser","state","value","filterContentHandler","event","users","curTab","offlineUser","onlineUser","onFilterUser","target","setState","this","onInputDefault","defaultValue","type","autoFocus","placeholder","onChange","Component","connect","form","dispatch","filterContent","actions","Input","input","AddUsers","showNewTab","showInput","userSelected","media","showUserSelect","changeTabHandler","newtab","onResetTab","showSearchInputHandler","prevState","onFetchUsers","selectedUserHandler","userSelectedArray","filter","userID","updateUserSelectArray","onAddUserSelect","updateObject","submitMediaHandler","onSubmitMedia","closeMediaBoxHandler","onhideMediaBox","userSelect","onShowUserSelect","searchInput","start","Loader","filteredUser","disabled","startUser","tab"],"mappings":"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","file":"static/js/5.34f02db7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Avatar from 'react-avatar';\r\n\r\nconst user = props => {\r\n    let userClass = ['reuse-user__det'];\r\n    let userSelectClass = ['reuse-user__det--select'];\r\n    let userImg = <img src={props.userDet.image} alt=\"\"/>;\r\n\r\n    let userStatus = (\r\n        <div className=\"reuse-user__det--img__status reuse-user__det--img__status--on\">\r\n        </div>\r\n    );\r\n\r\n    if (!props.userDet.status) {\r\n        userStatus = (\r\n            <div className=\"reuse-user__det--img__status reuse-user__det--img__status--off\">\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n    if (props.userDet.username && !props.userDet.image) {\r\n        userImg = <Avatar  name={props.userDet.username} size='60' round />;\r\n    }\r\n\r\n    if (props.selectedUser.length > 0) {\r\n        for (let userID of props.selectedUser) {\r\n            if (userID === props.id) {\r\n                userClass.push('reuse-user__det--clk');\r\n                userSelectClass.push('reuse-user__det--select__clk > svg')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div  \r\n                className=\"reuse-user\"\r\n                onClick={props.selected}>\r\n                <div className={userClass.join(' ')}>\r\n                    <div className=\"reuse-user__det--img\">\r\n                        {userImg}\r\n                        { userStatus }\r\n                    </div>\r\n                    <ul className=\"reuse-user__det--user\">\r\n                        <li className=\"reuse-user__det--user__info\">  \r\n                            <a href={'/users/profile/' + props.userDet.id}>{ props.userDet.username }</a>\r\n                        </li>\r\n                        <li><div>{ props.userDet.student }</div> Student</li> \r\n                    </ul>\r\n                    <div className={userSelectClass.join(' ')}>\r\n                        <FontAwesomeIcon\r\n                            icon={['fas', 'check-circle']} />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default user;","import React from 'react';\r\n\r\nimport User from './User/User';\r\n\r\nconst Users = props => {\r\n    const allUsers = props.content.map((user, index) => (\r\n        <User \r\n            key={index}\r\n            userDet={user}\r\n            selected={props.selected.bind(this, user)}\r\n            selectedUser={props.selectedUser}\r\n            id={user.id}/> \r\n    ));\r\n\r\n    return allUsers;\r\n};\r\n\r\nexport default Users;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../../../../../store/actions/index';\r\n\r\nclass FilterUser extends Component  {\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    filterContentHandler = (event) => {\r\n        let users = this.props.curTab === 'userSelect' ? \r\n        [...this.props.offlineUser, ...this.props.onlineUser] : this.props.users;\r\n        this.props.onFilterUser(users, event.target.value);\r\n        this.setState({value: event.target.value})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFilterUser(this.props.users, '');\r\n        this.props.onInputDefault();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.defaultValue) {\r\n            this.setState({value: ''});\r\n            this.props.onInputDefault();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n                type=\"search\" \r\n                className=\"reuse-form__itm--tab__srch--input\"\r\n                autoFocus \r\n                placeholder=\"Enter username ...\" \r\n                onChange={this.filterContentHandler}\r\n                value={this.state.value}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.form.users,\r\n        defaultValue: state.form.defaultValue,\r\n        offlineUser: state.form.offlineUser,\r\n        onlineUser: state.form.onlineUser,\r\n        curTab: state.form.curTab\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFilterUser: (users, filterContent) => dispatch(actions.filterUserInit(users, filterContent)),\r\n        onInputDefault: () => dispatch(actions.inputDefaultValue())\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUser); ","import React, { Component } from 'react';\r\nimport FilterUser from './FilterUser/FilterUser'; \r\n\r\nclass Input extends Component {\r\n    render() {\r\n        let input = <FilterUser />;\r\n\r\n        return (\r\n            <div className=\"reuse-form__itm--tab__srch--input-wrapper\">\r\n                { input }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { updateObject } from '../../../../../shared/utility';\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport Loader from '../../../../../components/UI/Loader/Loader';\r\nimport Users from '../../../../../components/Main/Users/Users';\r\nimport Input from './Input/Input';\r\n\r\nclass AddUsers extends Component {\r\n    state = {\r\n        curTab: 'online',\r\n        showNewTab: false,\r\n        users: null,\r\n        showInput: false,\r\n        userSelected: this.props.media.user ? [...this.props.media.user] : [],\r\n        showUserSelect: false \r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchUsers(this.state.curTab);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.showNewTab && this.state.curTab !== 'userselect') {\r\n            this.props.onFetchUsers(this.state.curTab);\r\n            this.setState({showNewTab: false, users: this.props.users});\r\n        }\r\n\r\n        if (this.state.showUserSelect && this.state.curTab === 'userselect') {\r\n            let userSelect = [...this.state.userSelected];\r\n            let users = [...this.props.onlineUser,...this.props.offlineUser]\r\n            this.props.onShowUserSelect(users, userSelect);\r\n            this.setState({users: this.props.users, showUserSelect: false});\r\n        }\r\n    }\r\n\r\n    changeTabHandler = (newtab) => { \r\n        let curTab = null;\r\n        curTab =  newtab === 'online' ? newtab : curTab;\r\n        curTab =  newtab === 'offline' ? newtab : curTab;\r\n        curTab =  newtab === 'userselect' ? newtab : curTab;\r\n        this.props.onResetTab();\r\n        this.setState({curTab, showNewTab: true, showUserSelect: curTab === 'userselect'})\r\n    }\r\n\r\n    showSearchInputHandler = () => {\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                showInput: !prevState.showInput\r\n            };\r\n        });\r\n        if (this.state.showInput) {\r\n            this.props.onFetchUsers(this.state.curTab);\r\n        }\r\n    }\r\n\r\n    selectedUserHandler = (user) => {\r\n        let userSelectedArray = [...this.state.userSelected];\r\n        let userSelected = userSelectedArray.filter(userID => userID === user.id );\r\n        if (userSelected.length > 0) {\r\n            let updateUserSelectArray = [...userSelectedArray.filter(userID => userID !== user.id )];\r\n            this.setState({\r\n                userSelected: updateUserSelectArray,\r\n                showUserSelect: this.state.curTab === 'userselect'});\r\n            if (this.props.media.user && this.props.media.user.length > 0) {\r\n                this.props.onAddUserSelect(updateObject(this.props.media, {user: updateUserSelectArray}));\r\n            }\r\n            return\r\n        }\r\n\r\n        userSelectedArray.push(user.id)\r\n        this.setState({userSelected: userSelectedArray, showUserSelect: this.state.curTab === 'userselect' });\r\n        if (this.props.media.user && this.props.media.user.length > 0) {\r\n            this.props.onAddUserSelect(updateObject(this.props.media, {user: userSelectedArray}));\r\n        }\r\n    }\r\n\r\n    submitMediaHandler = () => {\r\n        let userSelected = [...this.state.userSelected];\r\n        let media = {...this.props.media};\r\n        this.props.onSubmitMedia(updateObject(media, {user: userSelected}));\r\n        \r\n    }\r\n\r\n    closeMediaBoxHandler = () => {\r\n        this.props.onhideMediaBox();\r\n    }\r\n\r\n    render() {\r\n        let users = null;\r\n        let userSelectClass = ['reuse-form__itm--tab__cnt--selec'];\r\n        let searchInput = null;\r\n\r\n        if (this.props.start) {\r\n            users = <Loader />\r\n        }\r\n\r\n        if (this.props.users) {\r\n            users = <Users \r\n                content={this.props.users}\r\n                selected={this.selectedUserHandler}\r\n                selectedUser={this.state.userSelected}/>\r\n        }\r\n\r\n        if (this.props.filteredUser) {\r\n            users = <Users \r\n            content={this.props.filteredUser}\r\n            selected={this.selectedUserHandler}\r\n            selectedUser={this.state.userSelected}/>\r\n        }\r\n        \r\n\r\n        if (this.state.curTab === 'userselect') {\r\n            userSelectClass.push('reuse-form__itm--tab__cnt--selec__active');\r\n        }\r\n\r\n        if (this.state.showInput) {\r\n            searchInput = (\r\n                <div className=\"reuse-form__itm--tab__srch--wrapper\">\r\n                    <div \r\n                        className=\"reuse-form__itm--tab__srch--close\"\r\n                        onClick={this.showSearchInputHandler}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'times']}/>\r\n                    </div>\r\n                    <Input /> \r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-form__itm reuse-form__itm--user\">\r\n                <div className=\"reuse-form__itm--tab\">\r\n                    <ul className=\"reuse-form__itm--tab__cnt\">\r\n                        <li \r\n                            className={this.state.curTab === 'online' ? \"active-content-tab\" : null}\r\n                            onClick={this.changeTabHandler.bind(this, 'online')}>\r\n                            {this.state.curTab === 'online' ? <div className=\"active-content-tab__active\"></div> : null }\r\n                            Online\r\n                        </li>\r\n                        <li\r\n                            className={this.state.curTab === 'offline' ? \"active-content-tab\" : null}\r\n                            onClick={this.changeTabHandler.bind(this, 'offline')}>\r\n                            {this.state.curTab === 'offline' ? <div className=\"active-content-tab__active\"></div> : null }\r\n                            Offline\r\n                        </li>\r\n                        <li\r\n                            className={this.state.curTab === 'userselect' ? \"active-content-tab\" : null}\r\n                            onClick={this.changeTabHandler.bind(this, 'userselect')}>\r\n                                Users Selected \r\n                            {this.state.curTab === 'userselect' ? <div className=\"active-content-tab__active\"></div> : null }\r\n                            <div className={userSelectClass.join(' ')}>{this.state.userSelected.length}</div>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"reuse-form__itm--tab__srch\">\r\n                        <div \r\n                            className=\"reuse-form__itm--tab__srch--icn\"\r\n                            onClick={this.showSearchInputHandler}>\r\n                            <FontAwesomeIcon \r\n                                icon={['fas', 'search']}\r\n                                className=\"icon icon__reuse-form--srch\" />\r\n                        </div>\r\n                        { searchInput }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"reuse-form__itm--det\">\r\n                   { users }\r\n                </div>\r\n                <div className=\"reuse-form__itm--footer reuse-form__btn\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--close\"\r\n                        onClick={this.closeMediaBoxHandler}>Exit</button>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--add\"\r\n                        onClick={this.submitMediaHandler}\r\n                        disabled={this.state.userSelected.length < 1}>Share</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>  {\r\n    return {\r\n        users: state.form.users,\r\n        filteredUser: state.form.filteredUser,\r\n        media: state.form.media,\r\n        curTab: state.form.curTab,\r\n        start: state.form.startUser,\r\n        offlineUser: state.form.offlineUser,\r\n        onlineUser: state.form.onlineUser\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchUsers: (tab) => dispatch(actions.fetchUsersInit(tab)),\r\n        onResetTab: () => dispatch(actions.resetTab()),\r\n        onAddUserSelect: (users) => dispatch(actions.userSelect(users)),\r\n        onShowUserSelect: (users, userID) => dispatch(actions.showUserSelectInit(users, userID)),\r\n        onSubmitMedia: (media) => dispatch(actions.submitMedia(media)),\r\n        onhideMediaBox: () => dispatch(actions.hideMediaBox())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUsers);"],"sourceRoot":""}