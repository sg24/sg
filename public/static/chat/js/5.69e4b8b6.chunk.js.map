{"version":3,"sources":["components/Main/PrivateUsers/PrivateUser/PrivateUser.js","components/Main/PrivateUsers/PrivateUsers.js","containers/SiteMain/MainContent/Main/Users/Users.js"],"names":["user","props","formatter","buildFormatter","engStrings","userImg","react_default","a","createElement","src","userDet","image","alt","msgCreated","msg","href","concat","id","active","userStatus","className","status","username","react_avatar_es","name","size","round","created","lib_default","date","live","notifications","privateUsers","content","map","index","PrivateUser_PrivateUser","key","_id","Users","state","showInput","showNewTab","curTab","_this","match","params","categ","inputValue","pvtUser","showSearchInputHandler","setState","prevState","onResetInputFilter","filterContentHandler","event","target","value","onFilterPvtUser","changeTabHandler","newtab","closeModelCntBackdropHandler","onCloseModelBackdrop","closeModelHandler","history","push","this","onFetchPvtuser","filterPvtuser","JSON","stringify","searchInput","searchIcnClass","pvtUserStart","Loader","PrivateUsers","pvtUserErr","Backdrop","component","Modal","close","closeModelBackdropHandler","err","onClick","index_es","icon","type","placeholder","onChange","bind","join","Component","withRouter","connect","cnt","dispatch","actions","filterContent"],"mappings":"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","file":"static/js/5.69e4b8b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from 'react-avatar';\r\nimport TimeAgo from 'react-timeago';\r\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter'\r\n\r\nimport './PrivateUser.css';\r\nimport { engStrings } from '../../../../shared/utility';\r\n\r\nconst user = props => {\r\n    const formatter = buildFormatter(engStrings);\r\n    let userImg = <img src={props.userDet.image} alt=\"\"/>;\r\n    let msgCreated = null;\r\n    let msg = (\r\n        <li><a href={`/chat/user/${props.userDet.id}`}>{ props.userDet.msg } </a></li>\r\n    )\r\n    let active = null;\r\n\r\n    let userStatus = (\r\n        <div className=\"reuse-pvt-chat__img--status reuse-pvt-chat__img--status__off\">\r\n        </div>\r\n    );\r\n\r\n    if (props.userDet.status) {\r\n        userStatus = (\r\n            <div className=\"reuse-pvt-chat__img--status reuse-pvt-chat__img--status__on\"></div>\r\n        );\r\n    }\r\n\r\n    \r\n    if (props.userDet.username && !props.userDet.image) {\r\n        userImg = <Avatar  name={props.userDet.username} size='50' round />;\r\n    }\r\n\r\n    if (!props.userDet.msg) {\r\n        msg = (\r\n            <li><a href={`/chat/user/${props.userDet.id}`}><span>chat</span></a></li>\r\n        )\r\n    }\r\n\r\n    if (props.userDet.created) {\r\n        msgCreated = (\r\n            <span>\r\n                @ <TimeAgo date={props.userDet.created} live={false} formatter={formatter} />\r\n            </span>\r\n        )\r\n    }\r\n\r\n    if(props.userDet.notifications && props.userDet.notifications > 0) {\r\n        active = (\r\n        <div className=\"active__main active__main--chat-cnt\"><div>{ props.userDet.notifications }</div></div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"reuse-pvt-chat\">\r\n            { active }\r\n            <div className=\"reuse-pvt-chat__img\">\r\n                { userImg }\r\n                { userStatus }\r\n            </div>\r\n            <ul className=\"reuse-pvt-chat__det\">\r\n                <li><a href={`/user/profile/${props.userDet.id}`}>{ props.userDet.username }{ msgCreated }</a></li>\r\n                { msg }\r\n            </ul>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default user;","import React from 'react';\r\n\r\nimport PrivateUser from './PrivateUser/PrivateUser';\r\n\r\nconst privateUsers = props => {\r\n    const allUsers = props.content.map((user, index) => (\r\n        <PrivateUser\r\n            key={index}\r\n            userDet={user}\r\n            id={user._id}/> \r\n    ));\r\n\r\n    return allUsers;\r\n};\r\n\r\nexport default privateUsers;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './Users.css'\r\nimport Loader from '../../../../../components/UI/Loader/Loader';\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport PrivateUsers from '../../../../../components/Main/PrivateUsers/PrivateUsers'\r\nimport Backdrop from '../../../../../components/UI/Backdrop/Backdrop';\r\nimport Modal from '../../../../../components/UI/Modal/Modal';\r\n\r\nclass Users extends Component {\r\n    state = {\r\n        showInput: false,\r\n        showNewTab: false,\r\n        curTab: 'friend',\r\n        id: this.props.match.params.id,\r\n        categ: this.props.match.params.categ,\r\n        inputValue: '',\r\n        pvtUser: null\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchPvtuser(this.state.categ, this.state.id, this.state.curTab)\r\n    }\r\n    \r\n    componentDidUpdate() {  \r\n        if (this.state.showNewTab) {\r\n            this.props.onFetchPvtuser(this.state.categ, this.state.id, this.state.curTab);\r\n            this.setState({showNewTab: false})\r\n        }\r\n        \r\n        if (this.props.filterPvtuser && (JSON.stringify(this.state.pvtUser) !== JSON.stringify(this.props.filterPvtuser))) {\r\n            this.setState({pvtUser: this.props.filterPvtuser})\r\n        }\r\n\r\n        if (!this.props.filterPvtuser && (JSON.stringify(this.state.pvtUser) !== JSON.stringify(this.props.pvtUser))) {\r\n            this.setState({pvtUser: this.props.pvtUser})\r\n        }\r\n\r\n    }\r\n\r\n    showSearchInputHandler = () => {\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                showInput: !prevState.showInput\r\n            };\r\n        });\r\n        this.props.onResetInputFilter()\r\n    }\r\n\r\n    filterContentHandler = (event) => {\r\n        this.setState({inputValue: event.target.value})\r\n        this.props.onFilterPvtUser(event.target.value);\r\n    }\r\n\r\n\r\n    changeTabHandler = (newtab) => { \r\n        let curTab = null;\r\n        curTab =  newtab === 'teacher' ? newtab : curTab;\r\n        curTab =  newtab === 'friend' ? newtab : curTab;\r\n        this.setState({curTab, showNewTab: true})\r\n    }\r\n\r\n    closeModelCntBackdropHandler = () =>  {\r\n        this.props.onCloseModelBackdrop();\r\n    }\r\n\r\n    closeModelHandler = () => {\r\n        this.props.history.push(`/chat/${this.state.categ}/${this.state.id}`)\r\n    }\r\n\r\n    render() {\r\n        let userDet = null;\r\n        let searchInput = null;\r\n        let searchIcnClass =  ['site-main__chat--srch-user__cnt--tab__srch--icn'];\r\n\r\n        if (this.props.pvtUserStart) {\r\n            userDet = <Loader />\r\n        }\r\n\r\n        if (this.state.pvtUser) {\r\n            userDet = (\r\n                <PrivateUsers \r\n                    content={this.state.pvtUser}/>\r\n            )\r\n        }\r\n\r\n        if (this.props.pvtUserErr) {\r\n            userDet = (\r\n                <Backdrop \r\n                    component={ Modal }\r\n                    close={this.closeModelBackdropHandler}\r\n                    err={ this.props.pvtUserErr || this.state.err } />\r\n            )\r\n        }\r\n\r\n        if (this.state.showInput) {\r\n            searchIcnClass.push('site-main__chat--srch-user__cnt--tab__srch--icn__hidden')\r\n            searchInput = (\r\n                <div className=\"site-main__chat--srch-user__cnt--tab__srch--wrapper\">\r\n                    <div \r\n                        className=\"site-main__chat--srch-user__cnt--tab__srch--close\"\r\n                        onClick={this.showSearchInputHandler}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'times']}/>\r\n                    </div>\r\n                    <div className=\"site-main__chat--srch-user__cnt--tab__srch--input-wrapper\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"site-main__chat--srch-user__cnt--tab__srch--input \" \r\n                        placeholder=\"Enter friend name...\"\r\n                        onChange={this.filterContentHandler}\r\n                        value={this.state.inputValue} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"site-main__chat--srch-user\">\r\n                <div className=\"site-main__chat--srch-user__wrapper\">\r\n                    <div className=\"site-main__chat--srch-user__close\">\r\n                        <h4>Friends</h4>\r\n                        <div \r\n                            className=\"site-main__chat--srch-user__close--wrapper\"\r\n                            onClick={this.closeModelHandler}>\r\n                            <FontAwesomeIcon icon={['fas', 'times']} className=\"icon icon__site-main--chat__close\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"site-main__chat--srch-user__cnt\">\r\n                        <div className=\"site-main__chat--srch-user__cnt--tab\">\r\n                            <ul className=\"site-main__chat--srch-user__cnt--tab__opt\">\r\n                                {/* <li \r\n                                    className={this.state.curTab === 'teacher' ? \"active-user-content-tab\" : null}\r\n                                    onClick={this.changeTabHandler.bind(this, 'teacher')}>\r\n                                    {this.state.curTab === 'teacher' ? <div className=\"active-user-content-tab__active\"></div> : null }\r\n                                    Teacher\r\n                                </li> */}\r\n                                <li\r\n                                    className={this.state.curTab === 'friend' ? \"active-user-content-tab\" : null}\r\n                                    onClick={this.changeTabHandler.bind(this, 'friend')}>\r\n                                    {this.state.curTab === 'friend' ? <div className=\"active-user-content-tab__active\"></div> : null }\r\n                                    Friend \r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"site-main__chat--srch-user__cnt--tab__srch\">\r\n                                <div \r\n                                    className={searchIcnClass.join(' ')}\r\n                                    onClick={this.showSearchInputHandler}>\r\n                                    <FontAwesomeIcon \r\n                                        icon={['fas', 'search']}\r\n                                        className=\"icon icon__reuse-form--srch\" />\r\n                                </div>\r\n                                { searchInput }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"site-main__chat--srch-user__cnt--user\">\r\n                            { userDet }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pvtUser: state.cnt.pvtUser,\r\n        filterPvtuser: state.cnt.filterPvtuser,\r\n        pvtUserStart: state.cnt.pvtUserStart,\r\n        pvtUserErr: state.cnt.pvtUserErr,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchPvtuser: (categ, id, curTab) => dispatch(actions.fetchPvtuserInit(categ, id, curTab)),\r\n        onFilterPvtUser: (filterContent) => dispatch(\r\n            actions.filterPvtuser(filterContent)),\r\n        onResetInputFilter: () => dispatch(actions.resetPvtuserFilter()),\r\n        closeModelCntBackdropHandler: () => dispatch(actions.fetchPvtuserReset())\r\n    };\r\n};\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Users));"],"sourceRoot":""}