{"version":3,"sources":["containers/SiteMain/Share/Input/FilterUser/FilterUser.js","containers/SiteMain/Share/Input/FilterUserSelect/FilterUserSelect.js","containers/SiteMain/Share/Input/Input.js","components/ShareContent/Users/User/User.js","components/ShareContent/Users/Users.js","containers/SiteMain/Share/SelectUsers/Users/Users.js","containers/SiteMain/Share/SelectUsers/UserSelect/UserSelect.js","containers/SiteMain/Share/SelectUsers/SelectUsers.js","components/ShareContent/ShareUsers/ShareUsers.js","components/ShareContent/SocialMed/SocialMed.js","components/ShareContent/SwitchOpt/SwitchOpt.js","containers/SiteMain/Share/ShareOpt/ShareOpt.js","containers/SiteMain/Share/Share.js"],"names":["FilterUser","state","inputValue","filterContentHandler","event","_this","setState","target","value","props","onFilterUser","users","react_default","a","createElement","className","placeholder","autoFocus","onChange","this","Component","connect","share","dispatch","filterContent","actions","FilterUserSelect","onFilterUserSelect","userSelect","Input","input","Input_FilterUser_FilterUser","viewAllUsers","Input_FilterUserSelect_FilterUserSelect","user","userClass","userSelectClass","userImg","src","userDet","image","alt","userStatus","status","username","react_avatar_es","name","size","round","selectedUser","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","id","push","err","return","onClick","selected","join","href","student","index_es","icon","Users","content","map","index","User_User","key","bind","showSelectedUserHandler","userArray","filter","updateUser","_objectSpread","updateUsers","Object","toConsumableArray","onSelectUser","newUser","concat","prevState","onFetchUsers","Loader","ShareContent_Users_Users","filterUser","UserSelect","removeSelectedUserHandler","userObj","UserSelect_objectSpread","updateUserSelect","onRemoveUser","filterUserSelect","SelectUsers","SelectUsers_Users_Users","SelectUsers_UserSelect_UserSelect","shareUsers","viewUsers","Aux","shareUser","socialMed","socialIcnClass","switchOpt","shareFacebook","shareTwitter","ShareOpt","showSocialMed","showShareUser","switchShareOptHandler","viewUsersHandler","onViewUsers","shareUserHandler","onShareUser","shareID","facebookShareHandler","path","document","location","pathname","split","facebookWindow","window","open","origin","focus","twitterShareHandler","twitterWindow","_this2","show","SocialMed_SocialMed","SwitchOpt_SwitchOpt","ShareUsers_ShareUsers","Share","closeShareHandler","history","goBack","onDefaultShareProps","shareCnt","Share_Input_Input","Share_SelectUsers_SelectUsers","Share_ShareOpt_ShareOpt","start","shareErr","Modal","withRouter","auth"],"mappings":"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","file":"static/js/3.6626d649.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nclass FilterUser extends Component  {\r\n    state = {\r\n        inputValue: ''\r\n    };\r\n\r\n    filterContentHandler = (event) => {\r\n        this.setState({inputValue: event.target.value})\r\n        this.props.onFilterUser(this.props.users, event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n            className=\"reuse-share__search--cnt\" \r\n            placeholder=\"search user....\" \r\n            autoFocus\r\n            onChange={this.filterContentHandler} \r\n            value={this.state.inputValue}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSateToProps = state => {\r\n    return {\r\n        users: state.share.users\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFilterUser: (users,filterContent) => dispatch(\r\n                actions.filterUserInit(users, filterContent))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapSateToProps, mapDispatchToProps)(FilterUser); ","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nclass FilterUserSelect extends Component  {\r\n    state = {\r\n        inputValue: ''\r\n    };\r\n\r\n    filterContentHandler = (event) => {\r\n        this.props.onFilterUserSelect(\r\n                event.target.value,\r\n                this.props.userSelect);\r\n        this.setState({inputValue: event.target.value})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFilterUserSelect('', this.props.userSelect);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n                className=\"reuse-share__search--cnt\" \r\n                placeholder=\"search user selected....\" \r\n                autoFocus\r\n                onChange={this.filterContentHandler} \r\n                value={this.state.inputValue}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userSelect: state.share.userSelect\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFilterUserSelect: (filterContent, userSelect) => dispatch(\r\n                actions.filterUserSelectInit(filterContent, userSelect))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterUserSelect);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Input.css';\r\nimport FilterUser from './FilterUser/FilterUser'; \r\nimport FilterUserSelect from './FilterUserSelect/FilterUserSelect'; \r\n\r\nclass Input extends Component {\r\n    render() {\r\n        let input = <FilterUser />;\r\n\r\n        if (!this.props.viewAllUsers) {\r\n            input = <FilterUserSelect />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-share__search\">\r\n                { input }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        viewAllUsers: state.share.viewAllUsers\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, null)(Input);","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Avatar from 'react-avatar';\r\n\r\nimport './User.css';\r\nconst user = props => {\r\n    let userClass = ['reuse-user__det'];\r\n    let userSelectClass = ['reuse-user__det--select'];\r\n    let userImg = <img src={props.userDet.image} alt=\"\"/>;\r\n\r\n    let userStatus = (\r\n        <div className=\"reuse-user__det--img__status reuse-user__det--img__status--on\">\r\n        </div>\r\n    );\r\n\r\n    if (!props.userDet.status) {\r\n        userStatus = (\r\n            <div className=\"reuse-user__det--img__status reuse-user__det--img__status--off\">\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n    if (props.userDet.username && !props.userDet.image) {\r\n        userImg = <Avatar  name={props.userDet.username} size='60' round />;\r\n    }\r\n\r\n    if (props.selectedUser.length > 0) {\r\n        for (let user of props.selectedUser) {\r\n            if (user.id === props.id) {\r\n                userClass.push('reuse-user__det--clk');\r\n                userSelectClass.push('reuse-user__det--select__clk > svg')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div  \r\n                className=\"reuse-user\"\r\n                onClick={props.selected}>\r\n                <div className={userClass.join(' ')}>\r\n                    <div className=\"reuse-user__det--img\">\r\n                        {userImg}\r\n                        { userStatus }\r\n                    </div>\r\n                    <ul className=\"reuse-user__det--user\">\r\n                        <li className=\"reuse-user__det--user__info\">  \r\n                            <a href={'/user/profile/' + props.userDet.id}>{ props.userDet.username }</a>\r\n                        </li>\r\n                        <li><div>{ props.userDet.student }</div> Student</li> \r\n                    </ul>\r\n                    <div className={userSelectClass.join(' ')}>\r\n                        <FontAwesomeIcon\r\n                            icon={['fas', 'check-circle']} />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default user;","import React from 'react';\r\n\r\nimport User from './User/User';\r\n\r\nconst Users = props => {\r\n    const allUsers = props.content.map((user, index) => (\r\n        <User \r\n            key={index}\r\n            userDet={user}\r\n            selected={props.selected.bind(this, user)}\r\n            selectedUser={props.selectedUser}\r\n            id={user.id}/> \r\n    ));\r\n\r\n    return allUsers;\r\n};\r\n\r\nexport default Users;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Users.css';\r\nimport User from '../../../../../components/ShareContent/Users/Users';\r\nimport Loader from '../../../../../components/UI/Loader/Loader';\r\nimport * as actions from '../../../../../store/actions/index';\r\n \r\nclass Users extends Component {\r\n    state = {\r\n        users: this.props.userSelect ? this.props.userSelect : []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchUsers();\r\n    }\r\n\r\n    showSelectedUserHandler = (user) => {\r\n        let userArray = this.state.users.filter(userDet => userDet.id === user.id)\r\n        \r\n        if (userArray.length > 0) {\r\n            const updateUser = {...userArray[0]};\r\n            const users = [...this.state.users];\r\n            let updateUsers = users.filter(user => user.id !== updateUser.id)\r\n            this.setState({\r\n                users: updateUsers\r\n            });\r\n            this.props.onSelectUser(updateUsers)\r\n            return\r\n        }\r\n\r\n        let newUser = this.state.users.concat(user);\r\n        this.props.onSelectUser(newUser)\r\n        this.setState(prevState => {\r\n            return {\r\n                users: newUser\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let users = <Loader />;\r\n\r\n        if (this.props.users) {\r\n            users = (\r\n                <div className=\"reuse-share__all-users\">\r\n                    <User \r\n                        content={this.props.filterUser ? this.props.filterUser : this.props.users}\r\n                        selected={this.showSelectedUserHandler}\r\n                        selectedUser={this.state.users}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return users\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.share.users,\r\n        userSelect: state.share.userSelect,\r\n        filterUser: state.share.filterUser,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchUsers: () => dispatch(actions.fetchUsersInit()),\r\n        onSelectUser: (users) => dispatch(actions.userSelect(users))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './UserSelect.css';\r\nimport User from '../../../../../components/ShareContent/Users/Users';\r\nimport Loader from '../../../../../components/UI/Loader/Loader';\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nclass UserSelect extends Component {\r\n    state = {\r\n        users: null\r\n    };\r\n\r\n    removeSelectedUserHandler = (user) => {\r\n        const userArray = this.state.users.filter(userObj => userObj.id === user.id)\r\n        \r\n        if (userArray.length > 0) {\r\n            const updateUser = {...userArray[0]};\r\n            const users = [...this.state.users];\r\n            const updateUsers = users.filter(user => user.id !== updateUser.id);\r\n            const updateUserSelect = this.props.userSelect.filter(user => user.id !== updateUser.id);\r\n            this.props.onRemoveUser(updateUserSelect);\r\n            this.props.onFilterUserSelect(null, updateUsers);\r\n            this.setState({\r\n                users: updateUsers\r\n            });\r\n            return\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            users: this.props.userSelect \r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.filterUserSelect && this.state.users !== this.props.filterUserSelect) {\r\n            this.setState({\r\n                    users: this.props.filterUserSelect\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let users = <Loader />;\r\n\r\n        if (this.state.users) {\r\n            users = <User \r\n                content={this.state.users}\r\n                selected={this.removeSelectedUserHandler}\r\n                selectedUser={this.state.users}/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-share__user-select\">\r\n                <h4 className=\"reuse-share__user-select--title\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'users']} \r\n                        className=\"icon icon__reuse-share--user\" /> \r\n                    User Selected\r\n                </h4>\r\n                {users}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userSelect: state.share.userSelect,\r\n        filterUserSelect: state.share.filterUserSelect\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRemoveUser: (users) => dispatch(actions.removeUser(users)),\r\n        onFilterUserSelect: (filterContent, userSelect) => dispatch(\r\n            actions.filterUserSelectInit(filterContent, userSelect))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSelect);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Users from './Users/Users';\r\nimport UserSelect from './UserSelect/UserSelect';\r\n\r\nclass SelectUsers extends Component {\r\n    render() {\r\n        let users = <Users />\r\n        \r\n        if (!this.props.viewAllUsers) {\r\n            users = <UserSelect />\r\n        }\r\n        return users\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n    viewAllUsers: state.share.viewAllUsers  \r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SelectUsers);","import React from 'react';\r\n\r\nimport './ShareUsers.css'\r\nimport Aux from '../../../hoc/Auxs/Aux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst shareUsers = props =>  {\r\n\r\n    let viewUsers = (\r\n        <Aux>\r\n            <FontAwesomeIcon \r\n                icon={['fas', 'users']} \r\n                className=\"icon__reuse-share--view\" />\r\n            Users\r\n        </Aux>\r\n    );\r\n \r\n    if (props.viewAllUsers) {\r\n        viewUsers = (\r\n            <Aux>\r\n                <FontAwesomeIcon \r\n                    icon={['far', 'eye']} \r\n                    className=\"icon__reuse-share--view\" />\r\n                View \r\n            </Aux>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"reuse-share__user-counter reuse-share__user-counter--more-opt\">\r\n            <div className=\"reuse-share__user-counter--share\" onClick={props.shareUser}>\r\n                <FontAwesomeIcon \r\n                    icon={['fas', 'location-arrow']} \r\n                    className=\"icon icon__reuse-share--share\" />\r\n                Share \r\n                <div className=\"reuse-share__user-counter--share__select\">\r\n                    {props.userSelect.length}\r\n                </div>\r\n            </div>\r\n            <div className=\"reuse-share__user-counter--view\" onClick={props.viewUsers}>\r\n                {viewUsers}\r\n            </div>\r\n        </div>       \r\n    );\r\n}\r\n\r\n\r\nexport default shareUsers;","import React from 'react';\r\n\r\nimport './SocialMed.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst socialMed = props => {\r\n    let socialIcnClass = ['reuse-share__social-icn'];\r\n\r\n    if (props.switchOpt) {\r\n        socialIcnClass.push('reuse-share__social-icn--more-opt');\r\n    };\r\n\r\n    return (\r\n        <ul className={socialIcnClass.join(' ')}>\r\n            <li onClick={props.shareFacebook}>\r\n                <FontAwesomeIcon \r\n                    icon={['fab', 'facebook-square']} \r\n                    className=\"icon icon__reuse-share--facebook\" />\r\n            </li>\r\n            <li onClick={props.shareTwitter}>\r\n                <FontAwesomeIcon \r\n                    icon={['fab', 'twitter']} \r\n                    className=\"icon icon__reuse-share--googleplus\" />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\nexport default socialMed;","import React from 'react';\r\n\r\nimport './SwitchOpt.css'\r\n\r\nconst switchOpt = props => {\r\n    return (\r\n        <div className=\"reuse-share__switch-opt\" onClick={props.switchOpt}>\r\n            <div className=\"reuse-share__switch-opt--mid\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default switchOpt;\r\n    \r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ShareUsers from '../../../../components/ShareContent/ShareUsers/ShareUsers';\r\nimport SocialMed from '../../../../components/ShareContent/SocialMed/SocialMed';\r\nimport SwitchOpt from '../../../../components/ShareContent/SwitchOpt/SwitchOpt';\r\nimport * as actions from '../../../../store/actions/index';\r\nimport Aux from '../../../../hoc/Auxs/Aux';\r\n\r\nclass ShareOpt extends Component {\r\n    state = {\r\n        showSocialMed: true,\r\n        showShareUser: false,\r\n        userSelect: null\r\n    };\r\n\r\n    componentDidUpdate(props, state) {\r\n        if (this.state.userSelect !== this.props.userSelect) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    showSocialMed: this.props.userSelect.length > 0 ? false : true,\r\n                    showShareUser: this.props.userSelect.length > 0,\r\n                    userSelect: this.props.userSelect\r\n                };\r\n            })\r\n        };\r\n    };\r\n\r\n    switchShareOptHandler = () => {\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                showSocialMed: !prevState.showSocialMed,\r\n                showShareUser: !prevState.showShareUser\r\n            };\r\n        })\r\n    }\r\n\r\n    viewUsersHandler = () => {\r\n        this.props.onViewUsers()\r\n    }\r\n\r\n    shareUserHandler = () => {\r\n        this.props.onShareUser(this.props.userSelect, this.props.shareID)\r\n    };\r\n\r\n    facebookShareHandler = () => {\r\n        let path = document.location.pathname.split('/')[1];\r\n        var facebookWindow = window.open(`https://www.facebook.com/sharer/sharer.php?u=${document.location.origin}/view/${path}/${this.props.shareID}`, 'facebook-popup', 'height=350,width=600');\r\n        if(facebookWindow.focus) { facebookWindow.focus(); }\r\n          return false;\r\n    }\r\n\r\n    twitterShareHandler = () => {\r\n        let path = document.location.pathname.split('/')[1];\r\n        var twitterWindow = window.open(`https://twitter.com/share?url=${document.location.origin}/view/${path}/${this.props.shareID}`, 'twitter-popup', 'height=350,width=600');\r\n          if(twitterWindow.focus) { twitterWindow.focus(); }\r\n            return false;\r\n    }\r\n\r\n    render() {\r\n        let show = null;\r\n        \r\n            if (this.state.showSocialMed) {\r\n                show = <SocialMed \r\n                    shareFacebook={this.facebookShareHandler}\r\n                    shareTwitter={this.twitterShareHandler}/>;\r\n            }\r\n         \r\n            if (this.state.userSelect && this.state.userSelect.length > 0 && this.state.showSocialMed ) {\r\n                show = (\r\n                    <Aux>\r\n                        <SocialMed \r\n                            switchOpt\r\n                            shareFacebook={this.facebookShareHandler}\r\n                            shareTwitter={this.twitterShareHandler}/>\r\n                        <SwitchOpt \r\n                            switchOpt={this.switchShareOptHandler}/>\r\n                    </Aux>\r\n                );\r\n            }\r\n        \r\n            if (this.state.showShareUser) {  \r\n            show = (\r\n                <Aux>\r\n                    <ShareUsers \r\n                        userSelect={this.state.userSelect}\r\n                        viewUsers={this.viewUsersHandler}\r\n                        viewAllUsers={this.props.viewAllUsers}\r\n                        shareUser={this.shareUserHandler}/> \r\n                    <SwitchOpt \r\n                        switchOpt={this.switchShareOptHandler}/>\r\n                </Aux>\r\n            );\r\n            }\r\n            \r\n        \r\n            return show\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userSelect: state.share.userSelect,\r\n        viewAllUsers: state.share.viewAllUsers,\r\n        shareID: state.share.shareID\r\n    };\r\n};\r\n\r\nconst mapDispatchToProp = dispatch => {\r\n    return {\r\n        onViewUsers: () => dispatch(actions.viewUsers()),\r\n        onShareUser: (userSelect, shareID) => dispatch(actions.shareUserInit(userSelect, shareID))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(ShareOpt);\r\n    \r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Share.css';\r\nimport Input from './Input/Input';\r\nimport SelectUsers from './SelectUsers/SelectUsers';\r\nimport ShareOpt from './ShareOpt/ShareOpt';\r\nimport * as actions from '../../../store/actions/index';\r\nimport Modal from '../../../components/UI/Modal/Modal';\r\nimport Loader from '../../../components/UI/Loader/Loader';\r\n\r\nclass Share extends Component {\r\n    closeShareHandler = () => {\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onDefaultShareProps();\r\n    }\r\n\r\n    render() { \r\n        let shareCnt = (\r\n            <div className=\"reuse-share__wrapper\">  \r\n                <Input />\r\n                <SelectUsers />\r\n                <ShareOpt />\r\n            </div>\r\n        )\r\n\r\n        if (this.props.start) {\r\n            shareCnt=(\r\n                <div className=\"reuse-share__wrapper\">  \r\n                    <Loader />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.shareErr) {\r\n            shareCnt = (\r\n                <Modal \r\n                    err={this.props.shareErr}/>\r\n            );\r\n        }\r\n\r\n        let share = (\r\n            <div className=\"reuse-share\">\r\n                <div className=\"reuse-share__main-wrapper\">\r\n                    <div className=\"reuse-share__backdrop\"  onClick={this.closeShareHandler}>\r\n                    </div>  \r\n                    { shareCnt }\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        if (!this.props.shareID || !this.props.status) {\r\n            this.closeShareHandler();\r\n            share = null\r\n        };\r\n\r\n        return share\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        start: state.share.start,\r\n        shareErr: state.share.shareErr,\r\n        shareID: state.share.shareID,\r\n        status: state.auth.status,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDefaultShareProps: () => dispatch(actions.shareUser())\r\n    };\r\n};\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Share));"],"sourceRoot":""}