{"version":3,"sources":["components/Main/MediaItems/MediaItem/MediaItem.js","components/Main/MediaItems/MediaItems.js","containers/SiteMain/MainContent/Form/AddVideo/AddVideo.js"],"names":["mediaItem","props","mediaCntClass","mediaCloseClass","mediaType","react_default","a","createElement","src","link","alt","className","index","removeMediaItemIndex","push","controls","join","onClick","removeMediaItem","onMouseEnter","removeMediaItemEnable","onMouseLeave","removeMediaItemDisable","index_es","icon","mediaItems","media","map","MediaItem","key","url","bind","id","AddVideo","state","inputValue","snapshot","_this","video","Object","C_Users_g_my_sg_final_deploy_react_editpost_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","snapshotErr","fetched","linkVerifyHandler","event","target","value","setState","onCheckLink","addMediaHandler","linkValid","uuid","getSnapshot","then","updateObject","onResetLink","editVideo","onVideoEdit","catch","err","selectMediaHandler","stopPropagation","preventDefault","files","handleFiles","dragEnterMediaHandler","dragOverMediaHandler","dropMediaHandler","dataTransfer","removeMediaItemEnableHandler","removeMediaItemDisableHandler","removeMediaItemHandler","updatedMedia","filter","updatedSnapshots","length","onRemoveMedia","onRemoveSnapshot","_loop","i","file","type","startsWith","window","URL","createObjectURL","submitMediaHandler","C_Users_g_my_sg_final_deploy_react_editpost_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","onSubmitMedia","onAddSnapshot","closeMediaBoxHandler","onhideMediaBox","this","showVideo","onFetchVideo","videoFetched","onVideoFetched","mediaPreview","mediaAddedViewer","addVideo","react__WEBPACK_IMPORTED_MODULE_7___default","_components_UI_Loader_Loader__WEBPACK_IMPORTED_MODULE_15__","message","_components_Main_MediaItems_MediaItems__WEBPACK_IMPORTED_MODULE_14__","_hoc_Auxs_Aux__WEBPACK_IMPORTED_MODULE_13__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_9__","name","placeholder","onChange","spellCheck","pattern","disabled","multiple","onDragEnter","onDragOver","onDrop","accept","Component","connect","form","dispatch","videosID","actions","videoLink"],"mappings":"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","file":"static/js/4.2391bda2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst mediaItem = props => {\r\n    let mediaCntClass = ['reuse-form__itm--det__view-select--media__wrapper'];\r\n    let mediaCloseClass = ['reuse-form__itm--det__view-select--media__wrapper--close'];\r\n\r\n    let mediaType = (\r\n            <img \r\n                src={props.link} \r\n                alt=\"post\"\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\"/>\r\n    );\r\n\r\n    if (props.index === props.removeMediaItemIndex) {\r\n        mediaCntClass.push('reuse-form__itm--det__view-select--media__wrapper--active');\r\n        mediaCloseClass.push('reuse-form__itm--det__view-select--media__wrapper--close__active');\r\n    }\r\n\r\n    if (props.mediaType === 'video') {\r\n        mediaType = (\r\n            <video \r\n                src={props.link} \r\n                controls\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\">\r\n                <p>our browser doesn't support embedded videos</p>\r\n            </video>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"reuse-form__itm--det__view-select--media\">\r\n            <div className={mediaCntClass.join(' ')}>\r\n                { mediaType }\r\n                <div \r\n                    className={mediaCloseClass.join(' ')}\r\n                    onClick={props.removeMediaItem}\r\n                    onMouseEnter={props.removeMediaItemEnable}\r\n                    onMouseLeave={props.removeMediaItemDisable}>\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'times']} \r\n                        className=\"icon icon__reuse-form--view-select__close\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mediaItem;","import React from 'react';\r\n\r\nimport MediaItem from './MediaItem/MediaItem';\r\n\r\nconst mediaItems = props => {\r\n    const allMedia = props.media.map((link, index) => (\r\n        <MediaItem\r\n            key={index}\r\n            link={link.url}\r\n            index={index}\r\n            mediaType={props.mediaType}\r\n            removeMediaItem={props.removeMediaItem.bind(this, link.id)}\r\n            removeMediaItemEnable={props.removeMediaItemEnable.bind(this, index)}\r\n            removeMediaItemDisable={props.removeMediaItemDisable.bind(this, index)}\r\n            removeMediaItemIndex={props.removeMediaItemIndex}/>\r\n    ));\r\n    return allMedia;\r\n}\r\n\r\nexport default mediaItems;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport uuid from 'uuid';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport { updateObject, getSnapshot } from '../../../../../shared/utility';\r\nimport Aux from '../../../../../hoc/Auxs/Aux'\r\nimport MediaItems from '../../../../../components/Main/MediaItems/MediaItems';\r\nimport Loader from '../../../../../components/UI/Loader/Loader';\r\n\r\nclass AddVideo extends Component {\r\n    state = {\r\n        inputValue: '',\r\n        snapshot: this.props.media.video ? [...this.props.snapshot] : [],\r\n        media: this.props.media.video ? [...this.props.media.video] : [],\r\n        removeMediaItemIndex: null,\r\n        snapshotErr: null,\r\n        fetched: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!this.props.showVideo) {\r\n            this.props.onFetchVideo(this.state.media)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.videoFetched && !this.props.showVideo && !this.state.fetched) {\r\n            this.setState({fetched: true, media: [...this.props.media.video]});\r\n            this.props.onVideoFetched();\r\n        }\r\n    }\r\n\r\n    linkVerifyHandler = (event) => {\r\n        let inputValue =  event.target.value;\r\n        this.setState({inputValue, snapshotErr: null});\r\n        this.props.onCheckLink(inputValue);\r\n    }\r\n\r\n    addMediaHandler = () => {\r\n        if (this.props.linkValid && this.props.linkValid.media) {\r\n            let id = uuid();\r\n            let media = [...this.state.media];\r\n            getSnapshot(this.props.linkValid.media.url, 'video').then(() => {\r\n                media.push(updateObject(this.props.linkValid.media, {id}));\r\n                this.setState({media: media, inputValue: ''});\r\n                this.props.onResetLink();\r\n                if (!this.props.editVideo) {\r\n                    this.props.onVideoEdit()\r\n                }\r\n            }).catch(err => {\r\n                this.setState({snapshotErr: err});\r\n            })\r\n        }\r\n    }\r\n\r\n    selectMediaHandler = (event) => {\r\n        this.setState({snapshotErr: null});\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.target.files) {\r\n            const files = event.target.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    dragEnterMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dragOverMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dropMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.dataTransfer) {\r\n            const dt = event.dataTransfer;\r\n            const files = dt.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    removeMediaItemEnableHandler = (index) => {\r\n        this.setState({removeMediaItemIndex: index})\r\n    }\r\n\r\n    removeMediaItemDisableHandler = () => {\r\n        this.setState({removeMediaItemIndex: null})\r\n    }\r\n    \r\n    removeMediaItemHandler = (id) => {\r\n        if (!this.props.editVideo) {\r\n            this.props.onVideoEdit()\r\n        }\r\n        let media = [...this.state.media];\r\n        let snapshot = [...this.state.snapshot];\r\n        let updatedMedia = media.filter(link=>  link.id !== id);\r\n        let updatedSnapshots = snapshot.filter(snapshot => snapshot.id !== id);\r\n        this.setState({media:  updatedMedia, snapshot: updatedSnapshots});\r\n        if (this.props.media.video && this.props.media.video.length > 0) {\r\n            this.props.onRemoveMedia(updateObject(this.props.media, {video: updatedMedia}));\r\n            this.props.onRemoveSnapshot(updatedSnapshots);\r\n        }\r\n    }\r\n\r\n    handleFiles = (files) => {\r\n        let media = [...this.state.media];\r\n        if (!this.props.editVideo) {\r\n            this.props.onVideoEdit()\r\n        }\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];  \r\n            if(file.type.startsWith('video/')) {\r\n                let id = uuid();\r\n                let url = window.URL.createObjectURL(file);\r\n                getSnapshot(url, 'video').then(() => {\r\n                    media.push({file, url, id});\r\n                    this.setState({media});\r\n                }).catch(err => {\r\n                    this.setState({snapshotErr: err});\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    submitMediaHandler = () => {\r\n        let media = {...this.props.media};\r\n        this.props.onSubmitMedia(updateObject(media, {video: [...this.state.media]}));\r\n        this.props.onAddSnapshot(this.state.snapshot);\r\n    }\r\n\r\n    closeMediaBoxHandler = () => {\r\n        this.props.onhideMediaBox();\r\n    }\r\n\r\n    render() {\r\n        let mediaPreview = null;\r\n        let mediaAddedViewer = null;\r\n        let addVideo = <Loader />\r\n\r\n        if (this.props.linkValid ) {\r\n            mediaPreview = this.props.linkValid.media ? (\r\n                <video src={this.props.linkValid.media.url} controls>\r\n                    <p>our browser doesn't support embedded videos</p>\r\n                </video>\r\n            ) : <div className=\"reuse-form__err\">{ this.props.linkValid.err.message}</div>\r\n        }\r\n\r\n        if (this.state.media.length > 0) {\r\n            mediaAddedViewer = (\r\n                <div className=\"reuse-form__itm--det__view-select\">\r\n                    <MediaItems \r\n                       media={this.state.media}\r\n                       mediaType=\"video\"\r\n                       removeMediaItemEnable={this.removeMediaItemEnableHandler}\r\n                       removeMediaItemDisable={this.removeMediaItemDisableHandler}\r\n                       removeMediaItemIndex={this.state.removeMediaItemIndex}\r\n                       removeMediaItem={this.removeMediaItemHandler}/>\r\n                </div>\r\n            ); \r\n        }\r\n\r\n        if (this.props.showVideo) {\r\n            addVideo = (\r\n                <Aux>\r\n                    <h4 className=\"reuse-form__itm--title\">\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'video']}\r\n                            className=\"icon icon__reuse-form--itm--title\" />\r\n                        Add Video\r\n                    </h4>\r\n                    <div className=\"reuse-form__itm--det\">\r\n                        <div className=\"reuse-form__cnt\">\r\n                            <label className=\"reuse-form__cnt--title\">Video Link</label>\r\n                            <div className=\"reuse-form__cnt--det\">\r\n                                <input \r\n                                    type=\"url\" \r\n                                    name=\"\" \r\n                                    className=\"reuse-form__cnt--det__input reuse-form__cnt--det__input--lg\" \r\n                                    placeholder=\"paste link\"\r\n                                    onChange={this.linkVerifyHandler}\r\n                                    value={this.state.inputValue}\r\n                                    spellCheck={false}\r\n                                    pattern=\"https://.*\" />\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={this.addMediaHandler}\r\n                                    disabled={this.props.linkValid ? this.props.linkValid.err !== null : true}\r\n                                    className=\"reuse-form__cnt--det__btn\">\r\n                                    <FontAwesomeIcon \r\n                                    icon={['fas', 'plus']} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"reuse-form__itm--det__view\">\r\n                            { mediaPreview }\r\n                        </div>\r\n                        <div className=\"reuse-form__itm--det__alt reuse-form__itm--det__alt--vid\">\r\n                            OR\r\n                        </div>\r\n                        <div className=\"reuse-form__cnt\">\r\n                            <div className=\"reuse-form__cnt--det\">\r\n                                <div className=\"reuse-form__cnt--det__fil\">\r\n                                    Drag and Drop Videos\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        name=\"\" \r\n                                        multiple\r\n                                        className=\"reuse-form__cnt--det__fil--input\"\r\n                                        onChange={this.selectMediaHandler}\r\n                                        onDragEnter={this.dragEnterMediaHandler}\r\n                                        onDragOver={this.dragOverMediaHandler}\r\n                                        onDrop={this.dropMediaHandler}\r\n                                        accept=\"video/*\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        { this.state.snapshotErr ? \r\n                            <div className=\"reuse-form__err\">Some features are not available in your browser, { this.state.snapshotErr }</div> : null}\r\n                        { mediaAddedViewer }\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--footer reuse-form__btn\">\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"reuse-form__btn--close\"\r\n                            onClick={this.closeMediaBoxHandler}>Exit</button>\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"reuse-form__btn--add\"\r\n                            onClick={this.submitMediaHandler}>Add</button>\r\n                    </div>\r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className=\"reuse-form__itm reuse-form__itm--vid\">\r\n                { addVideo }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showVideo: state.form.showVideo,\r\n        linkValid: state.form.linkValid,\r\n        snapshot: state.form.snapshot,\r\n        media: state.form.media,\r\n        videoFetched: state.form.videoFetched,\r\n        editVideo: state.form.editVideo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchVideo: (videosID) => dispatch(actions.fetchVideoInit(videosID)),\r\n        onVideoFetched: () => dispatch(actions.videoFetched()),\r\n        onCheckLink: (videoLink) => dispatch(actions.checkLinkInit(videoLink, 'video')),\r\n        onResetLink: () => dispatch(actions.resetLink()),\r\n        onVideoEdit: () => dispatch(actions.videoEdit()),\r\n        onAddSnapshot: (snapshot) => dispatch(actions.addSnapshot(snapshot)),\r\n        onRemoveSnapshot: (snapshot) => dispatch(actions.removeSnapshot(snapshot)),\r\n        onRemoveMedia: (media) => dispatch(actions.removeMedia(media)),\r\n        onSubmitMedia: (media) => dispatch(actions.submitMedia(media)),\r\n        onhideMediaBox: () => dispatch(actions.hideMediaBox())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddVideo)"],"sourceRoot":""}