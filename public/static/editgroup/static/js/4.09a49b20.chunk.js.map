{"version":3,"sources":["containers/SiteMain/MainContent/Form/AddImage/MediaItem/MediaItem.js","containers/SiteMain/MainContent/Form/AddImage/AddImage.js"],"names":["cropper","React","createRef","mediaItem","state","url","cropHandler","image","current","getCroppedCanvas","imageSmoothingQuality","toDataURL","file","dataURLtoBlob","window","URL","createObjectURL","_this","setState","props","onImageCapture","imageUrl","imageCapture","id","uuid","preview","this","react_default","a","createElement","src","alt","className","react_cropper_default","ref","guides","cropBoxResizable","minCropBoxHeight","minCropBoxWidth","dragMode","ready","setCropBoxData","width","height","crop","Component","connect","dispatch","actions","videoRef","AddImage","inputValue","media","removeMediaItemIndex","snapshotErr","mediaUrl","length","err","startCapture","start","linkVerifyHandler","event","target","value","onCheckLink","srcObject","getVideoTracks","forEach","track","stop","addMediaHandler","linkValid","onResetLink","openCameraHandler","navigator","mediaDevices","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","Promise","resolve","reject","call","Error","these","Object","assertThisInitialized","video","then","stream","catch","captureImageHandler","getImageURL","imageData","imageFile","selectMediaHandler","stopPropagation","preventDefault","files","handleFiles","dragEnterMediaHandler","dragOverMediaHandler","dropMediaHandler","dataTransfer","removeMediaItemEnableHandler","index","removeMediaItemDisableHandler","removeMediaItemHandler","imageEdit","onImageEdit","objectSpread2","onSaveRemoveSnap","type","startsWith","submitMediaHandler","onSubmitMedia","updateObject","closeMediaBoxHandler","onhideMediaBox","mediaPreview","mediaAddedViewer","streamVideoCLass","captureBtn","message","MediaItem","push","onClick","index_es","icon","name","placeholder","onChange","spellCheck","pattern","disabled","onDragEnter","onDragOver","onDrop","accept","autoPlay","join","form","linValid","editImage","imageLink","onRemoveMedia","imageDet"],"mappings":"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","file":"static/js/4.09a49b20.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Cropper from 'react-cropper';\r\nimport { connect } from 'react-redux';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport uuid from 'uuid';\r\n\r\nimport { dataURLtoBlob } from '../../../../../../shared/utility';\r\nimport * as actions from '../../../../../../store/actions/index';\r\n\r\nconst cropper = React.createRef(null);\r\nclass mediaItem extends Component {\r\n    state= {\r\n        url: null\r\n    };\r\n\r\n    cropHandler = () => {\r\n        let image = cropper.current.cropper.getCroppedCanvas({ imageSmoothingQuality: 'high'}).toDataURL()\r\n        let file = dataURLtoBlob(image);\r\n        let url = window.URL.createObjectURL(file);\r\n        this.setState({url});\r\n        this.props.onImageCapture({imageUrl: this.props.url, imageCapture: file, id: uuid()})\r\n    }\r\n    \r\n  render() {\r\n      let preview = null\r\n      if (this.state.url) {\r\n        preview = (\r\n            <img src={this.state.url} alt=\"\" className=\"reuse-form__itm--det__view-select--media__wrapper--preview \"/>\r\n        )\r\n      }\r\n\r\n    return (\r\n        <div className=\"reuse-form__itm--det__view-select--media\">\r\n            <div className=\"reuse-form__itm--det__view-select--media__wrapper\">\r\n            { preview }\r\n            <Cropper\r\n                ref={cropper}\r\n                src={this.props.url}\r\n                className=\"reuse-form__itm--det__view-select--media__wrapper--cnt\"\r\n                guides={false}\r\n                cropBoxResizable={false}\r\n                minCropBoxHeight={100}\r\n                minCropBoxWidth={100}\r\n                dragMode=\"none\"\r\n                ready={() => {\r\n                    cropper.current.cropper.setCropBoxData({width: 100, height: 100});\r\n                }}\r\n                crop={this.cropHandler} />\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onImageCapture: (imageCapture) => dispatch(actions.groupImage(imageCapture))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(mediaItem);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport uuid from 'uuid';\r\n\r\nimport MediaItem from './MediaItem/MediaItem';\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport { updateObject } from '../../../../../shared/utility';\r\nimport { getImageURL, dataURLtoBlob } from '../../../../../shared/utility';\r\n\r\nconst videoRef = React.createRef(null);\r\n\r\nclass AddImage extends Component {\r\n    state = {\r\n        inputValue: '',\r\n        media: null,\r\n        removeMediaItemIndex: null,\r\n        snapshotErr: null,\r\n        mediaUrl: this.props.media && this.props.media.image && this.props.media.image.length > 0 ? this.props.media.image[0].imageUrl : null,\r\n        err: null,\r\n        startCapture: false,\r\n        start: false\r\n    };\r\n\r\n    linkVerifyHandler = (event) => {\r\n        let inputValue =  event.target.value;\r\n        this.setState({inputValue, snapshotErr: null});\r\n        this.props.onCheckLink(inputValue);\r\n\r\n        if (this.state.startCapture) {\r\n            videoRef.current.srcObject.getVideoTracks().forEach(function(track) {\r\n                track.stop();\r\n          });\r\n          this.setState({startCapture: false});\r\n        }\r\n    }\r\n\r\n    addMediaHandler = () => {\r\n        if (this.props.linkValid && this.props.linkValid.media) {\r\n            this.setState({\r\n                media: {file: this.props.linkValid.media.file, url: this.props.linkValid.media.url, id: uuid()},  inputValue: ''});\r\n            this.props.onResetLink();\r\n        }\r\n    }\r\n\r\n    openCameraHandler = () => {\r\n        if (!('mediaDevices' in navigator)) {\r\n            navigator.mediaDevices = {};\r\n        }\r\n        \r\n        if (!('getUserMedia' in navigator.mediaDevices)) {\r\n            navigator.mediaDevices.getUserMedia = function(constraints) {\r\n            var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        \r\n            if (!getUserMedia) {\r\n                return Promise.reject(new Error('getUserMedia is not implemented!'));\r\n            }\r\n        \r\n            return new Promise(function(resolve, reject) {\r\n                getUserMedia.call(navigator, constraints, resolve, reject);\r\n            });\r\n            }\r\n        }\r\n        let these = this;\r\n        navigator.mediaDevices.getUserMedia({video: true})\r\n            .then(function(stream) {\r\n                videoRef.current.srcObject= stream;\r\n                these.setState({startCapture: true, mediaUrl: null})\r\n            })\r\n            .catch(function(err) {\r\n                these.setState({err, startCapture: false})\r\n            });\r\n    }\r\n\r\n    captureImageHandler = () => {\r\n        getImageURL(videoRef.current).then(imageData => {\r\n            videoRef.current.srcObject.getVideoTracks().forEach(function(track) {\r\n                  track.stop();\r\n            });\r\n            let imageFile = dataURLtoBlob(imageData);\r\n            let url = window.URL.createObjectURL(imageFile)\r\n            this.setState({mediaUrl: url, startCapture: false})\r\n        }).catch(err => {\r\n            this.setState({err})\r\n        })\r\n    }\r\n\r\n    selectMediaHandler = (event) => {\r\n        this.setState({snapshotErr: null});\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.target.files) {\r\n            const files = event.target.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    dragEnterMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dragOverMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    dropMediaHandler = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (event.dataTransfer) {\r\n            const dt = event.dataTransfer;\r\n            const files = dt.files;\r\n            this.handleFiles(files)\r\n        }\r\n    }\r\n\r\n    removeMediaItemEnableHandler = (index) => {\r\n        this.setState({removeMediaItemIndex: index})\r\n    }\r\n\r\n    removeMediaItemDisableHandler = () => {\r\n        this.setState({removeMediaItemIndex: null})\r\n    }\r\n    \r\n    removeMediaItemHandler = () => {\r\n        if (!this.props.imageEdit && this.props.media && this.props.media.image && this.props.media.image.length > 0 && !this.props.media.image[0].imageUrl) {\r\n            this.props.onImageEdit()\r\n            let media = [{...this.props.media.image[0]}];\r\n            this.props.onSaveRemoveSnap(media[0]);\r\n        }\r\n    }\r\n\r\n    handleFiles = (files) => {\r\n         if (this.state.startCapture) {\r\n            videoRef.current.srcObject.getVideoTracks().forEach(function(track) {\r\n                track.stop();\r\n          });\r\n          this.setState({startCapture: false});\r\n        }\r\n        const file = files[0];\r\n        if(file.type.startsWith('image/')) {\r\n            let url = window.URL.createObjectURL(file)\r\n            this.setState({mediaUrl: url})\r\n        }\r\n    }\r\n\r\n     submitMediaHandler = () => {\r\n        let media = {...this.props.media};\r\n        this.removeMediaItemHandler()\r\n        this.props.onSubmitMedia(updateObject(media, {image: [{...this.props.imageCapture}]}));\r\n        if (videoRef.current && videoRef.current.srcObject){\r\n            videoRef.current.srcObject.getVideoTracks().forEach(function(track) {\r\n                track.stop();\r\n          });\r\n        }\r\n    }\r\n\r\n    closeMediaBoxHandler = () => {\r\n        this.props.onhideMediaBox();\r\n        if (videoRef.current && videoRef.current.srcObject){\r\n            videoRef.current.srcObject.getVideoTracks().forEach(function(track) {\r\n                track.stop();\r\n          });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let mediaPreview = null;\r\n        let mediaAddedViewer = null;\r\n        let streamVideoCLass = [\"reuse-form__itm--det__view-select--media__wrapper--video\"];\r\n        let captureBtn = null;\r\n\r\n        if (this.props.linkValid || this.state.err) {\r\n            mediaPreview = this.props.linkValid && this.props.linkValid.err ?\r\n            <div className=\"reuse-form__err\">{ this.props.linkValid.err.message}</div> : \r\n            this.state.err ? <div className=\"reuse-form__err\">{ this.state.err.message }</div> : null\r\n        }\r\n        if (this.state.mediaUrl) {\r\n            mediaAddedViewer = (\r\n                <div className=\"reuse-form__itm--det__view-select\">\r\n                    <MediaItem\r\n                       url={this.state.mediaUrl}/>\r\n                </div>\r\n            ); \r\n        }\r\n\r\n        if (!this.state.err && this.state.startCapture) {\r\n            streamVideoCLass.push('reuse-form__itm--det__view-select--media__wrapper--video__show');\r\n            captureBtn = (\r\n                <div className=\"reuse-form__itm--footer reuse-form__btn\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"reuse-form__btn--add\"\r\n                    onClick={this.captureImageHandler}>Capture</button>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-form__itm\">\r\n                <h4 className=\"reuse-form__itm--title\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'images']}\r\n                        className=\"icon icon__reuse-form--itm--title\" />\r\n                  Add Image\r\n                </h4>\r\n                <div className=\"reuse-form__itm--det\">\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <label className=\"reuse-form__cnt--title\">Image Link</label>\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <input \r\n                                type=\"url\" \r\n                                name=\"\" \r\n                                className=\"reuse-form__cnt--det__input reuse-form__cnt--det__input--lg\" \r\n                                placeholder=\"paste link\"\r\n                                onChange={this.linkVerifyHandler}\r\n                                value={this.state.inputValue}\r\n                                spellCheck={false}\r\n                                pattern=\"https://.*\"/>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={this.addMediaHandler}\r\n                                    disabled={this.props.linkValid ? this.props.linkValid.err !== null : true}\r\n                                    className=\"reuse-form__cnt--det__btn\">\r\n                                    <FontAwesomeIcon \r\n                                    icon={['fas', 'plus']} />\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__view\">\r\n                        { mediaPreview }\r\n                    </div>\r\n                    <div className=\"reuse-form__itm--det__alt\">\r\n                        OR\r\n                    </div>\r\n                    <div \r\n                        className=\"reuse-form__itm--det__camera\"\r\n                        onClick={this.openCameraHandler}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'camera']}\r\n                            className=\"icon icon__reuse-form--itm--camera\" />\r\n                        Take Snapshot \r\n                    </div>\r\n                    <div className=\"reuse-form__cnt\">\r\n                        <div className=\"reuse-form__cnt--det\">\r\n                            <div className=\"reuse-form__cnt--det__fil\">\r\n                            <div>Upload Image</div>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"\"\r\n                                    className=\"reuse-form__cnt--det__fil--input\"\r\n                                    onChange={this.selectMediaHandler}\r\n                                    onDragEnter={this.dragEnterMediaHandler}\r\n                                    onDragOver={this.dragOverMediaHandler}\r\n                                    onDrop={this.dropMediaHandler}\r\n                                    accept=\"image/*\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <video \r\n                        ref={videoRef}\r\n                        autoPlay\r\n                        className={streamVideoCLass.join(' ')}>\r\n                        <p>our browser doesn't support embedded videos</p>\r\n                    </video>\r\n                    { captureBtn }\r\n                    { this.state.snapshotErr ? \r\n                        <div className=\"reuse-form__err\">Some features are not available in your browser, { this.state.snapshotErr }</div> : null}\r\n                    { mediaAddedViewer }\r\n                </div>\r\n                <div className=\"reuse-form__itm--footer reuse-form__btn\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--close\"\r\n                        onClick={this.closeMediaBoxHandler}>Exit</button>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"reuse-form__btn--add\"\r\n                        onClick={this.submitMediaHandler}\r\n                        disabled={!this.props.imageCapture}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        linkValid: state.form.linValid,\r\n        media: state.form.media,\r\n        imageCapture: state.form.imageCapture,\r\n        editImage: state.form.editImage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCheckLink: (imageLink) => dispatch(actions.checkLinkInit(imageLink, 'image')),\r\n        onResetLink: () => dispatch(actions.resetLink()),\r\n        onImageEdit: () => dispatch(actions.imageEdit()),\r\n        onRemoveMedia: (media) => dispatch(actions.removeMedia(media)),\r\n        onSaveRemoveSnap: (imageDet) => dispatch(actions.saveRemoveSnap(imageDet)),\r\n        onSubmitMedia: (media) => dispatch(actions.submitMedia(media)),\r\n        onhideMediaBox: () => dispatch(actions.hideMediaBox()) \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddImage)"],"sourceRoot":""}