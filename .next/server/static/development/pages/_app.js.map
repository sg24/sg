{"version":3,"file":"static\\development\\pages\\_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./global/global.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/next/app.js","webpack:///./node_modules/next/dist/next-server/lib/utils.js","webpack:///./node_modules/next/dist/pages/_app.js","webpack:///./pages/_app.js","webpack:///./react/index/axios.js","webpack:///./react/index/shared/utility.js","webpack:///./react/index/store/actions/actionTypes.js","webpack:///./react/index/store/actions/auth.js","webpack:///./react/index/store/actions/conv.js","webpack:///./react/index/store/actions/filter.js","webpack:///./react/index/store/actions/header.js","webpack:///./react/index/store/actions/index.js","webpack:///./react/index/store/actions/main.js","webpack:///./react/index/store/actions/model.js","webpack:///./react/index/store/actions/setQue.js","webpack:///./react/index/store/actions/share.js","webpack:///./react/index/store/actions/tags.js","webpack:///./react/index/store/actions/trend.js","webpack:///./react/index/store/reducers/auth.js","webpack:///./react/index/store/reducers/conv.js","webpack:///./react/index/store/reducers/filter.js","webpack:///./react/index/store/reducers/header.js","webpack:///./react/index/store/reducers/main.js","webpack:///./react/index/store/reducers/model.js","webpack:///./react/index/store/reducers/setQue.js","webpack:///./react/index/store/reducers/share.js","webpack:///./react/index/store/reducers/tags.js","webpack:///./react/index/store/reducers/trend.js","webpack:///./react/index/store/sagas/auth.js","webpack:///./react/index/store/sagas/conv.js","webpack:///./react/index/store/sagas/filter.js","webpack:///./react/index/store/sagas/header.js","webpack:///./react/index/store/sagas/index.js","webpack:///./react/index/store/sagas/main.js","webpack:///./react/index/store/sagas/model.js","webpack:///./react/index/store/sagas/setQue.js","webpack:///./react/index/store/sagas/share.js","webpack:///./react/index/store/sagas/tags.js","webpack:///./react/index/store/sagas/trend.js","webpack:///./store.js","webpack:///external \"@fortawesome/fontawesome-svg-core\"","webpack:///external \"@fortawesome/free-brands-svg-icons\"","webpack:///external \"@fortawesome/free-regular-svg-icons\"","webpack:///external \"@fortawesome/free-solid-svg-icons\"","webpack:///external \"axios\"","webpack:///external \"next-redux-saga\"","webpack:///external \"next-redux-wrapper\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"redux-saga\"","webpack:///external \"redux-saga/effects\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","let Global = {\r\n    userDet: {},\r\n    io: {},\r\n    app: {},\r\n    url: 'http://localhost:3000'\r\n}\r\n\r\nmodule.exports = Global;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","module.exports = require('./dist/pages/_app')\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\n/**\n * Utils\n */\nfunction execOnce(fn) {\n    let used = false;\n    let result = null;\n    return (...args) => {\n        if (!used) {\n            used = true;\n            result = fn.apply(this, args);\n        }\n        return result;\n    };\n}\nexports.execOnce = execOnce;\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return `${protocol}//${hostname}${port ? ':' + port : ''}`;\n}\nexports.getLocationOrigin = getLocationOrigin;\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nexports.getURL = getURL;\nfunction getDisplayName(Component) {\n    return typeof Component === 'string'\n        ? Component\n        : Component.displayName || Component.name || 'Unknown';\n}\nexports.getDisplayName = getDisplayName;\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nexports.isResSent = isResSent;\nasync function loadGetInitialProps(App, ctx) {\n    var _a;\n    if (process.env.NODE_ENV !== 'production') {\n        if ((_a = App.prototype) === null || _a === void 0 ? void 0 : _a.getInitialProps) {\n            const message = `\"${getDisplayName(App)}.getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.`;\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || (ctx.ctx && ctx.ctx.res);\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = `\"${getDisplayName(App)}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`;\n        throw new Error(message);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(`${getDisplayName(App)} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps`);\n        }\n    }\n    return props;\n}\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes',\n];\nfunction formatWithValidation(url, options) {\n    if (process.env.NODE_ENV === 'development') {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach(key => {\n                if (exports.urlObjectKeys.indexOf(key) === -1) {\n                    console.warn(`Unknown key passed via urlObject into url.format: ${key}`);\n                }\n            });\n        }\n    }\n    return url_1.format(url, options);\n}\nexports.formatWithValidation = formatWithValidation;\nexports.SP = typeof performance !== 'undefined';\nexports.ST = exports.SP &&\n    typeof performance.mark === 'function' &&\n    typeof performance.measure === 'function';\n","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.Container=Container;exports.createUrl=createUrl;exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _utils=require(\"../next-server/lib/utils\");exports.AppInitialProps=_utils.AppInitialProps;/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */async function appGetInitialProps(_ref){var{Component,ctx}=_ref;var pageProps=await(0,_utils.loadGetInitialProps)(Component,ctx);return{pageProps};}class App extends _react.default.Component{// Kept here for backwards compatibility.\n// When someone ended App they could call `super.componentDidCatch`.\n// @deprecated This method is no longer needed. Errors are caught at the top level\ncomponentDidCatch(error,_errorInfo){throw error;}render(){var{router,Component,pageProps}=this.props;var url=createUrl(router);return _react.default.createElement(Component,Object.assign({},pageProps,{url:url}));}}exports.default=App;App.origGetInitialProps=appGetInitialProps;App.getInitialProps=appGetInitialProps;var warnContainer;var warnUrl;if(process.env.NODE_ENV!=='production'){warnContainer=(0,_utils.execOnce)(()=>{console.warn(\"Warning: the `Container` in `_app` has been deprecated and should be removed. https://err.sh/zeit/next.js/app-container-deprecated\");});warnUrl=(0,_utils.execOnce)(()=>{console.error(\"Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated\");});}// @deprecated noop for now until removal\nfunction Container(p){if(process.env.NODE_ENV!=='production')warnContainer();return p.children;}function createUrl(router){// This is to make sure we don't references the router object at call time\nvar{pathname,asPath,query}=router;return{get query(){if(process.env.NODE_ENV!=='production')warnUrl();return query;},get pathname(){if(process.env.NODE_ENV!=='production')warnUrl();return pathname;},get asPath(){if(process.env.NODE_ENV!=='production')warnUrl();return asPath;},back:()=>{if(process.env.NODE_ENV!=='production')warnUrl();router.back();},push:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.push(url,as);},pushTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var pushRoute=as?href:'';var pushUrl=as||href;return router.push(pushRoute,pushUrl);},replace:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.replace(url,as);},replaceTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var replaceRoute=as?href:'';var replaceUrl=as||href;return router.replace(replaceRoute,replaceUrl);}};}","import App from 'next/app'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport withReduxSaga from 'next-redux-saga'\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport '@fortawesome/fontawesome-svg-core/styles.css';\r\nconst serviceWorker = typeof window !== 'undefined' ? require('../react/index/serviceWorker'): null;\r\nimport createStore from '../store'\r\n\r\nlibrary.add(fas,far,fab)\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    let pageProps = {}\r\n\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps({ ctx })\r\n    }\r\n\r\n    return { pageProps }\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n    if (typeof window !== 'undefined') {\r\n      serviceWorker.register();\r\n    }\r\n    return (\r\n      <Provider store={store}>\r\n        <Component {...pageProps} />\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRedux(createStore)(withReduxSaga(MyApp))","import axios from 'axios';\r\nimport global from '../../global/global';\r\n\r\nconst instance = axios.create({\r\n    baseURL: global.url\r\n});\r\ninstance.defaults.headers.common['authorization'] = 'authorization';\r\n\r\nexport default instance;","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport const transformNumber = (favNumber) => {\r\n    const favNumArray = String(favNumber).split(\"\");\r\n    \r\n    if (favNumArray.length === 4 ) {\r\n        return `${favNumArray[0]}K`\r\n    }\r\n\r\n    if (favNumArray.length === 5 ) {\r\n        const favNum = favNumArray[0] + favNumArray[1]\r\n        return `${favNum}K`\r\n    }\r\n\r\n    if (favNumArray.length === 6 ) {\r\n        const favNum = favNumArray[0] + favNumArray[1] + favNumArray[2];\r\n        return `${favNum}K`\r\n    }\r\n\r\n    if (favNumArray.length === 7 ) {\r\n        const favNum = favNumArray[0];\r\n        return `${favNum}M`\r\n    }\r\n\r\n    if (favNumArray.length === 8 ) {\r\n        const favNum = favNumArray[0] + favNumArray[1];\r\n        return `${favNum}M`\r\n    }\r\n\r\n    if (favNumArray.length === 9 ) {\r\n        const favNum = favNumArray[0] + favNumArray[1] + favNumArray[2];\r\n        return `${favNum}M`\r\n    }\r\n\r\n    if (favNumArray.length === 10 ) {\r\n        const favNum = favNumArray[0];\r\n        return `${favNum}B`\r\n    }\r\n\r\n    if (favNumArray.length === 11 ) {\r\n        const favNum = favNumArray[0] + favNumArray[1];\r\n        return `${favNum}B`\r\n    }\r\n\r\n    return favNumber\r\n};\r\n\r\n\r\nexport const transformString = (val) => {\r\n    const curVal = String(val).substr(0, 115);\r\n    return curVal;\r\n};\r\n\r\nexport function changeFav(id, liked, favAdd, changedFav) {\r\n    let changedFavorites = [...changedFav];\r\n    let favDets = changedFavorites.filter(fav => fav.id === id);\r\n    for (let favDet of favDets) {\r\n        return updateFavs(favDet);\r\n    }   \r\n    let newChangedFav = {id, liked, favAdd};\r\n    return updateFavs(newChangedFav);\r\n    \r\n    function updateFavs(favDet) {\r\n        favDet = updateObject(favDet, {liked: !favDet.liked});\r\n        if (favDet.liked) {\r\n            favDet = updateObject(favDet, {favAdd: favDet.favAdd + 1});\r\n        } else {\r\n            favDet = updateObject(favDet, {favAdd: favDet.favAdd - 1});\r\n        }\r\n        let updateChangeFav = changedFavorites.filter(fav => fav.id !== id);\r\n        updateChangeFav.push(favDet)\r\n        return {favDet, updateChangeFav};\r\n    }\r\n};\r\n\r\nexport const engStrings = {\r\n    suffixAgo: 'ago',\r\n    seconds: 'sec',\r\n    minute: '%d min',\r\n    minutes: '%d min',\r\n    hour: '%d hr',\r\n    hours: '%d hrs',\r\n    day: '%d day',\r\n    days: '%d days',\r\n    month: '%d month',\r\n    months: '%d months',\r\n    year: '%d yr',\r\n    years: '%d yrs'\r\n  };\r\n\r\n  export function changeMode (oldCnts,changeCntStart,field, isUpdate) {\r\n    let cnts = [...oldCnts];\r\n    let curIndex;\r\n\r\n    let user = cnts.filter((userFnd, index) => {\r\n        if (userFnd.id === changeCntStart.id) {\r\n            curIndex = index;\r\n            return true\r\n        }\r\n        return false;\r\n    });\r\n    \r\n    if (user.length > 0) {\r\n        let updateUser = {...user[0]}\r\n        updateUser['pending'] = false;\r\n        updateUser['request'] = false;\r\n        updateUser['accept'] = false;\r\n        updateUser[field] = isUpdate;\r\n        cnts[curIndex] = updateUser;\r\n       return cnts;\r\n    }\r\n    return oldCnts\r\n  }","export const CHECK_AUTH_INIT = 'CHECK_AUTH_INIT';\r\nexport const CHECK_AUTH = 'CHECK_AUTH';\r\nexport const CHECK_USERIMG = 'CHECK_USERIMG';\r\nexport const CHECK_USERNAME = 'CHECK_USERNAME';\r\n\r\nexport const HEADER_FORM_EXPAND = 'HEADER_FORM_EXPAND';\r\nexport const HEADER_FORM_SM = 'HEADER_FORM_SM';\r\nexport const HEADER_NAV_DEFAULT = 'HEADER_NAV_DEFAULT'\r\n\r\nexport const HEADER_FILTER_INIT = 'HEADER_FILTER_INIT';\r\nexport const HEADER_FILTER_START = 'HEADER_FILTER_START';\r\nexport const HEADER_FILTER_FAIL = 'HEADER_FILTER_FAIL';\r\nexport const HEADER_FILTER = 'HEADER_FILTER';\r\nexport const HEADER_FILTER_CLOSE = 'HEADER_FILTER_CLOSE';\r\n\r\nexport const HEADER_ADD_NEW = 'HEADER_ADD_NEW';\r\n\r\nexport const FETCH_CNT_INIT = 'FETCH_CNT_INIT';\r\nexport const FETCH_CNT_START = 'FETCH_CNT_START';\r\nexport const FETCH_CNT_RESET = 'FETCH_CNT_RESET';\r\nexport const FETCH_CNT_FAIL = 'FETCH_CNT_FAIL';\r\nexport const FETCH_CNT = 'FETCH_CNT';\r\n\r\nexport const CHANGE_CNT_INIT = 'CHANGE_CNT_INIT';\r\nexport const CHANGE_CNT_FAIL = 'CHANGE_CNT_FAIL';\r\nexport const CHANGE_CNT_START = 'CHANGE_CNT_START';\r\nexport const CHANGE_CNT_CANCEL = 'CHANGE_CNT_CANCEL';\r\nexport const CHANGE_CNT_RESET= 'CHANGE_CNT_RESET';\r\nexport const CHANGE_CNT = 'CHANGE_CNT';\r\n\r\nexport const FILTER_POST = 'FILTER_POST';\r\n\r\nexport const FETCH_CNTCATEG_INIT = 'FETCH_CNTCATEG_INIT';\r\nexport const FETCH_CNTCATEG_START = 'FETCH_CNTCATEG_START';\r\nexport const FETCH_CNTCATEG = 'FETCH_CNTCATEG';\r\n\r\nexport const FETCH_VIDEO_INIT = 'FETCH_VIDEO_INIT';\r\nexport const FETCH_VIDEO_START = 'FETCH_VIDEO_START';\r\nexport const FETCH_VIDEO_FAIL = 'FETCH_VIDEO_FAIL';\r\nexport const FETCH_VIDEO = 'FETCH_VIDEO';\r\n\r\nexport const CHANGE_FAVORITE_INIT = 'CHANGE_FAVORITE_INIT';\r\nexport const CHANGE_FAVORITE_PT_START = 'CHANGE_FAVORITE_PT_START';\r\nexport const CHANGE_FAVORITE_PT_FAIL = 'CHANGE_FAVORITE_PT_FAIL'\r\nexport const CHANGE_FAVORITE = 'CHANGE_FAVORITE';\r\n\r\nexport const FETCH_USERS_INIT = 'FETCH_USERS_INIT';\r\nexport const FETCH_USERS_START = 'FETCH_USERS_START';\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\r\nexport const FETCH_USERS_FAIL = 'FETCH_USERS_FAIL';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\n\r\nexport const USER_SELECT = 'USER_SELECT';\r\nexport const VIEW_USERS = 'VIEW_USERS';\r\nexport const REMOVE_USER = 'REMOVE_USER';\r\nexport const FILTER_USER_INIT = 'FILTER_USER_INIT';\r\nexport const FILTER_USER = 'FILTER_USER';\r\nexport const FILTER_USER_SELECT_INIT = 'FILTER_USER_SELECT_INIT';\r\nexport const FILTER_USER_SELECT = 'FILTER_USER_SELECT';\r\nexport const SHARE_ID = 'SHARE_ID';\r\nexport const SHARE_USER_INIT = 'SHARE_USER_INIT';\r\nexport const SHARE_USER_START = 'SHARE_USER_START';\r\nexport const SHARE_USER_FAIL = 'SHARE_USER_FAIL';\r\nexport const SHARE_USER = 'SHARE_USER';\r\n\r\nexport const CHANGE_TAGS_PATH = 'CHANGE_TAGS_PATH';\r\nexport const FETCH_TAGS_INIT = 'FETCH_TAGS_INIT';\r\nexport const FETCH_TAGS_START = 'FETCH_TAGS_START';\r\nexport const FETCH_TAGS_SUCCESS = 'FETCH_TAGS_SUCCESS';\r\nexport const FETCH_TAGS_FAIL = 'FETCH_TAGS_FAIL';\r\nexport const FETCH_TAGS = 'FETCH_TAGS';\r\n\r\nexport const FETCH_TRD_INIT = 'FETCH_TRD_INIT';\r\nexport const FETCH_TRD_START = 'FETCH_TRD_START';\r\nexport const FETCH_TRD_SUCCESS = 'FETCH_TRD_SUCCESS';\r\nexport const FETCH_TRD_FAIL = 'FETCH_TRD_FAIL';\r\nexport const FETCH_TRD = 'FETCH_TRD';\r\n\r\nexport const FETCH_CATEG_INIT = 'FETCH_CATEG_INIT';\r\nexport const FETCH_CATEG_START = 'FETCH_CATEG_START';\r\nexport const FETCH_CATEG_SUCCESS = 'FETCH_CATEG_SUCCESS';\r\nexport const FETCH_CATEG_FAIL = 'FETCH_CATEG_FAIL';\r\nexport const FETCH_CATEG = 'FETCH_CATEG';\r\n\r\nexport const FETCH_CONV_INIT = 'FETCH_CONV_INIT';\r\nexport const FETCH_CONV_START = 'FETCH_CONV_START';\r\nexport const FETCH_CONV_SUCCESS = 'FETCH_CONV_SUCCESS';\r\nexport const FETCH_CONV_FAIL = 'FETCH_CONV_FAIL';\r\nexport const FETCH_CONV = 'FETCH_CONV';\r\n\r\nexport const FETCH_NOTIFY_INIT = 'FETCH_NOTIFY_INIT';\r\nexport const FETCH_NOTIFY_START = 'FETCH_NOTIFY_START';\r\nexport const FETCH_NOTIFY_SUCCESS = 'FETCH_NOTIFY_SUCCESS';\r\nexport const FETCH_NOTIFY_FAIL = 'FETCH_NOTIFY_FAIL';\r\nexport const FETCH_NOTIFY = 'FETCH_NOTIFY';\r\n\r\nexport const CHANGE_MAINFAVORITE_START = 'CHANGE_MAINFAVORITE_START';\r\nexport const CHANGE_MAINFAVORITE_RESET = 'CHANGE_MAINFAVORITE_RESET';\r\n\r\nexport const CHANGE_FAVORITE_NOTIFY_INIT = 'CHANGE_FAVORITE_NOTIFY_INIT';\r\nexport const CHANGE_FAVORITE_NOTIFY_START = 'CHANGE_FAVORITE_NOTIFY_START';\r\nexport const CHANGE_FAVORITE_NOTIFY_FAIL = 'CHANGE_FAVORITE_NOTIFY_FAIL';\r\nexport const CHANGE_FAVORITE_NOTIFY = 'CHANGE_FAVORITE_NOTIFY';\r\n\r\nexport const SHOW_NAV_LIST = 'SHOW_NAV_LIST';\r\nexport const FETCH_NAVLIST_INIT = 'FETCH_NAVLIST_INIT';\r\nexport const FETCH_NAVLIST_START = 'FETCH_NAVLIST_START';\r\nexport const FETCH_NAVLIST_SUCCESS = 'FETCH_NAVLIST_SUCCESS';\r\nexport const FETCH_NAVLIST_FAIL = 'FETCH_NAVLIST_FAIL';\r\nexport const FETCH_NAVLIST = 'FETCH_NAVLIST';\r\n\r\nexport const SHOW_USER_OPTION = 'SHOW_USER_OPTION';\r\n\r\nexport const FETCH_PT_ACTIVE_INIT = 'FETCH_PT_ACTIVE_INIT';\r\nexport const FETCH_PT_ACTIVE = 'FETCH_PT_ACTIVE';\r\nexport const FETCH_QUE_ACTIVE_INIT = 'FETCH_QUE_ACTIVE_INIT';\r\nexport const FETCH_QUE_ACTIVE = 'FETCH_QUE_ACTIVE';\r\nexport const FETCH_CNT_ACTIVE_INIT = 'FETCH_CNT_ACTIVE_INIT';\r\nexport const FETCH_CNT_ACTIVE = 'FETCH_CNT_ACTIVE';\r\nexport const FETCH_REQ_ACTIVE_INIT = 'FETCH_REQ_ACTIVE_INIT';\r\nexport const FETCH_REQ_ACTIVE = 'FETCH_REQ_ACTIVE';\r\nexport const FETCH_SHARE_ACTIVE_INIT = 'FETCH_SHARE_ACTIVE_INIT';\r\nexport const FETCH_SHARE_ACTIVE = 'FETCH_SHARE_ACTIVE';\r\nexport const FETCH_SHARECNT_ACTIVE_INIT = 'FETCH_SHARECNT_ACTIVE_INIT';\r\nexport const FETCH_SHARECNT_ACTIVE = 'FETCH_SHARECNT_ACTIVE';\r\nexport const RESET_ACTIVE_INIT = 'RESET_ACTIVE_INIT';\r\nexport const RESET_ACTIVE = 'RESET_ACTIVE';\r\nexport const SHOW_MAIN_BACKDROP= 'SHOW_MAIN_BACKDROP';\r\nexport const HIDE_MAIN_BACKDROP= 'HIDE_MAIN_BACKDROP';\r\n\r\nexport const FETCH_NOTIFY_ACTIVE_INIT = 'FETCH_NOTIFY_ACTIVE_INIT';\r\nexport const FETCH_NOTIFY_ACTIVE = 'FETCH_NOTIFY_ACTIVE';\r\nexport const DEFAULT_NOTIFYACTIVE_INIT = 'DEFAULT_NOTIFYACTIVE_INIT';\r\nexport const DEFAULT_NOTIFYACTIVE = 'DEFAULT_NOTIFYACTIVE';\r\n\r\nexport const FILTER_CONTENT_INIT = 'FILTER_CONTENT_INIT';\r\nexport const FILTER_CONTENT_START = 'FILTER_CONTENT_START';\r\nexport const FILTER_CONTENT_FAIL = 'FILTER_CONTENT_FAIL';\r\nexport const FILTER_CONTENT = 'FILTER_CONTENT';\r\nexport const RESET_FILTER = 'RESET_FILTER';\r\n\r\nexport const RESET_MODEL = 'RESET_MODEL';\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const checkAuthInit = () => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH_INIT\r\n    };\r\n};\r\n\r\nexport const checkAuth = (status) => {\r\n    return {\r\n        type: actionTypes.CHECK_AUTH,\r\n        status\r\n    };\r\n};\r\n\r\nexport const checkUserImg = (img) => {\r\n    return {\r\n        type: actionTypes.CHECK_USERIMG,\r\n        img\r\n    };\r\n};\r\n\r\n\r\nexport const checkUserName = (name) => {\r\n    return {\r\n        type: actionTypes.CHECK_USERNAME,\r\n        name\r\n    };\r\n};\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchConvInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CONV_INIT\r\n    };\r\n};\r\n\r\nexport const fetchConvStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CONV_START\r\n    }\r\n};\r\n\r\nexport const fetchConvSuccess = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CONV_SUCCESS\r\n    }\r\n};\r\n\r\nexport const fetchConvFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CONV_FAIL\r\n    }\r\n};\r\n\r\n\r\nexport const fetchConv = (conv) => {\r\n    return {\r\n        type: actionTypes.FETCH_CONV,\r\n        conv\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchCntCategInit = (categ) => {\r\n    return {\r\n        type: actionTypes.FETCH_CNTCATEG_INIT,\r\n        categ\r\n    }\r\n}; \r\n\r\nexport const fetchCntCategStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CNTCATEG_START\r\n    }\r\n};\r\n\r\nexport const fetchCntCateg = (categ) => {\r\n    return {\r\n        type: actionTypes.FETCH_CNTCATEG,\r\n        categ\r\n    }\r\n};\r\n\r\nexport const filterContentInit = (content) => {\r\n    return {\r\n        type: actionTypes.FILTER_CONTENT_INIT,\r\n        content\r\n    }\r\n};\r\n\r\nexport const filterContentStart = () => {\r\n    return {\r\n        type: actionTypes.FILTER_CONTENT_START\r\n    }\r\n};\r\n\r\nexport const filterContentFail = (err) => {\r\n    return {\r\n        type: actionTypes.FILTER_CONTENT_FAIL,\r\n        err\r\n    }\r\n};\r\n\r\nexport const filterContent = (totalFound) => {\r\n    return {\r\n        type: actionTypes.FILTER_CONTENT,\r\n        totalFound\r\n    }\r\n};\r\n\r\nexport const resetFilter = (totalFound) => {\r\n    return {\r\n        type: actionTypes.RESET_FILTER\r\n    }\r\n};\r\n\r\nexport const filterPost = (filterDet) => {\r\n    return {\r\n        type: actionTypes.FILTER_POST,\r\n        filterDet\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const headerFormExpand = () => {\r\n    return {\r\n        type: actionTypes.HEADER_FORM_EXPAND\r\n    };\r\n};\r\n\r\n\r\nexport const headerFormSm = () => {\r\n    return {\r\n        type: actionTypes.HEADER_FORM_SM\r\n    };\r\n};\r\n\r\nexport const headerNavDefault = () => {\r\n    return {\r\n        type: actionTypes.HEADER_NAV_DEFAULT\r\n    };\r\n};\r\n\r\nexport const headerAddNew = () => {\r\n    return {\r\n        type: actionTypes.HEADER_ADD_NEW\r\n    };\r\n};\r\n\r\nexport const fetchNotifyInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_NOTIFY_INIT\r\n    };\r\n};\r\n\r\nexport const fetchNotifyStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_NOTIFY_START\r\n    };\r\n};\r\n\r\nexport const fetchNotifySuccess = () => {\r\n    return {\r\n        type: actionTypes.FETCH_NOTIFY_SUCCESS\r\n    };\r\n};\r\n\r\nexport const fetchNotifyFail = (err) => {\r\n    return {\r\n        type: actionTypes.FETCH_NOTIFY_FAIL,\r\n        err\r\n    };\r\n};\r\n\r\nexport const fetchNotify = (notify) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_NOTIFY,\r\n        notify\r\n    };\r\n}; \r\n\r\nexport const changeFavNotifyInit = (notify, notifyID) => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE_NOTIFY_INIT,\r\n        notify,\r\n        notifyID\r\n    };\r\n};\r\n\r\nexport const changeFavNotifyStart = (notify) => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE_NOTIFY_START,\r\n        notify\r\n    };\r\n};\r\n\r\nexport const changeFavNotifyFail = (notify) => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE_NOTIFY_FAIL,\r\n        notify\r\n    };\r\n};\r\n\r\nexport const changeFavNotify = (notify) => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE_NOTIFY,\r\n        notify\r\n    };\r\n};\r\n\r\nexport const showNavList = () => {\r\n    return {\r\n        type: actionTypes.SHOW_NAV_LIST\r\n    };\r\n};\r\n\r\nexport const fetchNavlistInit = (category) => {\r\n    return {\r\n        type: actionTypes.FETCH_NAVLIST_INIT,\r\n        category\r\n    };\r\n};\r\n\r\nexport const fetchNavlistStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_NAVLIST_START\r\n    };\r\n};\r\n\r\n\r\nexport const fetchNavlist = (category, navList) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_NAVLIST,\r\n        category,\r\n        navList,\r\n    };\r\n}; \r\n\r\nexport const showUserOption = () =>  {\r\n    return {\r\n        type: actionTypes.SHOW_USER_OPTION \r\n    }; \r\n}; \r\n\r\nexport const fetchNotifyactiveInit = (userID) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_NOTIFY_ACTIVE_INIT,\r\n        userID\r\n    }; \r\n}; \r\n\r\nexport const fetchNotifyActive = (notifyActive) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_NOTIFY_ACTIVE,\r\n        notifyActive\r\n    }; \r\n}; \r\n\r\nexport const defaultNotifyactiveInit = () =>  {\r\n    return {\r\n        type: actionTypes.DEFAULT_NOTIFYACTIVE_INIT\r\n    }; \r\n}; \r\n\r\nexport const defaultNotifyActive = () =>  {\r\n    return {\r\n        type: actionTypes.DEFAULT_NOTIFYACTIVE\r\n    }; \r\n}; \r\nexport const changeMainFavoriteStart = (isLiked) =>  {\r\n    return {\r\n        type: actionTypes.CHANGE_MAINFAVORITE_START,\r\n        isLiked\r\n    }; \r\n}; \r\n\r\nexport const changeMainFavoriteReset = () =>  {\r\n    return {\r\n        type: actionTypes.CHANGE_MAINFAVORITE_RESET\r\n    }; \r\n}; \r\n\r\nexport const headerFilterInit = (filterCnt, filterPos, filterLastPos) =>  {\r\n    return {\r\n        type: actionTypes.HEADER_FILTER_INIT,\r\n        filterCnt,\r\n        filterPos,\r\n        filterLastPos\r\n    }; \r\n}; \r\n\r\nexport const headerFilterStart = (filterPos, filterLastPos) =>  {\r\n    return {\r\n        type: actionTypes.HEADER_FILTER_START,\r\n        filterPos,\r\n        filterLastPos\r\n    }; \r\n}; \r\n\r\nexport const headerFilterFail = (searchCntErr) =>  {\r\n    return {\r\n        type: actionTypes.HEADER_FILTER_FAIL,\r\n        searchCntErr\r\n    }; \r\n}; \r\n\r\nexport const headerFilter = (searchCnt) =>  {\r\n    return {\r\n        type: actionTypes.HEADER_FILTER,\r\n        searchCnt\r\n    }; \r\n}; \r\n\r\nexport const headerFilterClose = () => {\r\n    return {\r\n        type: actionTypes.HEADER_FILTER_CLOSE\r\n    };\r\n};","export {\r\n    checkAuthInit,\r\n    checkAuth,\r\n    checkUserImg,\r\n    checkUserName\r\n} from './auth'\r\n\r\nexport { \r\n    headerFormExpand,\r\n    headerFormSm,\r\n    headerNavDefault,\r\n    headerAddNew,\r\n    changeMainFavoriteStart,\r\n    changeMainFavoriteReset,\r\n    fetchNotifyInit,\r\n    fetchNotifyStart,\r\n    fetchNotifyFail,\r\n    fetchNotify,\r\n    changeFavNotifyInit,\r\n    changeFavNotifyStart,\r\n    changeFavNotifyFail,\r\n    changeFavNotify,\r\n    showNavList,\r\n    fetchNavlistInit,\r\n    fetchNavlistStart,\r\n    fetchNavlist,\r\n    showUserOption,\r\n    fetchNotifyactiveInit,\r\n    fetchNotifyActive,\r\n    defaultNotifyactiveInit,\r\n    defaultNotifyActive,\r\n    headerFilterInit,\r\n    headerFilterStart,\r\n    headerFilterFail,\r\n    headerFilter,\r\n    headerFilterClose\r\n} from './header';\r\n\r\nexport {\r\n    fetchCntInit,\r\n    fetchCntFail,\r\n    fetchCntStart,\r\n    fetchCntReset,\r\n    fetchCnt,\r\n    changeCntInit,\r\n    changeCntStart,\r\n    changeCntFail,\r\n    changeCntCancel,\r\n    changeCntReset,\r\n    changeCnt,\r\n    fetchVideo,\r\n    changeFavInit,\r\n    changeFavPtStart,\r\n    changeFavPtFail,\r\n    changeFav,\r\n    resetModel\r\n} from './model';\r\n\r\nexport {\r\n    fetchCntCategInit,\r\n    fetchCntCategStart,\r\n    fetchCntCateg,\r\n    filterContentInit,\r\n    filterContentStart,\r\n    filterContentFail,\r\n    filterContent,\r\n    resetFilter,\r\n    filterPost\r\n} from './filter';\r\n\r\nexport {\r\n    fetchUsersInit,\r\n    fetchUsersFail,\r\n    fetchUsers,\r\n    userSelect,\r\n    viewUsers,\r\n    removeUser,\r\n    filterUserInit,\r\n    filterUserSelectInit,\r\n    filterUser,\r\n    filterUserSelect,\r\n    shareID,\r\n    shareUserInit,\r\n    shareUserStart,\r\n    shareUserfail,\r\n    shareUser\r\n} from './share';\r\nexport {\r\n    changeTagsPath,\r\n    fetchTagsInit,\r\n    fetchTagsStart,\r\n    fetchTagsFail,\r\n    fetchTags,\r\n    fetchTagsSuccess\r\n} from './tags';\r\n\r\nexport {\r\n    fetchTrdInit,\r\n    fetchTrd\r\n} from './trend';\r\n\r\nexport {\r\n    fetchCategInit,\r\n    fetchCateg\r\n} from './setQue';\r\n\r\nexport {\r\n    fetchConvInit,\r\n    fetchConv\r\n} from './conv';\r\n\r\nexport {\r\n    fetchPtActiveInit,\r\n    fetchPtActive,\r\n    fetchQueActiveInit,\r\n    fetchQueActive,\r\n    fetchCntActiveInit,\r\n    fetchCntActive,\r\n    fetchShareCntactiveInit,\r\n    fetchShareCntActive,\r\n    fetchShareactiveInit,\r\n    fetchShareActive,\r\n    fetchReqActiveInit,\r\n    fetchReqActive,\r\n    resetActiveInit,\r\n    resetActive,\r\n    showMainBackdrop,\r\n    hideMainBackdrop\r\n} from './main';","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchPtActiveInit = (userID) => {\r\n    return {\r\n        type: actionTypes.FETCH_PT_ACTIVE_INIT,\r\n        userID\r\n    };\r\n};\r\n\r\nexport const fetchPtActive = (ptActive) => {\r\n    return {\r\n        type: actionTypes.FETCH_PT_ACTIVE,\r\n        ptActive\r\n    };\r\n};\r\n\r\nexport const fetchQueActiveInit = (queActive) => {\r\n    return {\r\n        type: actionTypes.FETCH_QUE_ACTIVE_INIT,\r\n        queActive\r\n    };\r\n};\r\n\r\nexport const fetchQueActive = (queActive) => {\r\n    return {\r\n        type: actionTypes.FETCH_QUE_ACTIVE,\r\n        queActive\r\n    };\r\n};\r\n\r\nexport const fetchCntActiveInit = (userID) => {\r\n    return {\r\n        type: actionTypes.FETCH_CNT_ACTIVE_INIT,\r\n        userID\r\n    };\r\n};\r\n\r\nexport const fetchCntActive = (cntActive) => {\r\n    return {\r\n        type: actionTypes.FETCH_CNT_ACTIVE,\r\n        cntActive\r\n    };\r\n};\r\n\r\nexport const fetchShareactiveInit = (userID) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_SHARE_ACTIVE_INIT,\r\n        userID\r\n    }; \r\n}; \r\n\r\nexport const fetchShareActive = (shareActive) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_SHARE_ACTIVE,\r\n        shareActive\r\n    }; \r\n}; \r\n\r\nexport const fetchReqActiveInit = () =>  {\r\n    return {\r\n        type: actionTypes.FETCH_REQ_ACTIVE_INIT\r\n        \r\n    }; \r\n}; \r\n\r\nexport const fetchReqActive = (reqActive) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_REQ_ACTIVE,\r\n        reqActive\r\n    }; \r\n};\r\n\r\nexport const fetchShareCntactiveInit = (userID) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_SHARECNT_ACTIVE_INIT,\r\n        userID\r\n    }; \r\n}; \r\n\r\nexport const fetchShareCntActive = (shareCntActive) =>  {\r\n    return {\r\n        type: actionTypes.FETCH_SHARECNT_ACTIVE,\r\n        shareCntActive\r\n    }; \r\n}; \r\n\r\nexport const resetActiveInit = (userID, curTab) => {\r\n    return {\r\n        type: actionTypes.RESET_ACTIVE_INIT,\r\n        userID,\r\n        curTab\r\n    };\r\n};\r\n\r\nexport const resetActive = (curTab) => {\r\n    return {\r\n        type: actionTypes.RESET_ACTIVE,\r\n        curTab\r\n    };\r\n};\r\n\r\nexport const showMainBackdrop = () => {\r\n    return {\r\n        type: actionTypes.SHOW_MAIN_BACKDROP\r\n    };\r\n};\r\n\r\nexport const hideMainBackdrop = () => {\r\n    return {\r\n        type: actionTypes.HIDE_MAIN_BACKDROP\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchCntInit = (userID, fetchType, fetchLimit, skipCnt, cntTotal) => {\r\n    return {\r\n        type: actionTypes.FETCH_CNT_INIT,\r\n        userID,\r\n        fetchType,        \r\n        fetchLimit,\r\n        skipCnt,\r\n        cntTotal\r\n    }\r\n};\r\n\r\nexport const fetchCntStart = () =>{\r\n    return {\r\n        type: actionTypes.FETCH_CNT_START\r\n    };\r\n}\r\n\r\nexport const fetchCntReset = () =>{\r\n    return {\r\n        type: actionTypes.FETCH_CNT_RESET,\r\n    };\r\n}\r\n\r\nexport const fetchCntFail = (err) => {\r\n    return {\r\n        type: actionTypes.FETCH_CNT_FAIL,\r\n        err\r\n    }\r\n};\r\n\r\nexport const fetchCnt = (cnt, skipCnt, cntTotal) => {\r\n    return {\r\n        type: actionTypes.FETCH_CNT,\r\n        cnt,\r\n        skipCnt,\r\n        cntTotal\r\n    }\r\n};\r\n\r\n\r\nexport const changeCntInit = (id, title, det, confirm, modelType) => {\r\n    return {\r\n        type: actionTypes.CHANGE_CNT_INIT,\r\n        id, \r\n        title,\r\n        det,\r\n        confirm,\r\n        modelType\r\n    }\r\n};\r\n\r\nexport const changeCntStart = (title, id, det,  modelType) => {\r\n    return {\r\n        type: actionTypes.CHANGE_CNT_START,\r\n        title,\r\n        id,\r\n        det,\r\n        modelType\r\n    }\r\n};\r\n\r\nexport const changeCntCancel = () => {\r\n    return {\r\n        type: actionTypes.CHANGE_CNT_CANCEL\r\n    }\r\n};\r\n\r\nexport const changeCntReset = (changed) => {\r\n    return {\r\n        type: actionTypes.CHANGE_CNT_RESET,\r\n        changed\r\n    }\r\n};\r\n\r\nexport const changeCntFail = (err) => {\r\n    return {\r\n        type: actionTypes.CHANGE_CNT_FAIL,\r\n        err\r\n    }\r\n};\r\n\r\nexport const changeCnt= () => {\r\n    return {\r\n        type: actionTypes.CHANGE_CNT\r\n    }\r\n};\r\n\r\nexport const fetchVideo = (id, url) => {\r\n    return {\r\n        type: actionTypes.FETCH_VIDEO,\r\n        id,\r\n        url\r\n    }\r\n};\r\n\r\nexport const changeFavInit = (id, liked, favAdd, changedFav, userID, cntGrp) => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE_INIT,\r\n        id,\r\n        liked,\r\n        favAdd,\r\n        changedFav,\r\n        userID,\r\n        cntGrp\r\n    };\r\n};\r\n\r\nexport const changeFavPtStart = (id, isLiked) => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE_PT_START,\r\n        id,\r\n        isLiked\r\n    };\r\n};\r\n\r\nexport const changeFavPtFail = () => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE_PT_FAIL\r\n    };\r\n};\r\n\r\nexport const changeFav = (changedFav) => {\r\n    return {\r\n        type: actionTypes.CHANGE_FAVORITE,\r\n        changedFav\r\n    };\r\n};\r\n\r\nexport const resetModel = () => {\r\n    return {\r\n        type: actionTypes.RESET_MODEL\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchCategInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEG_INIT\r\n    };\r\n};\r\n\r\nexport const fetchCategStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEG_START\r\n    }\r\n};\r\n\r\nexport const fetchCategSuccess = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEG_SUCCESS\r\n    }\r\n};\r\n\r\nexport const fetchCategFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEG_FAIL\r\n    }\r\n};\r\n\r\n\r\nexport const fetchCateg = (categ) => {\r\n    return {\r\n        type: actionTypes.FETCH_CATEG,\r\n        categ\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchUsersInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USERS_INIT\r\n    };\r\n};\r\n\r\nexport const fetchUsersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USERS_SUCCESS\r\n    }\r\n};\r\n\r\nexport const fetchUsersFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USERS_FAIL\r\n    }\r\n};\r\n\r\n\r\nexport const fetchUsers = (users) => {\r\n    return {\r\n        type: actionTypes.FETCH_USERS,\r\n        users\r\n    };\r\n};\r\n\r\nexport const userSelect = (userSelect) => {\r\n    return {\r\n        type: actionTypes.USER_SELECT,\r\n        userSelect\r\n    };\r\n};\r\n\r\nexport const viewUsers = () => {\r\n    return {\r\n        type: actionTypes.VIEW_USERS\r\n    };\r\n};\r\n\r\nexport const removeUser = (users) => {\r\n    return {\r\n        type: actionTypes.REMOVE_USER,\r\n        users\r\n    };\r\n};\r\n\r\nexport const filterUserInit = (users, filterContent) => {\r\n    return {\r\n        type: actionTypes.FILTER_USER_INIT,\r\n        users,\r\n        filterContent\r\n    };\r\n};\r\n\r\nexport const filterUser = (users) => {\r\n    return {\r\n        type: actionTypes.FILTER_USER,\r\n        users\r\n    };\r\n};\r\n\r\nexport const filterUserSelectInit = (filterContent, userSelect) => {\r\n    return {\r\n        type: actionTypes.FILTER_USER_SELECT_INIT,\r\n        filterContent,\r\n        userSelect\r\n    };\r\n};\r\n\r\nexport const filterUserSelect = (userSelect) => {\r\n    return {\r\n        type: actionTypes.FILTER_USER_SELECT,\r\n        userSelect\r\n    };\r\n};\r\n\r\nexport const shareID = (shareID, cntType) => {\r\n    return {\r\n        type: actionTypes.SHARE_ID,\r\n        shareID,\r\n        cntType\r\n    };\r\n};\r\n\r\nexport const shareUserInit = (userSelect, shareID, cntType) => {\r\n    return {\r\n        type: actionTypes.SHARE_USER_INIT,\r\n        userSelect,\r\n        shareID,\r\n        cntType\r\n    };\r\n};\r\n\r\nexport const shareUserStart = () => {\r\n    return {\r\n        type: actionTypes.SHARE_USER_START\r\n    };\r\n};\r\n\r\nexport const shareUserfail = (err) => {\r\n    return {\r\n        type: actionTypes.SHARE_USER_FAIL,\r\n        err\r\n    };\r\n};\r\n\r\nexport const shareUser = () => {\r\n    return {\r\n        type: actionTypes.SHARE_USER\r\n    };\r\n};\r\n\r\n\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const changeTagsPath = (path) => {\r\n    return {\r\n        type: actionTypes.CHANGE_TAGS_PATH,\r\n        path\r\n    };\r\n};\r\n\r\nexport const fetchTagsInit = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TAGS_INIT\r\n    };\r\n};\r\n\r\nexport const fetchTagsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TAGS_START\r\n    }\r\n};\r\n\r\nexport const fetchTagsSuccess = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TAGS_SUCCESS\r\n    }\r\n};\r\n\r\nexport const fetchTagsFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TAGS_FAIL\r\n    }\r\n};\r\n\r\n\r\nexport const fetchTags = (tags) => {\r\n    return {\r\n        type: actionTypes.FETCH_TAGS,\r\n        tags\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const fetchTrdInit = (userID) => {\r\n    return {\r\n        type: actionTypes.FETCH_TRD_INIT,\r\n        userID\r\n    }\r\n};\r\n\r\nexport const fetchTrdStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TRD_START\r\n    }\r\n};\r\n\r\n\r\nexport const fetchTrdSuccess = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TRD_SUCCESS\r\n    }\r\n};\r\n\r\nexport const fetchTrdFail = () => {\r\n    return {\r\n        type: actionTypes.FETCH_TRD_FAIL\r\n    }\r\n};\r\n\r\nexport const fetchTrd = (trd) => {\r\n    return {\r\n        type: actionTypes.FETCH_TRD,\r\n        trd\r\n    }\r\n};\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    status: false,\r\n    img: null,\r\n    username: null\r\n};\r\n\r\nconst checkAuth = (state, action) => {\r\n    return updateObject(state, { status: action.status })\r\n};\r\n\r\nconst checkUserImg = (state, action) => {\r\n    return updateObject(state, {img: action.img})\r\n};\r\n\r\nconst checkUserName = (state, action) => {\r\n    return updateObject(state, {username: action.name})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.CHECK_AUTH:\r\n            return checkAuth(state, action);\r\n        case actionTypes.CHECK_USERIMG:\r\n            return checkUserImg(state, action);\r\n        case actionTypes.CHECK_USERNAME:\r\n            return checkUserName(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    conv: null\r\n};\r\n\r\nconst fetchConv = (state, action) => {\r\n    return updateObject(state, { conv: action.conv })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_CONV:\r\n            return fetchConv(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    cntCateg: null,\r\n    filterStart: false,\r\n    totalFound: null,\r\n    filterErr: null\r\n}\r\n\r\nconst fetchCntCateg = (state, action) => {\r\n    return updateObject(state, {cntCateg: action.categ})\r\n};\r\n\r\nconst filterContentStart = (state, action) => {\r\n    return updateObject(state, {filterStart: true, filterErr: null})\r\n};\r\n\r\nconst filterContentFail = (state, action) => {\r\n    return updateObject(state, {filterErr: action.err})\r\n};\r\n\r\nconst filterContent = (state, action) => {\r\n    return updateObject(state, {totalFound: action.totalFound})\r\n};\r\n\r\nconst resetFilter  = (state, action) => {\r\n    return updateObject(state, {totalFound: null, filterErr: null})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_CNTCATEG:\r\n            return fetchCntCateg(state, action);\r\n        case actionTypes.FILTER_CONTENT_START:\r\n            return filterContentStart(state, action);\r\n        case actionTypes.FILTER_CONTENT_FAIL:\r\n            return filterContentFail(state, action);\r\n        case actionTypes.FILTER_CONTENT:\r\n            return filterContent(state, action);\r\n        case actionTypes.RESET_FILTER:\r\n            return resetFilter(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    expand: false,\r\n    hideFormSm: false,\r\n    addNew: false,\r\n    favChange: null,\r\n    notify: null,\r\n    hidNotify: false,\r\n    navList: null,\r\n    navListCateg: null,\r\n    hidNavList: false,\r\n    hidUserOption: false,\r\n    notifyActive: null,\r\n    default: false,\r\n    searchCnt: null,\r\n    filterPos: 0,\r\n    filterLastPos: 0,\r\n    searchCntErr: null,\r\n    filterStart: false\r\n};\r\n\r\nconst formExpand = (state, action) => {\r\n    return updateObject(state, {expand: state.expend ? state.expand : true, default: false})\r\n};\r\n\r\nconst formSm = (state, action) => {\r\n    return updateObject(state, {hideFormSm : false, default: false})\r\n};\r\n\r\nconst navDefault = (state, action) => {\r\n    return updateObject(state, {expand: false, hideFormSm: true, addNew: false, hidNotify: true, hidNavList: true, hidUserOption: true, default: true})\r\n};\r\n\r\nconst addNew = (state, action) => {\r\n    return updateObject(state, {addNew: !state.addNew, default: false})\r\n};\r\n\r\nconst changeMainFavStart = (state, action) => {\r\n    return updateObject(state, {favChange: action.isLiked})\r\n};\r\n\r\nconst changeMainFavReset = (state, action) => {\r\n    return updateObject(state, {favChange: null})\r\n};\r\n\r\nconst fetchNotify = (state, action) => {\r\n    return updateObject(state, {notify: action.notify, hidNotify: false, hidNavList: true, hidUserOption: true, default: false})\r\n};\r\n\r\nconst fetchNotifyStart = (state, action) => {\r\n    return updateObject(state, {notify: null, hidNotify: false, hidNavList: true, hidUserOption: true, default: false})\r\n};\r\n\r\nconst changeFavNotifyStart = (state, action) => {\r\n    return updateObject(state, {notify: action.notify})\r\n};\r\n\r\nconst changeFavNotify = (state, action) => {\r\n    return updateObject(state, {notify: action.notify})\r\n};\r\n\r\nconst showNavList = (state, action) => {\r\n    return updateObject(state, {hidNotify: true, hidNavList: false, hidUserOption: true, default: false})\r\n};\r\n\r\nconst fetchNavListStart = (state, action) => {\r\n    return updateObject(state, {navList: null, navListCateg: null})\r\n};\r\n\r\nconst fetchNavList = (state, action) => {\r\n    return updateObject(state, {navList: action.navList, navListCateg: action.category})\r\n};\r\n\r\nconst showUserOption = (state, action) => {\r\n    return updateObject(state, {hidNotify: true, hidNavList: true, hidUserOption: false, default: false})\r\n};\r\n\r\nconst fetchNotifyActive = (state, action) => {\r\n    return updateObject(state, {notifyActive: action.notifyActive})\r\n};\r\n\r\nconst defaultNotifyActive = (state, action) => {\r\n    return updateObject(state, {notifyActive: null})\r\n};\r\n\r\nconst headerFilterStart = (state, action) => {\r\n    return updateObject(state, {searchCnt: null, filterPos: action.filterPos, filterLastPos: action.filterLastPos, searchCntErr: null, filterStart: true})\r\n};\r\n\r\nconst headerFilterFail= (state, action) => {\r\n    return updateObject(state, {searchCntErr: action.searchCntErr})\r\n};\r\n\r\nconst headerFilter = (state, action) => {\r\n    return updateObject(state, {searchCnt: action.searchCnt})\r\n};\r\n\r\nconst headerFilterClose = (state, action) => {\r\n    return updateObject(state, {searchCnt: null, filterStart: false})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.HEADER_FORM_EXPAND:\r\n            return formExpand(state, action);\r\n        case actionTypes.HEADER_FORM_SM:\r\n            return formSm(state, action);\r\n        case actionTypes.HEADER_NAV_DEFAULT:\r\n            return navDefault(state, action);\r\n        case actionTypes.HEADER_ADD_NEW:\r\n            return addNew(state, action);\r\n        case actionTypes.CHANGE_MAINFAVORITE_START:\r\n            return changeMainFavStart(state, action);\r\n        case actionTypes.CHANGE_MAINFAVORITE_RESET:\r\n            return changeMainFavReset(state, action);\r\n        case actionTypes.FETCH_NOTIFY_START:\r\n            return fetchNotifyStart(state, action);\r\n        case actionTypes.FETCH_NOTIFY:\r\n            return fetchNotify(state, action);\r\n        case actionTypes.CHANGE_FAVORITE_NOTIFY_START:\r\n            return changeFavNotifyStart(state, action);\r\n        case actionTypes.CHANGE_FAVORITE_NOTIFY:\r\n            return changeFavNotify(state, action);\r\n        case actionTypes.SHOW_NAV_LIST:\r\n            return showNavList(state, action);\r\n        case actionTypes.FETCH_NAVLIST_START:\r\n            return fetchNavListStart(state, action);\r\n        case actionTypes.FETCH_NAVLIST:\r\n            return fetchNavList(state, action);\r\n        case actionTypes.SHOW_USER_OPTION:\r\n            return showUserOption(state, action);\r\n        case actionTypes.FETCH_NOTIFY_ACTIVE:\r\n            return fetchNotifyActive(state, action);\r\n        case actionTypes.DEFAULT_NOTIFYACTIVE:\r\n            return defaultNotifyActive(state, action);\r\n        case actionTypes.HEADER_FILTER_START:\r\n            return headerFilterStart(state, action);\r\n        case actionTypes.HEADER_FILTER_FAIL:\r\n            return headerFilterFail(state, action);\r\n        case actionTypes.HEADER_FILTER_CLOSE:\r\n            return headerFilterClose(state, action);\r\n        case actionTypes.HEADER_FILTER:\r\n            return headerFilter(state, action);\r\n        default: return state\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    showBackdrop: false,\r\n    cntActive: null,\r\n    ptActive: null,\r\n    queActive: null,\r\n    reqActive: null,\r\n    shareActive: null,\r\n    shareCntActive: null\r\n};\r\n\r\nconst fetchPtActive = (state, action) => {\r\n    return updateObject(state, { ptActive: action.ptActive })\r\n};\r\n\r\nconst fetchQueActive = (state, action) => {\r\n    return updateObject(state, { queActive: action.queActive })\r\n};\r\n\r\nconst fetchCntActive = (state, action) => {\r\n    return updateObject(state, { cntActive: action.cntActive })\r\n};\r\n\r\nconst fetchReqActive = (state, action) => {\r\n    return updateObject(state, { reqActive: action.reqActive })\r\n};\r\n\r\nconst fetchShareActive = (state, action) => {\r\n    return updateObject(state, {shareActive: action.shareActive})\r\n};\r\n\r\n\r\nconst fetchShareCntActive = (state, action) => {\r\n    return updateObject(state, {shareCntActive: action.shareCntActive})\r\n};\r\n\r\nconst resetActive = (state, action) => {\r\n    return updateObject(state,  {...state} )\r\n};\r\n\r\nconst showMainBackdrop= (state, action) => {\r\n    return updateObject(state, { showBackdrop: true })\r\n};\r\n\r\nconst hideMainBackdrop= (state, action) => {\r\n    return updateObject(state, { showBackdrop: false })\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_PT_ACTIVE:\r\n            return fetchPtActive(state, action);\r\n        case actionTypes.FETCH_QUE_ACTIVE:\r\n            return fetchQueActive(state, action);\r\n        case actionTypes.FETCH_CNT_ACTIVE:\r\n            return fetchCntActive(state, action);\r\n        case actionTypes.FETCH_SHARECNT_ACTIVE:\r\n            return fetchShareCntActive(state, action);\r\n        case actionTypes.FETCH_SHARE_ACTIVE:\r\n            return fetchShareActive(state, action);\r\n        case actionTypes.FETCH_REQ_ACTIVE:\r\n            return fetchReqActive(state, action);\r\n        case actionTypes.RESET_ACTIVE:\r\n            return resetActive(state, action);\r\n        case actionTypes.SHOW_MAIN_BACKDROP:\r\n            return showMainBackdrop(state, action);\r\n        case actionTypes.HIDE_MAIN_BACKDROP:\r\n            return hideMainBackdrop(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject, changeMode } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    cnts: null,\r\n    cntErr: null,\r\n    skipCnt: null,\r\n    cntTotal: null,\r\n    showLoader: false,\r\n    changedFav: [],\r\n    favChange: null,\r\n    postVideo: {id: null},\r\n    videoErr: null,\r\n    filterDet: null,\r\n    modelType: null,\r\n    changeCnt: false,\r\n    changeCntErr: null,\r\n    changeCntStart: null\r\n}\r\n\r\nconst fetchCnt = (state, action) => {\r\n    let cnts = !state.cnts ? action.cnt : state.cnts.concat(...action.cnt);\r\n    return updateObject(state, {cnts, skipCnt: action.skipCnt, cntTotal: action.cntTotal, showLoader: false})\r\n};\r\n\r\nconst fetchCntReset = (state, action) => {\r\n    return updateObject(state, {cnts: null, skipCnt: null, cntTotal: null, curTab: null, showLoader: false})\r\n};\r\n\r\nconst fetchCntStart = (state, action) => {\r\n    return updateObject(state, {showLoader: true})\r\n};\r\n\r\nconst fetchPostFail = (state, action) => {\r\n    return updateObject(state, {cntErr: action.err, showLoader: false})\r\n};\r\n\r\nconst changeCntStart = (state, action) => {\r\n    return updateObject(state, {changeCntStart: {title: action.title, id: action.id, det: action.det, modelType: action.modelType}, changeCntErr: null})\r\n};\r\n\r\nconst changeCntCancel = (state, action) => {\r\n    return updateObject(state, {changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n};\r\n\r\nconst changeCntReset = (state, action) => {\r\n    let cnts = [...state.cnts]\r\n   \r\n    if (action.changed) {\r\n        if (state.changeCntStart.det === 'addUser') {\r\n            let updateCnts = changeMode(cnts, state.changeCntStart, 'pending', true);\r\n            return updateObject(state, {cnts: updateCnts, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n        }\r\n    \r\n        if (state.changeCntStart.det === 'acceptUser') {\r\n            let updateCnts = changeMode(cnts, state.changeCntStart, 'accept', true);\r\n            return updateObject(state, {cnts: updateCnts, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n        }\r\n    \r\n        if (state.changeCntStart.det === 'rejUser') {\r\n            let updateCnts = changeMode(cnts, state.changeCntStart, 'request', false);\r\n            return updateObject(state, {cnts: updateCnts, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n        }\r\n         \r\n        if (state.changeCntStart.det === 'cancelReq') {\r\n            let updateCnts = changeMode(cnts, state.changeCntStart, 'pending', false);\r\n            return updateObject(state, {cnts: updateCnts, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n        }\r\n    \r\n        if (state.changeCntStart.det === 'unfriend') {\r\n            let updateCnts = changeMode(cnts, state.changeCntStart, 'accept', false);\r\n            return updateObject(state, {cnts: updateCnts, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n        }\r\n\r\n        if (state.changeCntStart.det === 'blockUser') {\r\n            let updateCnt = cnts.filter(cnt => cnt.id !== state.changeCntStart.id);\r\n            return updateObject(state, {cnts: updateCnt, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n        }\r\n    \r\n        let updateCnt = cnts.filter(cnt => cnt._id !== state.changeCntStart.id);\r\n        return updateObject(state, {cnts: updateCnt, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n    }\r\n\r\n    return updateObject(state, {cnts, changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n};\r\n\r\nconst changeCntFail = (state, action) => {\r\n    return updateObject(state, {changeCntErr: action.err})\r\n};\r\n\r\nconst changeCnt = (state, action) => {\r\n    return updateObject(state, {changeCnt: true})\r\n};\r\n\r\nconst fetchVideo = (state, action) => {\r\n    return updateObject(state, {postVideo: {id: action.id, url: action.url}})\r\n};\r\n\r\nconst changeFavPtStart = (state, action) => {\r\n    return updateObject(state, {favChange: {id:action.id, isLiked: action.isLiked}})\r\n};\r\n\r\nconst changeFavPtFail = (state, action) => {\r\n    return updateObject(state, {favChange: null })\r\n};\r\n\r\nconst changeFav = (state, action) => {\r\n    return updateObject(state, {changedFav: action.changedFav, favChange: null})\r\n};\r\n\r\nconst filterPost = (state, action) => {\r\n    return updateObject(state, {filterDet: action.filterDet})\r\n};\r\n\r\nconst resetModel = (state, action) => {\r\n    return updateObject(state, {cntErr: null,changeCntStart: null, changeCntErr: null, changeCnt: false})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_CNT:\r\n            return fetchCnt(state, action);\r\n        case actionTypes.FETCH_CNT_START:\r\n            return fetchCntStart(state, action);\r\n            case actionTypes.FETCH_CNT_RESET:\r\n            return fetchCntReset(state, action);\r\n            case actionTypes.FETCH_CNT_FAIL:\r\n            return fetchPostFail(state, action);\r\n            case actionTypes.CHANGE_CNT_START:\r\n            return changeCntStart(state, action);\r\n        case actionTypes.CHANGE_CNT_CANCEL:\r\n            return changeCntCancel(state, action);\r\n        case actionTypes.CHANGE_CNT_RESET:\r\n            return changeCntReset(state, action);\r\n        case actionTypes.CHANGE_CNT_FAIL:\r\n            return changeCntFail(state, action);\r\n        case actionTypes.CHANGE_CNT:\r\n            return changeCnt(state, action);\r\n        case actionTypes.FETCH_VIDEO:\r\n            return fetchVideo(state, action);\r\n        case actionTypes.CHANGE_FAVORITE:\r\n            return changeFav(state, action);\r\n        case actionTypes.CHANGE_FAVORITE_PT_START:\r\n            return changeFavPtStart(state, action);\r\n        case actionTypes.CHANGE_FAVORITE_PT_FAIL:\r\n            return changeFavPtFail(state, action);\r\n        case actionTypes.FILTER_POST:\r\n            return filterPost(state, action);\r\n        case actionTypes.RESET_MODEL:\r\n            return resetModel(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    categ: null\r\n};\r\n\r\nconst fetchCateg = (state, action) => {\r\n    return updateObject(state, { categ: action.categ })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_CATEG:\r\n            return fetchCateg(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    users: null,\r\n    userSelect: null,\r\n    filterUser: null,\r\n    filterUserSelect: null,\r\n    viewAllUsers: true,\r\n    shareID: null,\r\n    cntType: null,\r\n    start: false,\r\n    shareErr: null\r\n}\r\n\r\nconst fetchUsers = (state, action) => {\r\n    return updateObject(state, {users: action.users, filterUser: null})\r\n};\r\n\r\nconst userSelect = (state, action) => {\r\n    return updateObject(state, {userSelect: action.userSelect})\r\n};\r\n\r\nconst viewUsers = (state, action) => {\r\n    return updateObject(state, {viewAllUsers: !state.viewAllUsers})\r\n};\r\n\r\nconst removeUser = (state, action) => {\r\n    return updateObject(state, {\r\n            userSelect: action.users, \r\n            viewAllUsers: action.users && !action.users.length > 0 \r\n        })\r\n};\r\n\r\nconst filterUser = (state, action) => {\r\n    return updateObject(state, {\r\n        filterUser: action.users\r\n    })\r\n};\r\n\r\nconst filterUserSelect = (state, action) => {\r\n    return updateObject(state, {\r\n        filterUserSelect: action.userSelect\r\n    });\r\n};\r\n\r\nconst shareID = (state, action) => {\r\n    return updateObject(state, {shareID: String(action.shareID), cntType: action.cntType});\r\n};\r\n\r\nconst shareUserStart = (state, action) => {\r\n    return updateObject(state, {start: true});\r\n};\r\n\r\nconst shareUserFail = (state, action) => {\r\n    return updateObject(state, {shareErr: action.err});\r\n};\r\n\r\nconst shareUser = (state, action) => {\r\n    return updateObject(state, {\r\n        users: null,\r\n        userSelect: null,\r\n        filterUser: null,\r\n        filterUserSelect: null,\r\n        viewAllUsers: true,\r\n        shareID: null,\r\n        share: false,\r\n        start: false\r\n    })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_USERS:\r\n            return fetchUsers(state, action);\r\n        case actionTypes.USER_SELECT:\r\n            return userSelect(state, action);\r\n        case actionTypes.VIEW_USERS:\r\n            return viewUsers(state, action);\r\n        case actionTypes.REMOVE_USER:\r\n            return removeUser(state, action);\r\n        case actionTypes.FILTER_USER:\r\n            return filterUser(state, action);\r\n        case actionTypes.FILTER_USER_SELECT:\r\n            return filterUserSelect(state, action);\r\n        case actionTypes.SHARE_ID:\r\n            return shareID(state, action);\r\n        case actionTypes.SHARE_USER_START:\r\n            return shareUserStart(state, action);\r\n        case actionTypes.SHARE_USER_FAIL:\r\n            return shareUserFail(state, action);\r\n        case actionTypes.SHARE_USER:\r\n            return shareUser(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    path: null,\r\n    tags: null\r\n};\r\n\r\nconst fetchTags = (state, action) => {\r\n    return updateObject(state, { tags: action.tags })\r\n};\r\n\r\nconst changeTagsPath = (state, action) => {\r\n    return updateObject(state, { path: action.path })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.CHANGE_TAGS_PATH:\r\n            return changeTagsPath(state, action)\r\n        case actionTypes.FETCH_TAGS:\r\n            return fetchTags(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    trends: null\r\n};\r\n\r\nconst fetchTrds = (state, action) => {\r\n    return updateObject(state, { trends: action.trd })\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_TRD:\r\n            return fetchTrds(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\nexport function* checkAuthInitSaga(action) {\r\n    let expiresIn =  document.cookie.replace(/(?:(?:^|.*;\\s*)expiresIn\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    if (expiresIn && (new Date(new Date(expiresIn*1000).getTime()) >= new Date().getTime())) {\r\n        yield put(actions.checkAuth(true))\r\n        try {\r\n            let response = yield axios.post('/header', {}, {headers: {'data-categ':'userimg'}});\r\n            if (response.data.url) {\r\n                yield put(actions.checkUserImg(response.data.url));\r\n            } else {\r\n                yield put(actions.checkUserName(response.data.name));\r\n            }\r\n            \r\n        } catch(err) {}\r\n        \r\n    } \r\n} ","import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport function* fetchConvInitSaga(action) {\r\n    const data = [{\r\n        id: '63763637737',\r\n        type: 'grpChat',\r\n        groupImage: '/',\r\n        title: 'The real community for programmers The real community for programmers The real community for programmers',\r\n        lastMsg: 'Pls do you know the reson while Pls do you know the reson while Pls do you know the reson while Pls do you know the reson whilePls do you know the reson while Pls do you know the reson whilePls do you know the reson while Pls do you know the reson while',\r\n        online: '5353535',\r\n        offline: '63636363' \r\n    },{\r\n        id: '7575848839939',\r\n        type: 'pvtChat',\r\n        userImage: '/',\r\n        status: true,\r\n        user: 'user user',\r\n        convCreated: '2m ago',\r\n        lastMsg: 'Pls do you know the reson while Pls do you know the reson while Pls do you know the reson while Pls do you know the reson whilePls do you know the reson while Pls do you know the reson whilePls do you know the reson while Pls do you know the reson while'\r\n    }]\r\n\r\n\r\n    yield put(actions.fetchConv([...data]));\r\n}","import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nexport function* fetchCntCategInitSaga(action) {\r\n    try {\r\n        if (action.categ && action.categ.length > 0) {\r\n            yield put (actions.fetchCntCateg([...action.categ]))\r\n        } else {\r\n            let response = yield axios.post('/header', {categ: 'question'}, {headers: {'data-categ':'category'}});\r\n            yield put(actions.fetchCntCateg(response.data));\r\n        }\r\n    } catch(e){}\r\n}\r\n\r\nexport function* filterContentInitSaga(action) {\r\n    let categs = [];\r\n    for (let categ of action.content.category) {\r\n        categs.push(categ.category);\r\n    }\r\n    let filterDet = updateObject(action.content, {category: categs});\r\n    let filterCnt = JSON.stringify(filterDet);\r\n    if(!action.content.apply) {\r\n        try {\r\n            yield put(actions.filterContentStart());\r\n            let response = yield axios.post('/header',{filterCnt, model: 'question'},{headers: {'data-categ':'cntSearch'}});\r\n            yield put(actions.filterContent(response.data));\r\n        } catch(err) {\r\n            yield put (actions.filterContentFail(err))\r\n        }\r\n        return\r\n    }\r\n    yield put(actions.filterPost(filterCnt));\r\n}","import { put } from 'redux-saga/effects';\r\n\r\nimport axios from '../../axios';\r\nimport { changeFav } from '../../shared/utility';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport function* fetchNotifyInitSaga(action) {\r\n    try {\r\n        yield put(actions.fetchNotifyStart());\r\n        let response = yield axios.post('/header', {fetchCnt: true}, {headers: {'data-categ':'allnotification'}});\r\n        if (response.data.collTotal > 0) {\r\n            yield put(actions.fetchNotify(response.data.coll));\r\n        } else {\r\n            yield put(actions.fetchNotify([]));\r\n        }\r\n    } catch(err) {\r\n        yield put(actions.fetchNotifyFail(err));\r\n    }\r\n}\r\n\r\nexport function* changeFavNotifySaga(action) {\r\n    let notify = changeFav(action.notify ,action.notifyID);\r\n    yield put(actions.changeFavNotifyStart(notify.updateStartArray));\r\n    yield put(actions.changeFavNotify(notify.updateDataArray));\r\n}\r\n\r\nexport function* fetchNavlistInitSaga(action) {\r\n    try {\r\n        yield put(actions.fetchNavlistStart());\r\n        let response = yield axios.post('/header', {categ: action.category}, {headers: {'data-categ':'category'}});\r\n        yield put(actions.fetchNavlist(action.category, response.data))\r\n    } catch(e) {}\r\n}\r\n\r\nexport function* fetchNotifyActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', {}, {headers: {'data-categ':'allnotification'}});\r\n        yield put(actions.fetchNotifyActive(response.data.collTotal));\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* defaultNotifyActiveInitSaga(action) {\r\n    try {\r\n         yield axios.post('/header', {}, {headers: {'data-categ':'resetnotification'}});\r\n        yield put(actions.defaultNotifyActive());\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* headerFilterInitSaga(action) {\r\n    try {\r\n        yield put(actions.headerFilterStart(action.filterPos, action.filterLastPos));\r\n        let response = yield axios.post('/header', {filterCnt: action.filterCnt}, {headers: {'data-categ':'headerfilter'}});\r\n        yield put(actions.headerFilter(response.data));\r\n    } catch(err) {\r\n        yield put(actions.headerFilterFail(err))\r\n    }\r\n}","import { takeEvery, all, takeLatest } from 'redux-saga/effects';\r\n\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport { checkAuthInitSaga } from './auth';\r\nimport { fetchCntInitSaga, changeFavSaga, changeCntInitSaga } from './model';\r\nimport { fetchCntCategInitSaga, filterContentInitSaga } from './filter';\r\nimport { fetchUsersInitSaga, filterUserInitSaga, filterUserSelectInitSaga, shareUserInitSaga } from './share';\r\nimport { fetchTagsInitSaga } from './tags';\r\nimport { fetchTrdInitSaga } from './trend';\r\nimport { fetchCategInitSaga } from './setQue';\r\nimport { fetchConvInitSaga } from './conv';\r\nimport { fetchNotifyInitSaga, \r\n            changeFavNotifySaga, \r\n            fetchNavlistInitSaga, \r\n            fetchNotifyActiveInitSaga,\r\n            defaultNotifyActiveInitSaga,\r\n            headerFilterInitSaga } from './header';\r\nimport { fetchPtActiveInitSaga,\r\n        fetchQueActiveInitSaga,\r\n        fetchCntActiveInitSaga,  \r\n         fetchShareActiveInitSaga,\r\n         fetchShareCntActiveInitSaga,\r\n         fetchReqActiveInitSaga, \r\n         resetActiveInitSaga} from './main';\r\n\r\nexport function* watchAuth() {\r\n    yield all([\r\n        takeEvery(actionTypes.CHECK_AUTH_INIT, checkAuthInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchCnt() {\r\n    yield all([\r\n        takeLatest(actionTypes.FETCH_CNT_INIT, fetchCntInitSaga),\r\n        takeEvery(actionTypes.CHANGE_FAVORITE_INIT, changeFavSaga),\r\n        takeLatest(actionTypes.CHANGE_CNT_INIT, changeCntInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchFilter() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_CNTCATEG_INIT, fetchCntCategInitSaga),\r\n        takeEvery(actionTypes.FILTER_CONTENT_INIT, filterContentInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchShare() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_USERS_INIT, fetchUsersInitSaga),\r\n        takeEvery(actionTypes.FILTER_USER_INIT, filterUserInitSaga),\r\n        takeEvery(actionTypes.FILTER_USER_SELECT_INIT, filterUserSelectInitSaga),\r\n        takeEvery(actionTypes.SHARE_USER_INIT, shareUserInitSaga),\r\n    ])\r\n\r\n}\r\n\r\nexport function* watchTags() {\r\n    yield takeEvery(actionTypes.FETCH_TAGS_INIT, fetchTagsInitSaga)\r\n}\r\n\r\nexport function* watchTrd() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_TRD_INIT, fetchTrdInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* watchSetQue() {\r\n    yield takeEvery(actionTypes.FETCH_CATEG_INIT, fetchCategInitSaga)\r\n}\r\n\r\nexport function* watchConv() {\r\n    yield takeEvery(actionTypes.FETCH_CONV_INIT, fetchConvInitSaga)\r\n}\r\n\r\nexport function* watchHeader() {\r\n    yield all([\r\n       takeEvery(actionTypes.FETCH_NOTIFY_INIT, fetchNotifyInitSaga),\r\n       takeEvery(actionTypes.CHANGE_FAVORITE_NOTIFY_INIT, changeFavNotifySaga),\r\n       takeEvery(actionTypes.FETCH_NAVLIST_INIT, fetchNavlistInitSaga),\r\n       takeEvery(actionTypes.FETCH_NOTIFY_ACTIVE_INIT, fetchNotifyActiveInitSaga),\r\n       takeEvery(actionTypes.DEFAULT_NOTIFYACTIVE_INIT, defaultNotifyActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga),\r\n       takeEvery(actionTypes.HEADER_FILTER_INIT, headerFilterInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* watchMain() {\r\n    yield all([\r\n       takeEvery(actionTypes.FETCH_PT_ACTIVE_INIT, fetchPtActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_QUE_ACTIVE_INIT, fetchQueActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_CNT_ACTIVE_INIT, fetchCntActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARECNT_ACTIVE_INIT, fetchShareCntActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_REQ_ACTIVE_INIT, fetchReqActiveInitSaga),\r\n       takeEvery(actionTypes.RESET_ACTIVE_INIT, resetActiveInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        watchAuth(),\r\n        watchCnt(),\r\n        watchFilter(),\r\n        watchShare(),\r\n        watchTags(),\r\n        watchTrd(),\r\n        watchSetQue(),\r\n        watchHeader(),\r\n        watchConv(),\r\n        watchMain()\r\n    ])\r\n}","import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\nexport function* fetchPtActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'post'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchPtActive(response.data));\r\n        return\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchQueActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'question'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchQueActive(response.data));\r\n        return\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchCntActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'poet'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchCntActive(response.data));\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchShareCntActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'question'}, {headers: {'data-categ': 'share'}});\r\n        yield put(actions.fetchShareCntActive(response.data));\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* fetchReqActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/users', null,{headers: {'data-categ': 'request-activeOnly'}});\r\n        yield put(actions.fetchReqActive(response.data));\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchShareActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', {}, {headers: {'data-categ':'notification'}});\r\n        yield put(actions.fetchShareActive(response.data));        \r\n    } catch(err) {}\r\n}\r\n\r\nexport function* resetActiveInitSaga(action) {\r\n    try {\r\n        if (action.curTab === 'helpme') {\r\n            yield axios.patch('/header', {model: 'question'}, {headers: {'data-categ': 'share'}});\r\n        } else {\r\n            yield axios.patch('/header', {model: action.curTab}, {headers: {'data-categ': 'modelNotify'}});\r\n        }\r\n        yield put(actions.resetActive(action.curTab));\r\n    } catch(err) {}\r\n}","import { put, delay } from 'redux-saga/effects';\r\nimport { changeFav } from '../../shared/utility';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\nexport function* fetchCntInitSaga(action) {\r\n    let model = action.fetchType === 'post' ? '/post' : action.fetchType === 'question' || action.fetchType === 'shared' ?\r\n    '/question':'/'+action.fetchType;\r\n    let categ = action.fetchType === 'shared' ? `shared-${action.userID}` : action.fetchType;\r\n    if (action.cntTotal > action.skipCnt) {\r\n        yield put(actions.fetchCntStart());\r\n    }\r\n    \r\n    try {\r\n        if (action.cntTotal === 0 || action.cntTotal > action.skipCnt) {\r\n            let response = yield axios.post(model, null,{\r\n                headers: {\r\n                    'data-categ': categ,\r\n                    'limit': action.fetchLimit, \r\n                    'skip': action.skipCnt}});\r\n            yield put(actions.fetchCnt(response.data.cnt, action.skipCnt, response.data.cntTotal));\r\n        }  \r\n        \r\n    } catch(err){\r\n        yield put(actions.fetchCntFail(err))\r\n    }\r\n    \r\n}\r\n\r\nexport function* changeFavSaga(action) {\r\n    let updateFav = changeFav(action.id ,action.liked, action.favAdd, action.changedFav);\r\n    yield put(actions.changeMainFavoriteStart(updateFav.favDet.liked));\r\n    yield put(actions.changeFavPtStart(updateFav.favDet.id, updateFav.favDet.liked))\r\n    try {\r\n        let field = action.cntGrp === 'post' ? 'postID' : action.cntGrp === 'question' ?\r\n        'queID' : 'pwtID';\r\n        yield axios.patch('/header', {id: updateFav.favDet.id, model: action.cntGrp, field},{headers: {'data-categ': 'changefavorite'}});\r\n        yield delay(500)\r\n        yield put(actions.changeMainFavoriteReset());\r\n        yield put(actions.changeFav(updateFav.updateChangeFav));\r\n    }catch(err){\r\n        yield delay(500)\r\n        yield put(actions.changeMainFavoriteReset());\r\n        yield put(actions.changeFavPtFail())\r\n    }\r\n}\r\n\r\nexport function* changeCntInitSaga(action) {\r\n    let field =   action.modelType === 'post' ? 'postID' : action.modelType === 'question' ? 'queID' : 'pwtID'\r\n    if (!action.confirm) {\r\n        yield put(actions.changeCntStart(action.title, action.id, action.det, action.modelType))\r\n        return;\r\n    }\r\n    if (action.det === 'addUser') {\r\n        yield put(actions.changeCntStart(action.title, action.id, action.det, action.modelType))\r\n    }\r\n\r\n    try {\r\n        if (action.det === 'delete') {\r\n            let payload = JSON.stringify({id: action.id, model: action.modelType, field})\r\n            yield axios.delete('/header', {headers: {'data-categ': `deletecnt-${payload}`}});\r\n        } else if (action.modelType === 'user') {\r\n            yield axios.patch('/users', {id: action.id}, {headers: {'data-categ': action.det}});\r\n        } else {\r\n            yield axios.patch('/header', {id: action.id, model: action.modelType, field} ,{headers: {'data-categ': 'draftmode'}});\r\n        }\r\n        yield put(actions.changeCnt())\r\n        yield delay(1000);\r\n        yield put(actions.changeCntReset(true))\r\n    } catch(err){\r\n        yield put(actions.changeCntFail(err))\r\n        yield delay(1000);\r\n        yield put(actions.changeCntReset(false))\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst CATEG = ['post', 'question', 'social', 'writers', 'poet', 'poeters'\r\n, 'poem','post', 'question', 'social', 'writers', 'poet', 'poeters'\r\n, 'poem'];\r\n\r\nexport function* fetchCategInitSaga() {\r\n    yield put(actions.fetchCateg(CATEG));\r\n}","import { put, delay } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\n\r\nexport function* fetchUsersInitSaga () {\r\n    try {\r\n        let response = yield axios.post('/users', null,{headers: {'data-categ':`allteacher-notab`}});\r\n        yield put(actions.fetchUsers(response.data));\r\n    } catch(err) {\r\n        yield put(actions.fetchUsersFail(err))\r\n    }\r\n}\r\n\r\nexport function* filterUserInitSaga(action) {\r\n   let filterUser = null;\r\n   if (!action.filterContent) {\r\n        filterUser = action.users\r\n    } else {\r\n        filterUser = action.users.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1);\r\n    }\r\n   yield put(actions.filterUser(filterUser))\r\n}\r\n\r\nexport function* filterUserSelectInitSaga(action) {\r\n    let filterUser = null;\r\n    if (!action.filterContent) {\r\n        filterUser = action.userSelect\r\n    } else {\r\n        filterUser = action.userSelect.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1 );\r\n    }\r\n    yield put(actions.filterUserSelect(filterUser))\r\n}\r\n\r\nexport function* shareUserInitSaga(action) {\r\n    let shareUser = [];\r\n\r\n    for (let user of [...action.userSelect] ) {\r\n        shareUser.push(user.id)\r\n    }\r\n    \r\n    try {\r\n        yield put(actions.shareUserStart())\r\n        let field =   action.cntType === 'post' ? 'postID' : action.cntType === 'question' ? 'queID' : 'pwtID'\r\n        yield axios.patch('/header', {users: JSON.stringify(shareUser), id: action.shareID, model: action.cntType, field},{headers: {'data-categ': 'shareuser'}});\r\n        yield delay(1000);\r\n        yield put(actions.shareUser());\r\n    } catch(err){\r\n        yield put(actions.shareUserfail(err));\r\n        yield delay(1000);\r\n        yield put(actions.shareUser());\r\n    }\r\n}","import { put } from 'redux-saga/effects';\r\n\r\nimport axios from '../../axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport function* fetchTagsInitSaga() {\r\n    try {\r\n        let response = yield axios.post('/post', null,{headers: {'data-categ':'postCateg'}});\r\n        yield put(actions.fetchTags(response.data));\r\n    } catch(e) {}\r\n\r\n}","import { put } from 'redux-saga/effects';\r\n\r\nimport axios from '../../axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport function* fetchTrdInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', {},{headers: {'data-categ':'trend'}});\r\n        yield put(actions.fetchTrd(response.data));\r\n        \r\n    }  catch(e) {}\r\n\r\n  \r\n}\r\n","import { applyMiddleware, createStore, combineReducers } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport './react/index/index.css';\r\nimport auth from './react/index/store/reducers/auth';\r\nimport cnt   from './react/index/store/reducers/model';\r\nimport filter from './react/index/store/reducers/filter';\r\nimport share from './react/index/store/reducers/share';\r\nimport tags  from './react/index/store/reducers/tags';\r\nimport trend from './react/index/store/reducers/trend';\r\nimport setQue from './react/index/store/reducers/setQue';\r\nimport conv from './react/index/store/reducers/conv';\r\nimport header from './react/index/store/reducers/header';\r\nimport main from './react/index/store/reducers/main';\r\n\r\nimport { \r\n    rootSaga\r\n} from './react/index/store/sagas/index';\r\n\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // const { composeWithDevTools } = require('redux-devtools-extension')\r\n    // return composeWithDevTools(applyMiddleware(...middleware))\r\n  }\r\n  return applyMiddleware(...middleware)\r\n}\r\n\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const rootReducers = combineReducers({\r\n    auth,\r\n    cnt,\r\n    filter,\r\n    share: share,\r\n    tags: tags,\r\n    trd: trend,\r\n    setQue: setQue,\r\n    conv,\r\n    header,\r\n    main\r\n});\r\n\r\n  const store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    bindMiddleware([sagaMiddleware])\r\n  )\r\n\r\n  store.sagaTask = sagaMiddleware.run(rootSaga)\r\n\r\n  return store\r\n}\r\n\r\nexport default configureStore","module.exports = require(\"@fortawesome/fontawesome-svg-core\");","module.exports = require(\"@fortawesome/free-brands-svg-icons\");","module.exports = require(\"@fortawesome/free-regular-svg-icons\");","module.exports = require(\"@fortawesome/free-solid-svg-icons\");","module.exports = require(\"axios\");","module.exports = require(\"next-redux-saga\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"redux-saga\");","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"url\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACNA;;;;;;;;;;;;;ACAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACtGA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA,iBAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAtBA;AACA;AAuBA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACrhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;ACnoBA;AAYA;AAiBA;AASA;AAKA;AAKA;;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;ACtIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAPA;AASA;AACA;AACA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAXA;AAaA;AACA;AACA;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AACA;AAmzCA;AACA;AAyCA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrJA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAnBA;AAqBA;AACA;AACA;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgiCA;AACA;AACA;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AA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","sourceRoot":""}