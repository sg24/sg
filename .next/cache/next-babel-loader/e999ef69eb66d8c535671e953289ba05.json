{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Share extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      show: false\n    });\n\n    _defineProperty(this, \"showShareTipHandler\", () => {\n      this.setState({\n        show: true\n      });\n    });\n\n    _defineProperty(this, \"hidShareTipHandler\", () => {\n      this.setState({\n        show: false\n      });\n    });\n  }\n\n  render() {\n    let shareTipClass = [\"site-header__tool-tip site-header__tool-tip--share\"];\n    let shareActiveCnt = null;\n\n    if (this.props.shareActive && this.props.shareActive > 0) {\n      shareActiveCnt = __jsx(\"div\", {\n        className: \"active__main active__main--header\"\n      }, __jsx(\"div\", null, this.props.shareActive));\n    }\n\n    if (this.state.show) {\n      shareTipClass.push(\"site-header__tool-tip--share__visible\");\n    }\n\n    return __jsx(\"a\", {\n      className: \"site-header__menu--share\",\n      href: \"/acc/shared\",\n      onMouseEnter: this.showShareTipHandler,\n      onMouseLeave: this.hidShareTipHandler\n    }, shareActiveCnt, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'location-arrow'],\n      className: \"icon icon__site-header--shares\"\n    }), __jsx(\"div\", {\n      className: shareTipClass.join(' ')\n    }, \"Shared with me\"));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    shareActive: state.main.shareActive\n  };\n};\n\nexport default connect(mapStateToProps, null)(Share);","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/containers/Header/Share/Share.js"],"names":["React","Component","connect","FontAwesomeIcon","Share","show","setState","render","shareTipClass","shareActiveCnt","props","shareActive","state","push","showShareTipHandler","hidShareTipHandler","join","mapStateToProps","main"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;;AAAA,mCAClB;AACJI,MAAAA,IAAI,EAAE;AADF,KADkB;;AAAA,iDAKJ,MAAM;AACxB,WAAKC,QAAL,CAAc;AACVD,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,KATyB;;AAAA,gDAWL,MAAM;AACvB,WAAKC,QAAL,CAAc;AACVD,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,KAfyB;AAAA;;AAkB3BE,EAAAA,MAAM,GAAG;AACJ,QAAIC,aAAa,GAAG,CAAC,oDAAD,CAApB;AACA,QAAIC,cAAc,GAAG,IAArB;;AAEA,QAAI,KAAKC,KAAL,CAAWC,WAAX,IAA0B,KAAKD,KAAL,CAAWC,WAAX,GAAyB,CAAvD,EAA0D;AACtDF,MAAAA,cAAc,GACV;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,mBAAM,KAAKC,KAAL,CAAWC,WAAjB,CADJ,CADJ;AAKH;;AAED,QAAI,KAAKC,KAAL,CAAWP,IAAf,EAAqB;AACjBG,MAAAA,aAAa,CAACK,IAAd,CAAmB,uCAAnB;AACH;;AAED,WACI;AACI,MAAA,SAAS,EAAC,0BADd;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,YAAY,EAAE,KAAKC,mBAHvB;AAII,MAAA,YAAY,EAAE,KAAKC;AAJvB,OAKMN,cALN,EAMI,MAAC,eAAD;AACI,MAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,gBAAR,CADV;AAEI,MAAA,SAAS,EAAC;AAFd,MANJ,EASI;AAAK,MAAA,SAAS,EAAED,aAAa,CAACQ,IAAd,CAAmB,GAAnB;AAAhB,wBATJ,CADJ;AAeJ;;AAjD0B;;AAkD7B;;AAED,MAAMC,eAAe,GAAGL,KAAK,IAAI;AAC7B,SAAO;AACJD,IAAAA,WAAW,EAAEC,KAAK,CAACM,IAAN,CAAWP;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAACe,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,KAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Share extends Component {\r\n    state = {\r\n        show: false\r\n    };\r\n\r\n    showShareTipHandler = () => {\r\n        this.setState({\r\n            show: true\r\n        });\r\n    };\r\n\r\n    hidShareTipHandler = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    };\r\n\r\n\r\n   render() {\r\n        let shareTipClass = [\"site-header__tool-tip site-header__tool-tip--share\"];\r\n        let shareActiveCnt = null;\r\n    \r\n        if (this.props.shareActive && this.props.shareActive > 0) {\r\n            shareActiveCnt = (\r\n                <div className=\"active__main active__main--header\">\r\n                    <div>{this.props.shareActive}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.show) {\r\n            shareTipClass.push(\"site-header__tool-tip--share__visible\")\r\n        }\r\n\r\n        return (\r\n            <a \r\n                className=\"site-header__menu--share\" \r\n                href=\"/acc/shared\"\r\n                onMouseEnter={this.showShareTipHandler}\r\n                onMouseLeave={this.hidShareTipHandler}>\r\n                { shareActiveCnt }\r\n                <FontAwesomeIcon \r\n                    icon={['fas', 'location-arrow']} \r\n                    className=\"icon icon__site-header--shares\" />\r\n                <div className={shareTipClass.join(' ')}>\r\n                    Shared with me\r\n                </div>\r\n            </a> \r\n        )\r\n   }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n       shareActive: state.main.shareActive\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Share);"]},"metadata":{},"sourceType":"module"}