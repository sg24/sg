{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function* fetchPtActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'post'\n    }, {\n      headers: {\n        'data-categ': ' modelNotify'\n      }\n    });\n    yield put(actions.fetchPtActive(response.data));\n    return;\n  } catch (err) {}\n}\nexport function* fetchQueActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'question'\n    }, {\n      headers: {\n        'data-categ': ' modelNotify'\n      }\n    });\n    yield put(actions.fetchQueActive(response.data));\n    return;\n  } catch (err) {}\n}\nexport function* fetchCntActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'poet'\n    }, {\n      headers: {\n        'data-categ': ' modelNotify'\n      }\n    });\n    yield put(actions.fetchCntActive(response.data));\n  } catch (err) {}\n}\nexport function* fetchShareCntActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'question'\n    }, {\n      headers: {\n        'data-categ': 'share'\n      }\n    });\n    yield put(actions.fetchShareCntActive(response.data));\n  } catch (err) {}\n}\nexport function* fetchReqActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/users', null, {\n      headers: {\n        'data-categ': 'request-activeOnly'\n      }\n    });\n    yield put(actions.fetchReqActive(response.data));\n  } catch (err) {}\n}\nexport function* fetchShareActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {}, {\n      headers: {\n        'data-categ': 'notification'\n      }\n    });\n    yield put(actions.fetchShareActive(response.data));\n  } catch (err) {}\n}\nexport function* resetActiveInitSaga(action) {\n  try {\n    if (action.curTab === 'helpme') {\n      yield axios.patch('/header', {\n        model: 'question'\n      }, {\n        headers: {\n          'data-categ': 'share'\n        }\n      });\n    } else {\n      yield axios.patch('/header', {\n        model: action.curTab\n      }, {\n        headers: {\n          'data-categ': 'modelNotify'\n        }\n      });\n    }\n\n    yield put(actions.resetActive(action.curTab));\n  } catch (err) {}\n}","map":null,"metadata":{},"sourceType":"module"}