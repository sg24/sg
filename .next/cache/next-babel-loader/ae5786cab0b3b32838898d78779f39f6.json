{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from '../../../axios';\nvar publickey = true ? document.cookie.replace(/(?:(?:^|.*;\\s*)pushMsg\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\") : null;\n\nfunction displayConfirmNotification() {\n  return new _Promise(function (resolve, reject) {\n    if ('serviceWorker' in navigator) {\n      var options = {\n        body: 'You successfully subscribed to Slodge24 Notification service!',\n        icon: '/icons/sg-icon-96x96.png',\n        dir: 'ltr',\n        lang: 'en-US',\n        vibrate: [200, 100, 200, 100, 200, 100, 200],\n        requireInteraction: true,\n        badge: '/icons/sg-icon-96x96.png',\n        tag: 'confirm-notification',\n        renotify: true,\n        actions: [{\n          action: 'confirm',\n          title: 'Okay'\n        }, {\n          action: 'cancel',\n          title: 'Cancel'\n        }]\n      };\n      navigator.serviceWorker.ready.then(function (swreg) {\n        swreg.showNotification('Successfully subscribed!', options);\n        resolve();\n      });\n    } else {\n      reject();\n    }\n  });\n}\n\nfunction configurePushSub() {\n  return new _Promise(function (resolve, reject) {\n    if (!('serviceWorker' in navigator)) {\n      return;\n    }\n\n    var reg;\n    navigator.serviceWorker.ready.then(function (swreg) {\n      reg = swreg;\n      return swreg.pushManager.getSubscription();\n    }).then(function (sub) {\n      if (sub === null) {\n        var vapidPublicKey = publickey;\n        var convertedVapidPublicKey = urlBase64ToUint8Array(vapidPublicKey);\n        return reg.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: convertedVapidPublicKey\n        });\n      } else {\n        return sub;\n      }\n    }).then(function (newSub) {\n      var sub = _JSON$stringify(newSub);\n\n      return axios.post('/users', null, {\n        headers: {\n          'data-categ': \"subscribe==\".concat(sub)\n        }\n      });\n    }).then(function (res) {\n      if (res.status === 200) {\n        displayConfirmNotification().then(function () {\n          resolve();\n        });\n      }\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n}\n\nexport function requestPermission() {\n  return new _Promise(function (resolve, reject) {\n    Notification.requestPermission(function (result) {\n      if (result !== 'granted') {\n        reject(result);\n      } else {\n        configurePushSub().then(function () {\n          resolve();\n        });\n      }\n    });\n  });\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n  var rawData = window.atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}","map":null,"metadata":{},"sourceType":"module"}