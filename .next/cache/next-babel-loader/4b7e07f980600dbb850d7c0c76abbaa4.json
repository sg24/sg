{"ast":null,"code":"import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './react/index/index.css';\nimport auth from './react/index/store/reducers/auth';\nimport cnt from './react/index/store/reducers/model';\nimport filter from './react/index/store/reducers/filter';\nimport share from './react/index/store/reducers/share';\nimport tags from './react/index/store/reducers/tags';\nimport trend from './react/index/store/reducers/trend';\nimport setQue from './react/index/store/reducers/setQue';\nimport conv from './react/index/store/reducers/conv';\nimport header from './react/index/store/reducers/header';\nimport main from './react/index/store/reducers/main';\nfalse ? require('pepjs') : null;\nimport { rootSaga } from './react/index/store/sagas/index';\n\nconst bindMiddleware = middleware => {\n  if (false) {// const { composeWithDevTools } = require('redux-devtools-extension')\n    // return composeWithDevTools(applyMiddleware(...middleware))\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const rootReducers = combineReducers({\n    auth,\n    cnt,\n    filter,\n    share: share,\n    tags: tags,\n    trd: trend,\n    setQue: setQue,\n    conv,\n    header,\n    main\n  });\n  const store = createStore(rootReducers, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}