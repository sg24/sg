{"ast":null,"code":"import { takeEvery, all, takeLatest } from 'redux-saga/effects';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport { checkAuthInitSaga } from './auth';\nimport { fetchCntInitSaga, changeFavSaga, changeCntInitSaga } from './model';\nimport { fetchCntCategInitSaga, filterContentInitSaga } from './filter';\nimport { fetchUsersInitSaga, filterUserInitSaga, filterUserSelectInitSaga, shareUserInitSaga } from './share';\nimport { fetchTagsInitSaga } from './tags';\nimport { fetchTrdInitSaga } from './trend';\nimport { fetchCategInitSaga } from './setQue';\nimport { fetchConvInitSaga } from './conv';\nimport { fetchNotifyInitSaga, changeFavNotifySaga, fetchNavlistInitSaga, fetchNotifyActiveInitSaga, defaultNotifyActiveInitSaga, headerFilterInitSaga } from './header';\nimport { fetchPtActiveInitSaga, fetchQueActiveInitSaga, fetchCntActiveInitSaga, fetchShareActiveInitSaga, fetchShareCntActiveInitSaga, fetchReqActiveInitSaga, resetActiveInitSaga } from './main';\nexport function* watchAuth() {\n  yield all([takeEvery(actionTypes.CHECK_AUTH_INIT, checkAuthInitSaga)]);\n}\nexport function* watchCnt() {\n  yield all([takeLatest(actionTypes.FETCH_CNT_INIT, fetchCntInitSaga), takeEvery(actionTypes.CHANGE_FAVORITE_INIT, changeFavSaga), takeLatest(actionTypes.CHANGE_CNT_INIT, changeCntInitSaga)]);\n}\nexport function* watchFilter() {\n  yield all([takeEvery(actionTypes.FETCH_CNTCATEG_INIT, fetchCntCategInitSaga), takeEvery(actionTypes.FILTER_CONTENT_INIT, filterContentInitSaga)]);\n}\nexport function* watchShare() {\n  yield all([takeEvery(actionTypes.FETCH_USERS_INIT, fetchUsersInitSaga), takeEvery(actionTypes.FILTER_USER_INIT, filterUserInitSaga), takeEvery(actionTypes.FILTER_USER_SELECT_INIT, filterUserSelectInitSaga), takeEvery(actionTypes.SHARE_USER_INIT, shareUserInitSaga)]);\n}\nexport function* watchTags() {\n  yield takeEvery(actionTypes.FETCH_TAGS_INIT, fetchTagsInitSaga);\n}\nexport function* watchTrd() {\n  yield all([takeEvery(actionTypes.FETCH_TRD_INIT, fetchTrdInitSaga)]);\n}\nexport function* watchSetQue() {\n  yield takeEvery(actionTypes.FETCH_CATEG_INIT, fetchCategInitSaga);\n}\nexport function* watchConv() {\n  yield takeEvery(actionTypes.FETCH_CONV_INIT, fetchConvInitSaga);\n}\nexport function* watchHeader() {\n  yield all([takeEvery(actionTypes.FETCH_NOTIFY_INIT, fetchNotifyInitSaga), takeEvery(actionTypes.CHANGE_FAVORITE_NOTIFY_INIT, changeFavNotifySaga), takeEvery(actionTypes.FETCH_NAVLIST_INIT, fetchNavlistInitSaga), takeEvery(actionTypes.FETCH_NOTIFY_ACTIVE_INIT, fetchNotifyActiveInitSaga), takeEvery(actionTypes.DEFAULT_NOTIFYACTIVE_INIT, defaultNotifyActiveInitSaga), takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga), takeEvery(actionTypes.HEADER_FILTER_INIT, headerFilterInitSaga)]);\n}\nexport function* watchMain() {\n  yield all([takeEvery(actionTypes.FETCH_PT_ACTIVE_INIT, fetchPtActiveInitSaga), takeEvery(actionTypes.FETCH_QUE_ACTIVE_INIT, fetchQueActiveInitSaga), takeEvery(actionTypes.FETCH_CNT_ACTIVE_INIT, fetchCntActiveInitSaga), takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga), takeEvery(actionTypes.FETCH_SHARECNT_ACTIVE_INIT, fetchShareCntActiveInitSaga), takeEvery(actionTypes.FETCH_REQ_ACTIVE_INIT, fetchReqActiveInitSaga), takeEvery(actionTypes.RESET_ACTIVE_INIT, resetActiveInitSaga)]);\n}\nexport function* rootSaga() {\n  yield all([watchAuth(), watchCnt(), watchFilter(), watchShare(), watchTags(), watchTrd(), watchSetQue(), watchHeader(), watchConv(), watchMain()]);\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/index.js"],"names":["takeEvery","all","takeLatest","actionTypes","checkAuthInitSaga","fetchCntInitSaga","changeFavSaga","changeCntInitSaga","fetchCntCategInitSaga","filterContentInitSaga","fetchUsersInitSaga","filterUserInitSaga","filterUserSelectInitSaga","shareUserInitSaga","fetchTagsInitSaga","fetchTrdInitSaga","fetchCategInitSaga","fetchConvInitSaga","fetchNotifyInitSaga","changeFavNotifySaga","fetchNavlistInitSaga","fetchNotifyActiveInitSaga","defaultNotifyActiveInitSaga","headerFilterInitSaga","fetchPtActiveInitSaga","fetchQueActiveInitSaga","fetchCntActiveInitSaga","fetchShareActiveInitSaga","fetchShareCntActiveInitSaga","fetchReqActiveInitSaga","resetActiveInitSaga","watchAuth","CHECK_AUTH_INIT","watchCnt","FETCH_CNT_INIT","CHANGE_FAVORITE_INIT","CHANGE_CNT_INIT","watchFilter","FETCH_CNTCATEG_INIT","FILTER_CONTENT_INIT","watchShare","FETCH_USERS_INIT","FILTER_USER_INIT","FILTER_USER_SELECT_INIT","SHARE_USER_INIT","watchTags","FETCH_TAGS_INIT","watchTrd","FETCH_TRD_INIT","watchSetQue","FETCH_CATEG_INIT","watchConv","FETCH_CONV_INIT","watchHeader","FETCH_NOTIFY_INIT","CHANGE_FAVORITE_NOTIFY_INIT","FETCH_NAVLIST_INIT","FETCH_NOTIFY_ACTIVE_INIT","DEFAULT_NOTIFYACTIVE_INIT","FETCH_SHARE_ACTIVE_INIT","HEADER_FILTER_INIT","watchMain","FETCH_PT_ACTIVE_INIT","FETCH_QUE_ACTIVE_INIT","FETCH_CNT_ACTIVE_INIT","FETCH_SHARECNT_ACTIVE_INIT","FETCH_REQ_ACTIVE_INIT","RESET_ACTIVE_INIT","rootSaga"],"mappings":"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","sourcesContent":["import { takeEvery, all, takeLatest } from 'redux-saga/effects';\r\n\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport { checkAuthInitSaga } from './auth';\r\nimport { fetchCntInitSaga, changeFavSaga, changeCntInitSaga } from './model';\r\nimport { fetchCntCategInitSaga, filterContentInitSaga } from './filter';\r\nimport { fetchUsersInitSaga, filterUserInitSaga, filterUserSelectInitSaga, shareUserInitSaga } from './share';\r\nimport { fetchTagsInitSaga } from './tags';\r\nimport { fetchTrdInitSaga } from './trend';\r\nimport { fetchCategInitSaga } from './setQue';\r\nimport { fetchConvInitSaga } from './conv';\r\nimport { fetchNotifyInitSaga, \r\n            changeFavNotifySaga, \r\n            fetchNavlistInitSaga, \r\n            fetchNotifyActiveInitSaga,\r\n            defaultNotifyActiveInitSaga,\r\n            headerFilterInitSaga } from './header';\r\nimport { fetchPtActiveInitSaga,\r\n        fetchQueActiveInitSaga,\r\n        fetchCntActiveInitSaga,  \r\n         fetchShareActiveInitSaga,\r\n         fetchShareCntActiveInitSaga,\r\n         fetchReqActiveInitSaga, \r\n         resetActiveInitSaga} from './main';\r\n\r\nexport function* watchAuth() {\r\n    yield all([\r\n        takeEvery(actionTypes.CHECK_AUTH_INIT, checkAuthInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchCnt() {\r\n    yield all([\r\n        takeLatest(actionTypes.FETCH_CNT_INIT, fetchCntInitSaga),\r\n        takeEvery(actionTypes.CHANGE_FAVORITE_INIT, changeFavSaga),\r\n        takeLatest(actionTypes.CHANGE_CNT_INIT, changeCntInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchFilter() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_CNTCATEG_INIT, fetchCntCategInitSaga),\r\n        takeEvery(actionTypes.FILTER_CONTENT_INIT, filterContentInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchShare() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_USERS_INIT, fetchUsersInitSaga),\r\n        takeEvery(actionTypes.FILTER_USER_INIT, filterUserInitSaga),\r\n        takeEvery(actionTypes.FILTER_USER_SELECT_INIT, filterUserSelectInitSaga),\r\n        takeEvery(actionTypes.SHARE_USER_INIT, shareUserInitSaga),\r\n    ])\r\n\r\n}\r\n\r\nexport function* watchTags() {\r\n    yield takeEvery(actionTypes.FETCH_TAGS_INIT, fetchTagsInitSaga)\r\n}\r\n\r\nexport function* watchTrd() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_TRD_INIT, fetchTrdInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* watchSetQue() {\r\n    yield takeEvery(actionTypes.FETCH_CATEG_INIT, fetchCategInitSaga)\r\n}\r\n\r\nexport function* watchConv() {\r\n    yield takeEvery(actionTypes.FETCH_CONV_INIT, fetchConvInitSaga)\r\n}\r\n\r\nexport function* watchHeader() {\r\n    yield all([\r\n       takeEvery(actionTypes.FETCH_NOTIFY_INIT, fetchNotifyInitSaga),\r\n       takeEvery(actionTypes.CHANGE_FAVORITE_NOTIFY_INIT, changeFavNotifySaga),\r\n       takeEvery(actionTypes.FETCH_NAVLIST_INIT, fetchNavlistInitSaga),\r\n       takeEvery(actionTypes.FETCH_NOTIFY_ACTIVE_INIT, fetchNotifyActiveInitSaga),\r\n       takeEvery(actionTypes.DEFAULT_NOTIFYACTIVE_INIT, defaultNotifyActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga),\r\n       takeEvery(actionTypes.HEADER_FILTER_INIT, headerFilterInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* watchMain() {\r\n    yield all([\r\n       takeEvery(actionTypes.FETCH_PT_ACTIVE_INIT, fetchPtActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_QUE_ACTIVE_INIT, fetchQueActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_CNT_ACTIVE_INIT, fetchCntActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARECNT_ACTIVE_INIT, fetchShareCntActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_REQ_ACTIVE_INIT, fetchReqActiveInitSaga),\r\n       takeEvery(actionTypes.RESET_ACTIVE_INIT, resetActiveInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        watchAuth(),\r\n        watchCnt(),\r\n        watchFilter(),\r\n        watchShare(),\r\n        watchTags(),\r\n        watchTrd(),\r\n        watchSetQue(),\r\n        watchHeader(),\r\n        watchConv(),\r\n        watchMain()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}