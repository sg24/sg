{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as actions from '../../../store/actions/index';\n\nclass NavigationInput extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      isExpand: false\n    });\n\n    _defineProperty(this, \"expandFormHandler\", () => {\n      this.props.onFormExpand();\n    });\n\n    _defineProperty(this, \"filterContentHandler\", event => {\n      this.setState({\n        value: event.target.value\n      });\n      let inputElem = window.document.querySelector('.site-header__form');\n      let inputLastElem = window.document.querySelector('.site-header__user');\n      let updateInputLastElem = window.innerWidth - inputLastElem.offsetLeft - 30;\n      let updateInputElem = inputElem.offsetLeft;\n\n      if (window.innerWidth > 1200) {\n        updateInputElem = 220;\n        updateInputLastElem = 100;\n      }\n\n      this.props.onHeaderFilter(event.target.value, updateInputElem, updateInputLastElem);\n\n      if (!this.state.isExpand) {\n        this.setState({\n          isExpand: true\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    if (!this.props.expand && this.state.isExpand) {\n      this.setState({\n        value: '',\n        isExpand: false\n      });\n    }\n  }\n\n  render() {\n    let formClass = [\"site-header__form\"];\n\n    if (this.props.expand) {\n      formClass.push(\"site-header__form--expand\");\n    }\n\n    return __jsx(\"form\", {\n      className: formClass.join(' ')\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"site-header__form--input\",\n      autoComplete: \"on\",\n      onClick: this.expandFormHandler,\n      onChange: this.filterContentHandler,\n      value: this.state.value\n    }), __jsx(\"div\", {\n      className: \"site-header__form--search\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'search'],\n      className: \"icon icon__site-header--search\"\n    })));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    expand: state.header.expand\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormExpand: () => dispatch(actions.headerFormExpand()),\n    onHeaderFilter: (filterCnt, filterPos, filterLastpos) => dispatch(actions.headerFilterInit(filterCnt, filterPos, filterLastpos))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationInput);","map":null,"metadata":{},"sourceType":"module"}