{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar initialState = {\n  cntCateg: null,\n  filterStart: false,\n  totalFound: null,\n  filterErr: null\n};\n\nvar fetchCntCateg = function fetchCntCateg(state, action) {\n  return updateObject(state, {\n    cntCateg: action.categ\n  });\n};\n\nvar filterContentStart = function filterContentStart(state, action) {\n  return updateObject(state, {\n    filterStart: true,\n    filterErr: null\n  });\n};\n\nvar filterContentFail = function filterContentFail(state, action) {\n  return updateObject(state, {\n    filterErr: action.err\n  });\n};\n\nvar filterContent = function filterContent(state, action) {\n  return updateObject(state, {\n    totalFound: action.totalFound\n  });\n};\n\nvar resetFilter = function resetFilter(state, action) {\n  return updateObject(state, {\n    totalFound: null,\n    filterErr: null\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_CNTCATEG:\n      return fetchCntCateg(state, action);\n\n    case actionTypes.FILTER_CONTENT_START:\n      return filterContentStart(state, action);\n\n    case actionTypes.FILTER_CONTENT_FAIL:\n      return filterContentFail(state, action);\n\n    case actionTypes.FILTER_CONTENT:\n      return filterContent(state, action);\n\n    case actionTypes.RESET_FILTER:\n      return resetFilter(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/reducers/filter.js"],"names":["actionTypes","updateObject","initialState","cntCateg","filterStart","totalFound","filterErr","fetchCntCateg","state","action","categ","filterContentStart","filterContentFail","err","filterContent","resetFilter","reducer","type","FETCH_CNTCATEG","FILTER_CONTENT_START","FILTER_CONTENT_FAIL","FILTER_CONTENT","RESET_FILTER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,WAAW,EAAE,KAFI;AAGjBC,EAAAA,UAAU,EAAE,IAHK;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACL,IAAAA,QAAQ,EAAEM,MAAM,CAACC;AAAlB,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACH,KAAD,EAAQC,MAAR,EAAmB;AAC1C,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACJ,IAAAA,WAAW,EAAE,IAAd;AAAoBE,IAAAA,SAAS,EAAE;AAA/B,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,KAAD,EAAQC,MAAR,EAAmB;AACzC,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACF,IAAAA,SAAS,EAAEG,MAAM,CAACI;AAAnB,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACN,KAAD,EAAQC,MAAR,EAAmB;AACrC,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACH,IAAAA,UAAU,EAAEI,MAAM,CAACJ;AAApB,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMU,WAAW,GAAI,SAAfA,WAAe,CAACP,KAAD,EAAQC,MAAR,EAAmB;AACpC,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAACH,IAAAA,UAAU,EAAE,IAAb;AAAmBC,IAAAA,SAAS,EAAE;AAA9B,GAAR,CAAnB;AACH,CAFD;;AAIA,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCR,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC9C,UAAOA,MAAM,CAACQ,IAAd;AACI,SAAKjB,WAAW,CAACkB,cAAjB;AACI,aAAOX,aAAa,CAACC,KAAD,EAAQC,MAAR,CAApB;;AACJ,SAAKT,WAAW,CAACmB,oBAAjB;AACI,aAAOR,kBAAkB,CAACH,KAAD,EAAQC,MAAR,CAAzB;;AACJ,SAAKT,WAAW,CAACoB,mBAAjB;AACI,aAAOR,iBAAiB,CAACJ,KAAD,EAAQC,MAAR,CAAxB;;AACJ,SAAKT,WAAW,CAACqB,cAAjB;AACI,aAAOP,aAAa,CAACN,KAAD,EAAQC,MAAR,CAApB;;AACJ,SAAKT,WAAW,CAACsB,YAAjB;AACI,aAAOP,WAAW,CAACP,KAAD,EAAQC,MAAR,CAAlB;;AACJ;AAAS,aAAOD,KAAP;AAXb;AAaH,CAdD;;AAgBA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    cntCateg: null,\r\n    filterStart: false,\r\n    totalFound: null,\r\n    filterErr: null\r\n}\r\n\r\nconst fetchCntCateg = (state, action) => {\r\n    return updateObject(state, {cntCateg: action.categ})\r\n};\r\n\r\nconst filterContentStart = (state, action) => {\r\n    return updateObject(state, {filterStart: true, filterErr: null})\r\n};\r\n\r\nconst filterContentFail = (state, action) => {\r\n    return updateObject(state, {filterErr: action.err})\r\n};\r\n\r\nconst filterContent = (state, action) => {\r\n    return updateObject(state, {totalFound: action.totalFound})\r\n};\r\n\r\nconst resetFilter  = (state, action) => {\r\n    return updateObject(state, {totalFound: null, filterErr: null})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.FETCH_CNTCATEG:\r\n            return fetchCntCateg(state, action);\r\n        case actionTypes.FILTER_CONTENT_START:\r\n            return filterContentStart(state, action);\r\n        case actionTypes.FILTER_CONTENT_FAIL:\r\n            return filterContentFail(state, action);\r\n        case actionTypes.FILTER_CONTENT:\r\n            return filterContent(state, action);\r\n        case actionTypes.RESET_FILTER:\r\n            return resetFilter(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}