{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAuth),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchCnt),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFilter),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchShare),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchTags),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchTrd),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSetQue),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchConv),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchHeader),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchMain),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeEvery, all, takeLatest } from 'redux-saga/effects';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport { checkAuthInitSaga } from './auth';\nimport { fetchCntInitSaga, changeFavSaga, changeCntInitSaga } from './model';\nimport { fetchCntCategInitSaga, filterContentInitSaga } from './filter';\nimport { fetchUsersInitSaga, filterUserInitSaga, filterUserSelectInitSaga, shareUserInitSaga } from './share';\nimport { fetchTagsInitSaga } from './tags';\nimport { fetchTrdInitSaga } from './trend';\nimport { fetchCategInitSaga } from './setQue';\nimport { fetchConvInitSaga } from './conv';\nimport { fetchNotifyInitSaga, changeFavNotifySaga, fetchNavlistInitSaga, fetchNotifyActiveInitSaga, defaultNotifyActiveInitSaga, headerFilterInitSaga } from './header';\nimport { fetchPtActiveInitSaga, fetchQueActiveInitSaga, fetchCntActiveInitSaga, fetchShareActiveInitSaga, fetchShareCntActiveInitSaga, fetchReqActiveInitSaga, resetActiveInitSaga } from './main';\nexport function watchAuth() {\n  return _regeneratorRuntime.wrap(function watchAuth$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([takeEvery(actionTypes.CHECK_AUTH_INIT, checkAuthInitSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function watchCnt() {\n  return _regeneratorRuntime.wrap(function watchCnt$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeLatest(actionTypes.FETCH_CNT_INIT, fetchCntInitSaga), takeEvery(actionTypes.CHANGE_FAVORITE_INIT, changeFavSaga), takeLatest(actionTypes.CHANGE_CNT_INIT, changeCntInitSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function watchFilter() {\n  return _regeneratorRuntime.wrap(function watchFilter$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.FETCH_CNTCATEG_INIT, fetchCntCategInitSaga), takeEvery(actionTypes.FILTER_CONTENT_INIT, filterContentInitSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function watchShare() {\n  return _regeneratorRuntime.wrap(function watchShare$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeEvery(actionTypes.FETCH_USERS_INIT, fetchUsersInitSaga), takeEvery(actionTypes.FILTER_USER_INIT, filterUserInitSaga), takeEvery(actionTypes.FILTER_USER_SELECT_INIT, filterUserSelectInitSaga), takeEvery(actionTypes.SHARE_USER_INIT, shareUserInitSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function watchTags() {\n  return _regeneratorRuntime.wrap(function watchTags$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(actionTypes.FETCH_TAGS_INIT, fetchTagsInitSaga);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function watchTrd() {\n  return _regeneratorRuntime.wrap(function watchTrd$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeEvery(actionTypes.FETCH_TRD_INIT, fetchTrdInitSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function watchSetQue() {\n  return _regeneratorRuntime.wrap(function watchSetQue$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeEvery(actionTypes.FETCH_CATEG_INIT, fetchCategInitSaga);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport function watchConv() {\n  return _regeneratorRuntime.wrap(function watchConv$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(actionTypes.FETCH_CONV_INIT, fetchConvInitSaga);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function watchHeader() {\n  return _regeneratorRuntime.wrap(function watchHeader$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([takeEvery(actionTypes.FETCH_NOTIFY_INIT, fetchNotifyInitSaga), takeEvery(actionTypes.CHANGE_FAVORITE_NOTIFY_INIT, changeFavNotifySaga), takeEvery(actionTypes.FETCH_NAVLIST_INIT, fetchNavlistInitSaga), takeEvery(actionTypes.FETCH_NOTIFY_ACTIVE_INIT, fetchNotifyActiveInitSaga), takeEvery(actionTypes.DEFAULT_NOTIFYACTIVE_INIT, defaultNotifyActiveInitSaga), takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga), takeEvery(actionTypes.HEADER_FILTER_INIT, headerFilterInitSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nexport function watchMain() {\n  return _regeneratorRuntime.wrap(function watchMain$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return all([takeEvery(actionTypes.FETCH_PT_ACTIVE_INIT, fetchPtActiveInitSaga), takeEvery(actionTypes.FETCH_QUE_ACTIVE_INIT, fetchQueActiveInitSaga), takeEvery(actionTypes.FETCH_CNT_ACTIVE_INIT, fetchCntActiveInitSaga), takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga), takeEvery(actionTypes.FETCH_SHARECNT_ACTIVE_INIT, fetchShareCntActiveInitSaga), takeEvery(actionTypes.FETCH_REQ_ACTIVE_INIT, fetchReqActiveInitSaga), takeEvery(actionTypes.RESET_ACTIVE_INIT, resetActiveInitSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([watchAuth(), watchCnt(), watchFilter(), watchShare(), watchTags(), watchTrd(), watchSetQue(), watchHeader(), watchConv(), watchMain()]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/index.js"],"names":["watchAuth","watchCnt","watchFilter","watchShare","watchTags","watchTrd","watchSetQue","watchConv","watchHeader","watchMain","rootSaga","takeEvery","all","takeLatest","actionTypes","checkAuthInitSaga","fetchCntInitSaga","changeFavSaga","changeCntInitSaga","fetchCntCategInitSaga","filterContentInitSaga","fetchUsersInitSaga","filterUserInitSaga","filterUserSelectInitSaga","shareUserInitSaga","fetchTagsInitSaga","fetchTrdInitSaga","fetchCategInitSaga","fetchConvInitSaga","fetchNotifyInitSaga","changeFavNotifySaga","fetchNavlistInitSaga","fetchNotifyActiveInitSaga","defaultNotifyActiveInitSaga","headerFilterInitSaga","fetchPtActiveInitSaga","fetchQueActiveInitSaga","fetchCntActiveInitSaga","fetchShareActiveInitSaga","fetchShareCntActiveInitSaga","fetchReqActiveInitSaga","resetActiveInitSaga","CHECK_AUTH_INIT","FETCH_CNT_INIT","CHANGE_FAVORITE_INIT","CHANGE_CNT_INIT","FETCH_CNTCATEG_INIT","FILTER_CONTENT_INIT","FETCH_USERS_INIT","FILTER_USER_INIT","FILTER_USER_SELECT_INIT","SHARE_USER_INIT","FETCH_TAGS_INIT","FETCH_TRD_INIT","FETCH_CATEG_INIT","FETCH_CONV_INIT","FETCH_NOTIFY_INIT","CHANGE_FAVORITE_NOTIFY_INIT","FETCH_NAVLIST_INIT","FETCH_NOTIFY_ACTIVE_INIT","DEFAULT_NOTIFYACTIVE_INIT","FETCH_SHARE_ACTIVE_INIT","HEADER_FILTER_INIT","FETCH_PT_ACTIVE_INIT","FETCH_QUE_ACTIVE_INIT","FETCH_CNT_ACTIVE_INIT","FETCH_SHARECNT_ACTIVE_INIT","FETCH_REQ_ACTIVE_INIT","RESET_ACTIVE_INIT"],"mappings":"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","sourcesContent":["import { takeEvery, all, takeLatest } from 'redux-saga/effects';\r\n\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport { checkAuthInitSaga } from './auth';\r\nimport { fetchCntInitSaga, changeFavSaga, changeCntInitSaga } from './model';\r\nimport { fetchCntCategInitSaga, filterContentInitSaga } from './filter';\r\nimport { fetchUsersInitSaga, filterUserInitSaga, filterUserSelectInitSaga, shareUserInitSaga } from './share';\r\nimport { fetchTagsInitSaga } from './tags';\r\nimport { fetchTrdInitSaga } from './trend';\r\nimport { fetchCategInitSaga } from './setQue';\r\nimport { fetchConvInitSaga } from './conv';\r\nimport { fetchNotifyInitSaga, \r\n            changeFavNotifySaga, \r\n            fetchNavlistInitSaga, \r\n            fetchNotifyActiveInitSaga,\r\n            defaultNotifyActiveInitSaga,\r\n            headerFilterInitSaga } from './header';\r\nimport { fetchPtActiveInitSaga,\r\n        fetchQueActiveInitSaga,\r\n        fetchCntActiveInitSaga,  \r\n         fetchShareActiveInitSaga,\r\n         fetchShareCntActiveInitSaga,\r\n         fetchReqActiveInitSaga, \r\n         resetActiveInitSaga} from './main';\r\n\r\nexport function* watchAuth() {\r\n    yield all([\r\n        takeEvery(actionTypes.CHECK_AUTH_INIT, checkAuthInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchCnt() {\r\n    yield all([\r\n        takeLatest(actionTypes.FETCH_CNT_INIT, fetchCntInitSaga),\r\n        takeEvery(actionTypes.CHANGE_FAVORITE_INIT, changeFavSaga),\r\n        takeLatest(actionTypes.CHANGE_CNT_INIT, changeCntInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchFilter() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_CNTCATEG_INIT, fetchCntCategInitSaga),\r\n        takeEvery(actionTypes.FILTER_CONTENT_INIT, filterContentInitSaga)\r\n    ])\r\n} \r\n\r\nexport function* watchShare() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_USERS_INIT, fetchUsersInitSaga),\r\n        takeEvery(actionTypes.FILTER_USER_INIT, filterUserInitSaga),\r\n        takeEvery(actionTypes.FILTER_USER_SELECT_INIT, filterUserSelectInitSaga),\r\n        takeEvery(actionTypes.SHARE_USER_INIT, shareUserInitSaga),\r\n    ])\r\n\r\n}\r\n\r\nexport function* watchTags() {\r\n    yield takeEvery(actionTypes.FETCH_TAGS_INIT, fetchTagsInitSaga)\r\n}\r\n\r\nexport function* watchTrd() {\r\n    yield all([\r\n        takeEvery(actionTypes.FETCH_TRD_INIT, fetchTrdInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* watchSetQue() {\r\n    yield takeEvery(actionTypes.FETCH_CATEG_INIT, fetchCategInitSaga)\r\n}\r\n\r\nexport function* watchConv() {\r\n    yield takeEvery(actionTypes.FETCH_CONV_INIT, fetchConvInitSaga)\r\n}\r\n\r\nexport function* watchHeader() {\r\n    yield all([\r\n       takeEvery(actionTypes.FETCH_NOTIFY_INIT, fetchNotifyInitSaga),\r\n       takeEvery(actionTypes.CHANGE_FAVORITE_NOTIFY_INIT, changeFavNotifySaga),\r\n       takeEvery(actionTypes.FETCH_NAVLIST_INIT, fetchNavlistInitSaga),\r\n       takeEvery(actionTypes.FETCH_NOTIFY_ACTIVE_INIT, fetchNotifyActiveInitSaga),\r\n       takeEvery(actionTypes.DEFAULT_NOTIFYACTIVE_INIT, defaultNotifyActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga),\r\n       takeEvery(actionTypes.HEADER_FILTER_INIT, headerFilterInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* watchMain() {\r\n    yield all([\r\n       takeEvery(actionTypes.FETCH_PT_ACTIVE_INIT, fetchPtActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_QUE_ACTIVE_INIT, fetchQueActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_CNT_ACTIVE_INIT, fetchCntActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_SHARECNT_ACTIVE_INIT, fetchShareCntActiveInitSaga),\r\n       takeEvery(actionTypes.FETCH_REQ_ACTIVE_INIT, fetchReqActiveInitSaga),\r\n       takeEvery(actionTypes.RESET_ACTIVE_INIT, resetActiveInitSaga)\r\n    ])\r\n}\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        watchAuth(),\r\n        watchCnt(),\r\n        watchFilter(),\r\n        watchShare(),\r\n        watchTags(),\r\n        watchTrd(),\r\n        watchSetQue(),\r\n        watchHeader(),\r\n        watchConv(),\r\n        watchMain()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}