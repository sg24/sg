{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as actions from '../../../store/actions/index';\n\nclass NavigationInput extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      isExpand: false\n    });\n\n    _defineProperty(this, \"expandFormHandler\", () => {\n      this.props.onFormExpand();\n    });\n\n    _defineProperty(this, \"filterContentHandler\", event => {\n      this.setState({\n        value: event.target.value\n      });\n      let inputElem = window.document.querySelector('.site-header__form');\n      let inputLastElem = window.document.querySelector('.site-header__user');\n      let updateInputLastElem = window.innerWidth - inputLastElem.offsetLeft - 30;\n      let updateInputElem = inputElem.offsetLeft;\n\n      if (window.innerWidth > 1200) {\n        updateInputElem = 220;\n        updateInputLastElem = 100;\n      }\n\n      this.props.onHeaderFilter(event.target.value, updateInputElem, updateInputLastElem);\n\n      if (!this.state.isExpand) {\n        this.setState({\n          isExpand: true\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    if (!this.props.expand && this.state.isExpand) {\n      this.setState({\n        value: '',\n        isExpand: false\n      });\n    }\n  }\n\n  render() {\n    let formClass = [\"site-header__form\"];\n\n    if (this.props.expand) {\n      formClass.push(\"site-header__form--expand\");\n    }\n\n    return __jsx(\"form\", {\n      className: formClass.join(' ')\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"site-header__form--input\",\n      autoComplete: \"on\",\n      onClick: this.expandFormHandler,\n      onChange: this.filterContentHandler,\n      value: this.state.value\n    }), __jsx(\"div\", {\n      className: \"site-header__form--search\"\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'search'],\n      className: \"icon icon__site-header--search\"\n    })));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    expand: state.header.expand\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFormExpand: () => dispatch(actions.headerFormExpand()),\n    onHeaderFilter: (filterCnt, filterPos, filterLastpos) => dispatch(actions.headerFilterInit(filterCnt, filterPos, filterLastpos))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationInput);","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/containers/Header/NavigationInput/NavigationInput.js"],"names":["React","Component","connect","FontAwesomeIcon","actions","NavigationInput","value","isExpand","props","onFormExpand","event","setState","target","inputElem","window","document","querySelector","inputLastElem","updateInputLastElem","innerWidth","offsetLeft","updateInputElem","onHeaderFilter","state","componentDidUpdate","expand","render","formClass","push","join","expandFormHandler","filterContentHandler","mapStateToProps","header","mapDispatchToProps","dispatch","headerFormExpand","filterCnt","filterPos","filterLastpos","headerFilterInit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass NavigationInput extends Component {\r\n    state = {\r\n        value: '',\r\n        isExpand: false\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.expand && this.state.isExpand) {\r\n            this.setState({value: '', isExpand: false})\r\n        }\r\n    }\r\n\r\n    expandFormHandler = () => {\r\n        this.props.onFormExpand();\r\n    }\r\n\r\n    filterContentHandler = (event) => {\r\n        this.setState({value: event.target.value});\r\n        let inputElem = window.document.querySelector('.site-header__form');\r\n        let inputLastElem = window.document.querySelector('.site-header__user');\r\n        let updateInputLastElem = window.innerWidth - inputLastElem.offsetLeft - 30;\r\n        let updateInputElem = inputElem.offsetLeft;\r\n        if (window.innerWidth > 1200) {\r\n            updateInputElem = 220;\r\n            updateInputLastElem = 100; \r\n        }\r\n        this.props.onHeaderFilter(event.target.value, updateInputElem, updateInputLastElem);\r\n        if (!this.state.isExpand) {\r\n            this.setState({isExpand: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let formClass = [\"site-header__form\"];\r\n\r\n        if (this.props.expand) {\r\n            formClass.push(\"site-header__form--expand\")\r\n        }\r\n\r\n        return (\r\n            <form className={formClass.join(' ')}>\r\n                <input type=\"text\" \r\n                    className=\"site-header__form--input\" \r\n                    autoComplete=\"on\" \r\n                    onClick={this.expandFormHandler}\r\n                    onChange={this.filterContentHandler}\r\n                    value={this.state.value}/>\r\n                <div className=\"site-header__form--search\">\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'search']} \r\n                        className=\"icon icon__site-header--search\" />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        expand: state.header.expand\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFormExpand: () => dispatch(actions.headerFormExpand()),\r\n        onHeaderFilter: (filterCnt, filterPos, filterLastpos) => dispatch(actions.headerFilterInit(filterCnt, filterPos, filterLastpos))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationInput);"]},"metadata":{},"sourceType":"module"}