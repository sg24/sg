{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConvItems from '../../../../components/Main/Nav/ConvItems/ConvItems';\nimport * as actions from '../../../../store/actions/index';\nimport { updateObject } from '../../../../shared/utility';\n\nvar Conversation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Conversation, _Component);\n\n  function Conversation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Conversation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Conversation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      convOpt: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showUserOptHandler\", function (index) {\n      if (_this.state.convOpt && _this.state.convOpt.index === index) {\n        _this.setState(function (prevState, props) {\n          return {\n            convOpt: updateObject(prevState.convOpt, {\n              visible: !prevState.convOpt.visible\n            })\n          };\n        });\n\n        return;\n      }\n\n      var newConvOpt = {\n        visible: true,\n        index: index\n      };\n\n      _this.setState({\n        convOpt: newConvOpt\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Conversation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchConv();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var convs = null;\n\n      if (this.props.conv) {\n        convs = __jsx(ConvItems, {\n          convs: this.props.conv,\n          userOpt: this.showUserOptHandler,\n          showConvOpt: this.state.convOpt\n        });\n      }\n\n      return __jsx(\"div\", {\n        className: \"reuse-conv\"\n      }, __jsx(\"div\", {\n        className: \"reuse-conv__title\"\n      }, __jsx(\"div\", {\n        className: \"reuse-conv__title--wrapper\"\n      }, __jsx(\"div\", null, __jsx(FontAwesomeIcon, {\n        icon: ['far', 'comment-dots'],\n        className: \"icon icon__reuse-conv--comment\"\n      })), \"Conversations\")), convs);\n    }\n  }]);\n\n  return Conversation;\n}(Component);\n\nvar mapStateToPros = function mapStateToPros(state) {\n  return {\n    conv: state.conv.conv\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchConv: function onFetchConv() {\n      return dispatch(actions.fetchConvInit());\n    }\n  };\n};\n\nexport default connect(mapStateToPros, mapDispatchToProps)(Conversation);","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/containers/SiteMain/MainNav/Conversation/Conversation.js"],"names":["React","Component","connect","FontAwesomeIcon","ConvItems","actions","updateObject","Conversation","convOpt","index","state","setState","prevState","props","visible","newConvOpt","onFetchConv","convs","conv","showUserOptHandler","mapStateToPros","mapDispatchToProps","dispatch","fetchConvInit"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,SAAP,MAAsB,qDAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;AACA,SAASC,YAAT,QAA6B,4BAA7B;;IAEMC,Y;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,OAAO,EAAE;AADL,K;;yEAQa,UAACC,KAAD,EAAW;AAC5B,UAAI,MAAKC,KAAL,CAAWF,OAAX,IAAsB,MAAKE,KAAL,CAAWF,OAAX,CAAmBC,KAAnB,KAA6BA,KAAvD,EAA8D;AAC1D,cAAKE,QAAL,CAAc,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AAChC,iBAAO;AACHL,YAAAA,OAAO,EAAEF,YAAY,CAACM,SAAS,CAACJ,OAAX,EAAoB;AAACM,cAAAA,OAAO,EAAE,CAACF,SAAS,CAACJ,OAAV,CAAkBM;AAA7B,aAApB;AADlB,WAAP;AAGH,SAJD;;AAKA;AACH;;AAED,UAAMC,UAAU,GAAG;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBL,QAAAA,KAAK,EAALA;AAAhB,OAAnB;;AACA,YAAKE,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAEO;AAAV,OAAd;AACH,K;;;;;;;wCAhBmB;AAChB,WAAKF,KAAL,CAAWG,WAAX;AACH;;;6BAgBQ;AACL,UAAIC,KAAK,GAAG,IAAZ;;AAEA,UAAI,KAAKJ,KAAL,CAAWK,IAAf,EAAqB;AACjBD,QAAAA,KAAK,GAAG,MAAC,SAAD;AACJ,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,IADd;AAEJ,UAAA,OAAO,EAAE,KAAKC,kBAFV;AAGJ,UAAA,WAAW,EAAE,KAAKT,KAAL,CAAWF;AAHpB,UAAR;AAIH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACA;AAAK,QAAA,SAAS,EAAC;AAAf,SACG;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,mBACK,MAAC,eAAD;AACI,QAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,cAAR,CADV;AAEI,QAAA,SAAS,EAAC;AAFd,QADL,CADJ,kBADH,CADA,EAWES,KAXF,CADJ;AAeH;;;;EAhDsBhB,S;;AAmD3B,IAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAAAV,KAAK,EAAI;AAC5B,SAAO;AACHQ,IAAAA,IAAI,EAAER,KAAK,CAACQ,IAAN,CAAWA;AADd,GAAP;AAGH,CAJD;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHN,IAAAA,WAAW,EAAE;AAAA,aAAMM,QAAQ,CAACjB,OAAO,CAACkB,aAAR,EAAD,CAAd;AAAA;AADV,GAAP;AAGH,CAJD;;AAMA,eAAerB,OAAO,CAACkB,cAAD,EAAiBC,kBAAjB,CAAP,CAA4Cd,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport ConvItems from '../../../../components/Main/Nav/ConvItems/ConvItems';\r\nimport * as actions from '../../../../store/actions/index';\r\nimport { updateObject } from '../../../../shared/utility';\r\n\r\nclass Conversation extends Component {\r\n    state = {\r\n        convOpt: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchConv();\r\n    }\r\n\r\n    showUserOptHandler = (index) => {\r\n        if (this.state.convOpt && this.state.convOpt.index === index) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    convOpt: updateObject(prevState.convOpt, {visible: !prevState.convOpt.visible})\r\n                }\r\n            });\r\n            return\r\n        }\r\n\r\n        const newConvOpt = {visible: true, index}\r\n        this.setState({convOpt: newConvOpt})\r\n    }\r\n\r\n    render() {\r\n        let convs = null;\r\n\r\n        if (this.props.conv) {\r\n            convs = <ConvItems \r\n                convs={this.props.conv}\r\n                userOpt={this.showUserOptHandler}\r\n                showConvOpt={this.state.convOpt}/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-conv\">\r\n            <div className=\"reuse-conv__title\">\r\n               <div className=\"reuse-conv__title--wrapper\">\r\n                   <div>\r\n                        <FontAwesomeIcon \r\n                            icon={['far', 'comment-dots']} \r\n                            className=\"icon icon__reuse-conv--comment\" /> \r\n                    </div> \r\n                    Conversations\r\n               </div>\r\n            </div>\r\n            { convs }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToPros = state => {\r\n    return {\r\n        conv: state.conv.conv\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchConv: () => dispatch(actions.fetchConvInit())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToPros, mapDispatchToProps)(Conversation);"]},"metadata":{},"sourceType":"module"}