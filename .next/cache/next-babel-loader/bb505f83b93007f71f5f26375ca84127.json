{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './NavigationList.css';\nimport * as actions from '../../../store/actions/index';\nimport NavigationLists from '../../../components/Navigation/NavigationLists/NavigationLists';\nimport Loader from '../../../components/UI/Loader/Loader';\nimport Aux from '../../../hoc/Auxs/Aux';\n\nclass NavigationList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      show: false,\n      showNavList: false,\n      showNavItm: false,\n      default: false,\n      category: null\n    });\n\n    _defineProperty(this, \"showNavTipHandler\", () => {\n      if (!this.state.showNavList) {\n        this.setState({\n          show: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"hidNavTipHandler\", () => {\n      this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(this, \"showNavListHandler\", () => {\n      this.props.onshowNavList();\n      this.setState((prevState, props) => {\n        return {\n          show: false,\n          default: false,\n          showNavList: prevState.showNavItm ? true : !prevState.showNavList,\n          showNavItm: false\n        };\n      });\n    });\n\n    _defineProperty(this, \"showNavItmHandler\", () => {\n      this.props.onshowNavList();\n      this.setState((prevState, props) => {\n        return {\n          showNavItm: true,\n          show: false,\n          default: false,\n          showNavList: prevState.showNavItm ? !prevState.showNavList : true\n        };\n      });\n    });\n\n    _defineProperty(this, \"fetchNavListHandler\", category => {\n      this.props.onFetchNavList(category);\n      this.setState({\n        category\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.showNavList && !this.state.default && this.props.hidNavList) {\n      this.setState({\n        default: true,\n        show: false,\n        showNavList: false\n      });\n    }\n  }\n\n  render() {\n    let navTipClass = [\"site-header__tool-tip site-header__tool-tip--nav\"];\n    let navClass = [\"site-header__menu--nav__opt\"];\n    let navList = null;\n    let navOptClass = [\"site-header__menu--nav__opt--det\"];\n\n    if (this.state.show) {\n      navTipClass.push(\"site-header__tool-tip--nav__visible\");\n    }\n\n    if (this.state.showNavList) {\n      navClass.push(\"site-header__menu--nav__opt--visible\");\n    }\n\n    if (this.state.showNavList && this.state.category) {\n      let navOptCateg = this.state.category === 'post' ? 'site-header__menu--nav__opt--det__pt' : null;\n      navOptCateg = this.state.category === 'question' ? 'site-header__menu--nav__opt--det__que' : navOptCateg;\n      navOptCateg = this.state.category === 'onlineque' ? 'site-header__menu--nav__opt--det__pwt' : navOptCateg;\n      navOptCateg = this.state.category === 'group' ? 'site-header__menu--nav__opt--det__grp' : navOptCateg;\n      navOptCateg = this.state.category === 'poet' ? 'site-header__menu--nav__opt--det__onlineque' : navOptCateg;\n      navOptClass.push(navOptCateg);\n      navList = this.props.navList ? __jsx(\"ul\", {\n        className: navOptClass.join(' ')\n      }, __jsx(NavigationLists, {\n        content: this.props.navList,\n        category: this.props.navListCateg\n      })) : __jsx(\"div\", {\n        className: `${navOptClass.join(' ')} site-header__menu--nav__opt--det__loading`\n      }, __jsx(Loader, null));\n    }\n\n    let navItm = __jsx(Aux, null, navList, __jsx(\"ul\", {\n      className: \"site-header__menu--nav__opt--itm\"\n    }, __jsx(\"li\", {\n      onMouseEnter: this.fetchNavListHandler.bind(this, 'post'),\n      className: this.state.category === 'post' ? 'active-header-nav' : null\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'newspaper'],\n      className: \"icon icon__site-header--nav__itm\"\n    }), \"News Feed\", __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'caret-right'],\n      className: \"icon icon__site-header--nav__angle\"\n    })), __jsx(\"li\", {\n      onMouseEnter: this.fetchNavListHandler.bind(this, 'question'),\n      className: this.state.category === 'question' ? 'active-header-nav' : null\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'question'],\n      className: \"icon icon__site-header--nav__itm\"\n    }), \"Questions\", __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'caret-right'],\n      className: \"icon icon__site-header--nav__angle\"\n    })), __jsx(\"li\", {\n      onMouseEnter: this.fetchNavListHandler.bind(this, 'poet'),\n      className: this.state.category === 'poet' ? 'active-header-nav' : null\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'book'],\n      className: \"icon icon__site-header--nav__itm\"\n    }), \"Writers\", __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'caret-right'],\n      className: \"icon icon__site-header--nav__angle\"\n    }))));\n\n    if (this.state.showNavItm) {\n      navItm = __jsx(\"ul\", {\n        className: \"site-header__menu--nav__opt--itm__sm-categ--cnt\"\n      }, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/post\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'newspaper'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"News Feed\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/question\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'question'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"Questions\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/poet\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'book'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"Writers\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/users\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'users'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"Scholars\")));\n    }\n\n    return __jsx(\"div\", {\n      className: \"site-header__menu--nav\"\n    }, __jsx(\"div\", {\n      className: \"site-header__menu--nav__icn\",\n      onMouseEnter: this.showNavTipHandler,\n      onMouseLeave: this.hidNavTipHandler,\n      onClick: this.showNavListHandler\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'bars'],\n      className: \"icon icon__site-header--list\"\n    })), __jsx(\"div\", {\n      className: navTipClass.join(' ')\n    }, \"Options\"), __jsx(\"div\", {\n      className: \"site-header__menu--nav__opt--itm__sm-categ\",\n      onClick: this.showNavItmHandler\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'external-link-alt']\n    })), __jsx(\"nav\", {\n      className: navClass.join(' ')\n    }, navItm));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    navListCateg: state.header.navListCateg,\n    navList: state.header.navList,\n    hidNavList: state.header.hidNavList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onshowNavList: () => dispatch(actions.showNavList()),\n    onFetchNavList: category => dispatch(actions.fetchNavlistInit(category))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationList);","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/containers/Header/NavigationList/NavigationList.js"],"names":["React","Component","connect","FontAwesomeIcon","actions","NavigationLists","Loader","Aux","NavigationList","show","showNavList","showNavItm","default","category","state","setState","props","onshowNavList","prevState","onFetchNavList","componentDidUpdate","hidNavList","render","navTipClass","navClass","navList","navOptClass","push","navOptCateg","join","navListCateg","navItm","fetchNavListHandler","bind","showNavTipHandler","hidNavTipHandler","showNavListHandler","showNavItmHandler","mapStateToProps","header","mapDispatchToProps","dispatch","fetchNavlistInit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './NavigationList.css';\r\nimport * as actions from '../../../store/actions/index';\r\nimport NavigationLists from '../../../components/Navigation/NavigationLists/NavigationLists';\r\nimport Loader from '../../../components/UI/Loader/Loader';\r\nimport Aux from '../../../hoc/Auxs/Aux';\r\n\r\nclass NavigationList extends Component {\r\n    state = {\r\n        show: false,\r\n        showNavList: false,\r\n        showNavItm: false,\r\n        default: false,\r\n        category: null\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.showNavList && !this.state.default && this.props.hidNavList) {\r\n            this.setState({\r\n                default: true,\r\n                show: false,\r\n                showNavList: false\r\n            });\r\n        }\r\n    }\r\n\r\n    showNavTipHandler = () => {\r\n       if (!this.state.showNavList) {\r\n        this.setState({\r\n            show: true\r\n        });\r\n       }\r\n    }\r\n\r\n    hidNavTipHandler = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    showNavListHandler = () => {\r\n        this.props.onshowNavList();\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                show: false,\r\n                default: false,\r\n                showNavList: prevState.showNavItm ? true : !prevState.showNavList,\r\n                showNavItm: false\r\n            }\r\n        });\r\n    }\r\n\r\n    showNavItmHandler = () => {\r\n        this.props.onshowNavList();\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                showNavItm: true,\r\n                show: false,\r\n                default: false,\r\n                showNavList: prevState.showNavItm ? !prevState.showNavList: true,\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchNavListHandler = (category) => {\r\n        this.props.onFetchNavList(category);\r\n        this.setState({category})\r\n    }\r\n\r\n    render() {\r\n        let navTipClass = [\"site-header__tool-tip site-header__tool-tip--nav\"];\r\n        let navClass = [\"site-header__menu--nav__opt\"];\r\n        let navList = null;\r\n        let navOptClass = [\"site-header__menu--nav__opt--det\"];\r\n\r\n        if (this.state.show) {\r\n            navTipClass.push(\"site-header__tool-tip--nav__visible\")\r\n        }\r\n\r\n        if (this.state.showNavList) {\r\n            navClass.push(\"site-header__menu--nav__opt--visible\");\r\n        }\r\n\r\n        if (this.state.showNavList && this.state.category) {\r\n            let navOptCateg = this.state.category === 'post' ? 'site-header__menu--nav__opt--det__pt' : null;\r\n            navOptCateg = this.state.category === 'question' ? 'site-header__menu--nav__opt--det__que' : navOptCateg;\r\n            navOptCateg = this.state.category === 'onlineque' ? 'site-header__menu--nav__opt--det__pwt' : navOptCateg;\r\n            navOptCateg = this.state.category === 'group' ? 'site-header__menu--nav__opt--det__grp' : navOptCateg;\r\n            navOptCateg = this.state.category === 'poet' ? 'site-header__menu--nav__opt--det__onlineque' : navOptCateg;\r\n            navOptClass.push(navOptCateg);\r\n            navList =  this.props.navList  ? (\r\n                <ul className={navOptClass.join(' ')}>\r\n                    <NavigationLists \r\n                        content={this.props.navList}\r\n                        category={this.props.navListCateg}/>\r\n                </ul>\r\n            ) : (\r\n                <div className={`${navOptClass.join(' ')} site-header__menu--nav__opt--det__loading`}>\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let navItm = (\r\n            <Aux>\r\n                { navList }\r\n                <ul className=\"site-header__menu--nav__opt--itm\">\r\n                    <li\r\n                        onMouseEnter={this.fetchNavListHandler.bind(this, 'post')}\r\n                        className={this.state.category === 'post' ? 'active-header-nav' : null}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'newspaper']} \r\n                            className=\"icon icon__site-header--nav__itm\" />\r\n                        News Feed\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'caret-right']} \r\n                            className=\"icon icon__site-header--nav__angle\" />\r\n                    </li>\r\n                    <li\r\n                        onMouseEnter={this.fetchNavListHandler.bind(this, 'question')}\r\n                        className={this.state.category === 'question' ? 'active-header-nav' : null}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'question']} \r\n                            className=\"icon icon__site-header--nav__itm\" />\r\n                        Questions  \r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'caret-right']} \r\n                            className=\"icon icon__site-header--nav__angle\" />\r\n                    </li>\r\n                    {/* <li\r\n                        onMouseEnter={this.fetchNavListHandler.bind(this, 'onlineque')}\r\n                        className={this.state.category === 'onlineque' ? 'active-header-nav' : null}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'coffee']} \r\n                            className=\"icon icon__site-header--nav__itm\" />\r\n                        Online Exam  \r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'caret-right']} \r\n                            className=\"icon icon__site-header--nav__angle\" />\r\n                    </li> */}\r\n                    {/* <li\r\n                        onMouseEnter={this.fetchNavListHandler.bind(this, 'group')}\r\n                        className={this.state.category === 'group' ? 'active-header-nav' : null}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'users']} \r\n                            className=\"icon icon__site-header--nav__itm\" />\r\n                        Group \r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'caret-right']} \r\n                            className=\"icon icon__site-header--nav__angle\" />\r\n                    </li> */}\r\n                    <li\r\n                        onMouseEnter={this.fetchNavListHandler.bind(this, 'poet')}\r\n                        className={this.state.category === 'poet' ? 'active-header-nav' : null}>\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'book']} \r\n                            className=\"icon icon__site-header--nav__itm\" />\r\n                        Writers\r\n                        <FontAwesomeIcon \r\n                            icon={['fas', 'caret-right']} \r\n                            className=\"icon icon__site-header--nav__angle\" />\r\n                    </li>\r\n                </ul>\r\n            </Aux>\r\n        )\r\n\r\n        if (this.state.showNavItm) {\r\n            navItm = (\r\n                <ul className=\"site-header__menu--nav__opt--itm__sm-categ--cnt\">\r\n                    <li>\r\n                        <a href=\"/post\">\r\n                            <FontAwesomeIcon \r\n                                icon={['fas', 'newspaper']} \r\n                                className=\"icon icon__site-header--nav__itm\" />\r\n                            News Feed\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/question\">\r\n                        <FontAwesomeIcon \r\n                                icon={['fas', 'question']} \r\n                                className=\"icon icon__site-header--nav__itm\" />\r\n                            Questions  \r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/poet\">\r\n                            <FontAwesomeIcon \r\n                                icon={['fas', 'book']} \r\n                                className=\"icon icon__site-header--nav__itm\" />\r\n                            Writers\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/users\">\r\n                            <FontAwesomeIcon \r\n                                icon={['fas', 'users']} \r\n                                className=\"icon icon__site-header--nav__itm\" />\r\n                            Scholars\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"site-header__menu--nav\">\r\n                <div \r\n                    className=\"site-header__menu--nav__icn\"\r\n                    onMouseEnter={this.showNavTipHandler}\r\n                    onMouseLeave={this.hidNavTipHandler}\r\n                    onClick={this.showNavListHandler}>\r\n                    <FontAwesomeIcon \r\n                        icon={['fas', 'bars']} \r\n                        className=\"icon icon__site-header--list\" />\r\n                </div>\r\n                <div className={navTipClass.join(' ')}>\r\n                    Options\r\n                </div>\r\n                <div \r\n                    className=\"site-header__menu--nav__opt--itm__sm-categ\"\r\n                    onClick={this.showNavItmHandler}>\r\n                     <FontAwesomeIcon \r\n                        icon={['fas', 'external-link-alt']} />\r\n                </div>\r\n                <nav className={navClass.join(' ')}>\r\n                    { navItm }\r\n                </nav> \r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n       navListCateg: state.header.navListCateg,\r\n       navList: state.header.navList,\r\n       hidNavList: state.header.hidNavList\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onshowNavList: () => dispatch(actions.showNavList()),\r\n        onFetchNavList: (category) => dispatch(actions.fetchNavlistInit(category))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationList);"]},"metadata":{},"sourceType":"module"}