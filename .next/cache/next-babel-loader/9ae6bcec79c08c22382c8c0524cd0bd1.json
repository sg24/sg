{"ast":null,"code":"import { put, delay } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function* fetchUsersInitSaga() {\n  try {\n    let response = yield axios.post('/users', null, {\n      headers: {\n        'data-categ': `allteacher-notab`\n      }\n    });\n    yield put(actions.fetchUsers(response.data));\n  } catch (err) {\n    yield put(actions.fetchUsersFail(err));\n  }\n}\nexport function* filterUserInitSaga(action) {\n  let filterUser = null;\n\n  if (!action.filterContent) {\n    filterUser = action.users;\n  } else {\n    filterUser = action.users.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1);\n  }\n\n  yield put(actions.filterUser(filterUser));\n}\nexport function* filterUserSelectInitSaga(action) {\n  let filterUser = null;\n\n  if (!action.filterContent) {\n    filterUser = action.userSelect;\n  } else {\n    filterUser = action.userSelect.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1);\n  }\n\n  yield put(actions.filterUserSelect(filterUser));\n}\nexport function* shareUserInitSaga(action) {\n  let shareUser = [];\n\n  for (let user of [...action.userSelect]) {\n    shareUser.push(user.id);\n  }\n\n  try {\n    yield put(actions.shareUserStart());\n    let field = action.cntType === 'post' ? 'postID' : action.cntType === 'question' ? 'queID' : 'pwtID';\n    yield axios.patch('/header', {\n      users: JSON.stringify(shareUser),\n      id: action.shareID,\n      model: action.cntType,\n      field\n    }, {\n      headers: {\n        'data-categ': 'shareuser'\n      }\n    });\n    yield delay(1000);\n    yield put(actions.shareUser());\n  } catch (err) {\n    yield put(actions.shareUserfail(err));\n    yield delay(1000);\n    yield put(actions.shareUser());\n  }\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/share.js"],"names":["put","delay","actions","axios","fetchUsersInitSaga","response","post","headers","fetchUsers","data","err","fetchUsersFail","filterUserInitSaga","action","filterUser","filterContent","users","filter","user","username","toLowerCase","indexOf","filterUserSelectInitSaga","userSelect","filterUserSelect","shareUserInitSaga","shareUser","push","id","shareUserStart","field","cntType","patch","JSON","stringify","shareID","model","shareUserfail"],"mappings":"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","sourcesContent":["import { put, delay } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\n\r\nexport function* fetchUsersInitSaga () {\r\n    try {\r\n        let response = yield axios.post('/users', null,{headers: {'data-categ':`allteacher-notab`}});\r\n        yield put(actions.fetchUsers(response.data));\r\n    } catch(err) {\r\n        yield put(actions.fetchUsersFail(err))\r\n    }\r\n}\r\n\r\nexport function* filterUserInitSaga(action) {\r\n   let filterUser = null;\r\n   if (!action.filterContent) {\r\n        filterUser = action.users\r\n    } else {\r\n        filterUser = action.users.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1);\r\n    }\r\n   yield put(actions.filterUser(filterUser))\r\n}\r\n\r\nexport function* filterUserSelectInitSaga(action) {\r\n    let filterUser = null;\r\n    if (!action.filterContent) {\r\n        filterUser = action.userSelect\r\n    } else {\r\n        filterUser = action.userSelect.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1 );\r\n    }\r\n    yield put(actions.filterUserSelect(filterUser))\r\n}\r\n\r\nexport function* shareUserInitSaga(action) {\r\n    let shareUser = [];\r\n\r\n    for (let user of [...action.userSelect] ) {\r\n        shareUser.push(user.id)\r\n    }\r\n    \r\n    try {\r\n        yield put(actions.shareUserStart())\r\n        let field =   action.cntType === 'post' ? 'postID' : action.cntType === 'question' ? 'queID' : 'pwtID'\r\n        yield axios.patch('/header', {users: JSON.stringify(shareUser), id: action.shareID, model: action.cntType, field},{headers: {'data-categ': 'shareuser'}});\r\n        yield delay(1000);\r\n        yield put(actions.shareUser());\r\n    } catch(err){\r\n        yield put(actions.shareUserfail(err));\r\n        yield delay(1000);\r\n        yield put(actions.shareUser());\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}