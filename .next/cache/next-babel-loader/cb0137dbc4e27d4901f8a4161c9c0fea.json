{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nimport { updateObject } from '../../shared/utility';\nexport function* fetchCntCategInitSaga(action) {\n  try {\n    if (action.categ && action.categ.length > 0) {\n      yield put(actions.fetchCntCateg([...action.categ]));\n    } else {\n      let response = yield axios.post('/header', {\n        categ: 'question'\n      }, {\n        headers: {\n          'data-categ': 'category'\n        }\n      });\n      yield put(actions.fetchCntCateg(response.data));\n    }\n  } catch (e) {}\n}\nexport function* filterContentInitSaga(action) {\n  let categs = [];\n\n  for (let categ of action.content.category) {\n    categs.push(categ.category);\n  }\n\n  let filterDet = updateObject(action.content, {\n    category: categs\n  });\n  let filterCnt = JSON.stringify(filterDet);\n\n  if (!action.content.apply) {\n    try {\n      yield put(actions.filterContentStart());\n      let response = yield axios.post('/header', {\n        filterCnt,\n        model: 'question'\n      }, {\n        headers: {\n          'data-categ': 'cntSearch'\n        }\n      });\n      yield put(actions.filterContent(response.data));\n    } catch (err) {\n      yield put(actions.filterContentFail(err));\n    }\n\n    return;\n  }\n\n  yield put(actions.filterPost(filterCnt));\n}","map":null,"metadata":{},"sourceType":"module"}