{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nfalse ? require('pepjs') : null;\nimport Post from '../react/index/components/Main/Post/Post';\nimport Loader from '../react/index/components/UI/Loader/Loader';\nimport NoAcc from '../react/index/components/Main/NoAcc/NoAcc';\nimport { updateObject } from '../react/index/shared/utility';\nimport * as actions from '../react/index/store/actions/index';\nimport App from '../react/index/App';\nlet IS_ANIMATED = true;\nlet limit = 0;\n\nif (false) {\n  if (window.innerHeight >= 1200) {\n    limit = 18;\n  } else if (window.innerHeight >= 900) {\n    limit = 12;\n  } else if (window.innerHeight >= 500) {\n    limit = 9;\n  } else {\n    limit = 6;\n  }\n}\n\nclass Posts extends Component {\n  static async getInitialProps(props) {\n    const {\n      store,\n      isServer\n    } = props.ctx;\n    store.dispatch(actions.fetchCntReset());\n\n    if (!store.getState().cnt.cnts) {\n      store.dispatch(actions.fetchCntInit(null, 'post', limit, 0, 0));\n      store.dispatch(actions.changeTagsPath('/post'));\n      store.dispatch(actions.fetchTrdInit(null));\n    }\n\n    return {\n      cnts: store.getState().cnt.cnts\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onScroll\", () => {\n      if (false) {\n        if (document.documentElement.scrollHeight - document.documentElement.scrollTop === document.documentElement.clientHeight) {\n          this.props.onFetchCnt(this.props.userID, 'post', this.state.fetchLimit, this.props.skipCnt + this.state.fetchLimit, this.props.cntTotal);\n        }\n      }\n    });\n\n    _defineProperty(this, \"showUserOptHandler\", id => {\n      if (this.state.cntOpt && this.state.cntOpt.id === id) {\n        this.setState((prevState, props) => {\n          return {\n            cntOpt: updateObject(prevState.cntOpt, {\n              visible: !prevState.cntOpt.visible\n            })\n          };\n        });\n        return;\n      }\n\n      const newCntOpt = {\n        visible: true,\n        id\n      };\n      this.setState({\n        cntOpt: newCntOpt\n      });\n    });\n\n    _defineProperty(this, \"changeFavoriteHandler\", (id, isLiked, favAdd, cntGrp) => {\n      this.props.onChangeFav(id, isLiked, favAdd, this.props.changedFav, this.props.userID, cntGrp);\n    });\n\n    _defineProperty(this, \"showShareHandler\", shareID => {\n      this.props.onChangeShareID(shareID, 'post');\n      this.props.router.push('/index/post/share');\n    });\n\n    _defineProperty(this, \"changeMediaHandler\", (id, maxLength, type) => {\n      this.setState({\n        removePrevMedia: {\n          id,\n          type\n        },\n        removeAnim: false\n      });\n      this.animateSlider(id, maxLength, type, 900);\n    });\n\n    _defineProperty(this, \"removeAnimHandler\", event => {\n      if (!this.state.removePrevMedia) {\n        this.setState({\n          removeAnim: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"playVideoHandler\", snapshot => {\n      this.props.onFetchVideo(snapshot.id, `${false ? window.location.protocol + '//' + window.location.host : null}/media/video/${snapshot.videoCnt}`);\n    });\n\n    _defineProperty(this, \"slidePlayHandler\", (id, maxLength, event) => {\n      let slide = event.target;\n      slide.setPointerCapture(event.pointerId);\n      this.setState({\n        playerIcnId: id\n      });\n    });\n\n    _defineProperty(this, \"clearSlidePlayhandler\", event => {\n      let slide = event.target;\n      slide.releasePointerCapture(event.pointerId);\n      slide.style.left = 0 + 'px';\n      let videoPlayerIcn = document.querySelector('.reuse-pt__media--wrapper__icn-move');\n\n      if (videoPlayerIcn) {\n        videoPlayerIcn.style.left = 45 + '%';\n      }\n    });\n\n    _defineProperty(this, \"moveSlidePlayHandler\", (id, maxLength, event) => {\n      let slide = event.target;\n\n      if (slide.hasPointerCapture && slide.hasPointerCapture(event.pointerId)) {\n        let newpos = event.clientX - slide.parentElement.offsetLeft - slide.offsetWidth / 2;\n\n        if (newpos < -(slide.offsetWidth / 2 + slide.offsetWidth / 4)) {\n          if (IS_ANIMATED) {\n            IS_ANIMATED = false;\n            this.animateSlider(id, maxLength, 'next', 0);\n          }\n        } else if (newpos > slide.offsetWidth / 2 + slide.offsetWidth / 4) {\n          if (IS_ANIMATED) {\n            IS_ANIMATED = false;\n            this.animateSlider(id, maxLength, 'prev', 0);\n          }\n        }\n\n        let videoPlayerIcn = document.querySelector('.reuse-pt__media--wrapper__icn-move');\n\n        if (videoPlayerIcn) {\n          let playerIcnHeight = newpos / slide.offsetWidth * 100;\n          videoPlayerIcn.style.left = playerIcnHeight + 45 + '%';\n        }\n\n        slide.style.left = newpos + 'px';\n      }\n    });\n\n    _defineProperty(this, \"animateSlider\", (id, maxLength, type, timeFrame) => {\n      setTimeout(() => {\n        let mediaItms = [...this.state.mediaItms];\n        let filterMedia = mediaItms.filter(media => media.id === id);\n        let mediaDet = {\n          id,\n          position: type === 'next' ? maxLength > 1 ? 1 : 0 : maxLength - 1\n        };\n\n        if (filterMedia.length > 0) {\n          for (let mediaItm of filterMedia) {\n            mediaDet = {\n              id: mediaItm.id,\n              position: type === 'next' ? mediaItm.position += 1 : mediaItm.position -= 1\n            };\n\n            if (mediaDet.position > maxLength - 1) {\n              mediaDet = updateObject(mediaDet, {\n                position: 0\n              });\n            }\n\n            if (mediaDet.position < 0) {\n              mediaDet = updateObject(mediaDet, {\n                position: maxLength - 1\n              });\n            }\n\n            let updateMedia = mediaItms.filter(media => media.id !== id);\n            updateMedia.push(mediaDet);\n            this.setState({\n              mediaItms: updateMedia,\n              removeAnim: false,\n              removePrevMedia: null,\n              animateItm: {\n                id,\n                direction: type\n              }\n            });\n          }\n\n          return;\n        }\n\n        mediaItms.push(mediaDet);\n        this.setState({\n          mediaItms,\n          removeAnim: false,\n          removePrevMedia: null,\n          animateItm: {\n            id,\n            direction: type\n          }\n        });\n      }, timeFrame);\n      setTimeout(() => {\n        IS_ANIMATED = true;\n      }, 500);\n    });\n\n    _defineProperty(this, \"changeCntHandler\", (id, title, det, modelType) => {\n      let checkTitle = String(title).length > 50 ? String(title).substr(0, 50) + '...' : title;\n      this.props.onChangeCnt(id, checkTitle, det, false, modelType);\n    });\n\n    this.state = {\n      cntOpt: null,\n      fetchLimit: limit,\n      filterTag: 'post',\n      mediaItms: [],\n      animateItm: null,\n      removeAnim: false,\n      removePrevMedia: null,\n      playerIcnId: null,\n      animationComplete: true,\n      scrollEnable: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.cnts && this.props.cnts.length > 0 && !this.state.scrollEnable) {\n      window.addEventListener('scroll', this.onScroll, false);\n      this.setState({\n        scrollEnable: true\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onFetchCntReset();\n    window.removeEventListener('scroll', this.onScroll, false);\n  }\n\n  render() {\n    this.props.onFetchShareActive();\n    this.props.onFetchShareCntActive();\n    this.props.onFetchNotifyActive();\n    this.props.onFetchCntActive();\n    this.props.onFetchQueActive();\n    this.props.onFetchPtActive();\n    this.props.onFetchReqActive();\n\n    let cnt = __jsx(Loader, null);\n\n    if (this.props.postErr) {\n      cnt = null;\n    }\n\n    if (this.props.cnts && this.props.cnts.length === 0) {\n      cnt = __jsx(NoAcc, {\n        isAuth: this.props.userID !== null,\n        det: \"No content found!\",\n        icn: \"clone\",\n        filter: true\n      });\n    }\n\n    if (this.props.cnts && this.props.cnts.length === 0) {\n      cnt = __jsx(NoAcc, {\n        isAuth: this.props.userID !== null,\n        det: \"No content found!\",\n        icn: \"clone\",\n        filter: true\n      });\n    }\n\n    if (this.props.cnts && this.props.cnts.length > 0) {\n      cnt = __jsx(Post, {\n        content: this.props.cnts,\n        media: this.props.media,\n        userOpt: this.showUserOptHandler,\n        showCntOpt: this.state.cntOpt,\n        fav: this.changeFavoriteHandler,\n        changedFav: this.props.changedFav,\n        favChange: this.props.favChange,\n        share: this.showShareHandler,\n        nextMedia: this.changeMediaHandler,\n        prevMedia: this.changeMediaHandler,\n        mediaItms: this.state.mediaItms,\n        removeAnim: this.removeAnimHandler,\n        disableAnim: this.state.removeAnim,\n        animateItm: this.state.animateItm,\n        removePrevMedia: this.state.removePrevMedia,\n        playVideo: this.playVideoHandler,\n        videoErr: this.props.videoErr,\n        video: this.props.postVideo,\n        playerIcnId: this.state.playerIcnId,\n        slidePlay: this.slidePlayHandler,\n        moveSlidePlay: this.moveSlidePlayHandler,\n        clearSlidePlay: this.clearSlidePlayhandler,\n        changeCnt: this.changeCntHandler\n      });\n    }\n\n    return __jsx(App, null, cnt);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userID: state.auth.userID,\n    cnts: state.cnt.cnts,\n    skipCnt: state.cnt.skipCnt,\n    cntTotal: state.cnt.cntTotal,\n    changedFav: state.cnt.changedFav,\n    favChange: state.cnt.favChange,\n    cntErr: state.cnt.cntErr,\n    postVideo: state.cnt.postVideo,\n    videoErr: state.cnt.videoErr,\n    filterDet: state.cnt.filterDet\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchShareActive: () => dispatch(actions.fetchShareactiveInit()),\n    onFetchShareCntActive: () => dispatch(actions.fetchShareCntactiveInit()),\n    onFetchQueActive: () => dispatch(actions.fetchQueActiveInit()),\n    onFetchPtActive: () => dispatch(actions.fetchPtActiveInit()),\n    onFetchCntActive: () => dispatch(actions.fetchCntActiveInit()),\n    onFetchNotifyActive: () => dispatch(actions.fetchNotifyactiveInit()),\n    onFetchReqActive: () => dispatch(actions.fetchReqActiveInit()),\n    onFetchCnt: (userID, fetchType, limit, skipCnt, cntTotal) => dispatch(actions.fetchCntInit(userID, fetchType, limit, skipCnt, cntTotal)),\n    onFetchCntReset: () => dispatch(actions.fetchCntReset()),\n    onChangeFav: (id, liked, favAdd, changedFav, userID, cntGrp) => dispatch(actions.changeFavInit(id, liked, favAdd, changedFav, userID, cntGrp)),\n    onChangeShareID: (shareID, cntType) => dispatch(actions.shareID(shareID, cntType)),\n    onChangeTag: path => dispatch(actions.changeTagsPath(path)),\n    onFetchVideo: (id, url) => dispatch(actions.fetchVideo(id, url)),\n    onChangeCnt: (id, title, det, confirm, modelType) => dispatch(actions.changeCntInit(id, title, det, confirm, modelType))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Posts));","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/pages/index.js"],"names":["React","Component","connect","withRouter","require","Post","Loader","NoAcc","updateObject","actions","App","IS_ANIMATED","limit","window","innerHeight","Posts","getInitialProps","props","store","isServer","ctx","dispatch","fetchCntReset","getState","cnt","cnts","fetchCntInit","changeTagsPath","fetchTrdInit","constructor","document","documentElement","scrollHeight","scrollTop","clientHeight","onFetchCnt","userID","state","fetchLimit","skipCnt","cntTotal","id","cntOpt","setState","prevState","visible","newCntOpt","isLiked","favAdd","cntGrp","onChangeFav","changedFav","shareID","onChangeShareID","router","push","maxLength","type","removePrevMedia","removeAnim","animateSlider","event","snapshot","onFetchVideo","location","protocol","host","videoCnt","slide","target","setPointerCapture","pointerId","playerIcnId","releasePointerCapture","style","left","videoPlayerIcn","querySelector","hasPointerCapture","newpos","clientX","parentElement","offsetLeft","offsetWidth","playerIcnHeight","timeFrame","setTimeout","mediaItms","filterMedia","filter","media","mediaDet","position","length","mediaItm","updateMedia","animateItm","direction","title","det","modelType","checkTitle","String","substr","onChangeCnt","filterTag","animationComplete","scrollEnable","componentDidMount","console","log","componentDidUpdate","addEventListener","onScroll","componentWillUnmount","onFetchCntReset","removeEventListener","render","onFetchShareActive","onFetchShareCntActive","onFetchNotifyActive","onFetchCntActive","onFetchQueActive","onFetchPtActive","onFetchReqActive","postErr","showUserOptHandler","changeFavoriteHandler","favChange","showShareHandler","changeMediaHandler","removeAnimHandler","playVideoHandler","videoErr","postVideo","slidePlayHandler","moveSlidePlayHandler","clearSlidePlayhandler","changeCntHandler","mapStateToProps","auth","cntErr","filterDet","mapDispatchToProps","fetchShareactiveInit","fetchShareCntactiveInit","fetchQueActiveInit","fetchPtActiveInit","fetchCntActiveInit","fetchNotifyactiveInit","fetchReqActiveInit","fetchType","liked","changeFavInit","cntType","onChangeTag","path","url","fetchVideo","confirm","changeCntInit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'next/router'\r\ntypeof window !== 'undefined' ? require('pepjs'): null;\r\nimport Post from '../react/index/components/Main/Post/Post';\r\nimport Loader from '../react/index/components/UI/Loader/Loader';\r\nimport NoAcc from '../react/index/components/Main/NoAcc/NoAcc';\r\nimport { updateObject } from '../react/index/shared/utility';\r\nimport * as actions from '../react/index/store/actions/index';\r\nimport App from '../react/index/App';\r\n\r\nlet IS_ANIMATED = true;\r\n\r\nlet limit = 0;\r\nif (typeof window !== 'undefined') {\r\n    if (window.innerHeight >= 1200) {\r\n        limit = 18\r\n    } else if(window.innerHeight >= 900) {\r\n        limit = 12;\r\n    } else if(window.innerHeight >= 500) {\r\n        limit = 9\r\n    } else {\r\n        limit = 6;\r\n    }\r\n}\r\n\r\nclass Posts extends Component {\r\n    static async getInitialProps(props) {\r\n        const { store, isServer } = props.ctx\r\n        store.dispatch(actions.fetchCntReset())\r\n  \r\n          if (!store.getState().cnt.cnts) {\r\n            store.dispatch(actions.fetchCntInit(null, 'post', limit, 0, 0))\r\n            store.dispatch(actions.changeTagsPath('/post'));\r\n            store.dispatch(actions.fetchTrdInit(null));\r\n          }\r\n  \r\n          return { cnts: store.getState().cnt.cnts }\r\n      }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cntOpt: null,\r\n            fetchLimit: limit,\r\n            filterTag: 'post',\r\n            mediaItms: [],\r\n            animateItm: null,\r\n            removeAnim: false,\r\n            removePrevMedia: null,\r\n            playerIcnId: null,\r\n            animationComplete: true,\r\n            scrollEnable: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.cnts && this.props.cnts.length > 0 && !this.state.scrollEnable) {\r\n            window.addEventListener('scroll', this.onScroll, false);\r\n            this.setState({scrollEnable: true})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onFetchCntReset();\r\n        window.removeEventListener('scroll', this.onScroll, false);\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (typeof window !== `undefined`) {\r\n            if (document.documentElement.scrollHeight - document.documentElement.scrollTop === document.documentElement.clientHeight) {\r\n                this.props.onFetchCnt(\r\n                        this.props.userID,  'post' ,\r\n                        this.state.fetchLimit, this.props.skipCnt + this.state.fetchLimit, this.props.cntTotal);\r\n            }\r\n        }\r\n    } \r\n\r\n    showUserOptHandler = (id) => {\r\n        if (this.state.cntOpt && this.state.cntOpt.id === id) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    cntOpt: updateObject(prevState.cntOpt, {visible: !prevState.cntOpt.visible})\r\n                }\r\n            });\r\n            return\r\n        }\r\n\r\n        const newCntOpt = {visible: true, id}\r\n        this.setState({cntOpt: newCntOpt})\r\n    }\r\n\r\n    changeFavoriteHandler = (id, isLiked, favAdd, cntGrp) => {\r\n        this.props.onChangeFav(id, isLiked, favAdd, this.props.changedFav, this.props.userID, cntGrp);\r\n    }\r\n\r\n    showShareHandler = (shareID) => {\r\n        this.props.onChangeShareID(shareID, 'post');\r\n        this.props.router.push('/index/post/share')\r\n    };\r\n\r\n    changeMediaHandler = (id, maxLength, type) => {\r\n        this.setState({removePrevMedia: {id, type}, removeAnim: false});\r\n        this.animateSlider(id, maxLength, type, 900);\r\n    }\r\n\r\n    removeAnimHandler = (event) => {\r\n        if (!this.state.removePrevMedia) {\r\n            this.setState({removeAnim: true})\r\n        }\r\n    }\r\n\r\n    playVideoHandler = (snapshot) => {\r\n        this.props.onFetchVideo(snapshot.id, `${typeof window !== `undefined` ? window.location.protocol + '//' + window.location.host : null}/media/video/${snapshot.videoCnt}`)\r\n    }\r\n\r\n    slidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        slide.setPointerCapture(event.pointerId);\r\n        this.setState({playerIcnId: id})\r\n    }\r\n\r\n    clearSlidePlayhandler = (event) => {\r\n        let slide = event.target;\r\n        slide.releasePointerCapture(event.pointerId);\r\n        slide.style.left = 0 +'px';\r\n        let videoPlayerIcn = document.querySelector('.reuse-pt__media--wrapper__icn-move');\r\n        if (videoPlayerIcn) {\r\n            videoPlayerIcn.style.left = 45 + '%';\r\n        }\r\n    }\r\n\r\n    moveSlidePlayHandler = (id, maxLength, event) => {\r\n        let slide = event.target;\r\n        if (slide.hasPointerCapture && slide.hasPointerCapture(event.pointerId)) {\r\n            let newpos = event.clientX - slide.parentElement.offsetLeft - (slide.offsetWidth/2);\r\n            if (newpos < -(slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'next', 0)\r\n                }\r\n            } else if ( newpos > (slide.offsetWidth/2 + slide.offsetWidth/4)) {\r\n                if (IS_ANIMATED) {\r\n                    IS_ANIMATED = false;\r\n                    this.animateSlider(id, maxLength, 'prev', 0)\r\n                }\r\n            } \r\n            let videoPlayerIcn = document.querySelector('.reuse-pt__media--wrapper__icn-move');\r\n            if (videoPlayerIcn) {\r\n                let playerIcnHeight = (newpos / slide.offsetWidth) * 100\r\n                videoPlayerIcn.style.left =  playerIcnHeight + 45 + '%';\r\n            }\r\n            slide.style.left = newpos +'px';\r\n        }\r\n    }\r\n\r\n    animateSlider = (id, maxLength, type, timeFrame) => {\r\n        setTimeout(() => {\r\n            let mediaItms = [...this.state.mediaItms];\r\n            let filterMedia = mediaItms.filter(media => media.id === id);\r\n            let mediaDet = {id, position: type === 'next' ?  maxLength > 1 ? 1 : 0 : maxLength - 1};\r\n            if (filterMedia.length > 0) {\r\n                for (let mediaItm of filterMedia) {\r\n                    mediaDet = {id: mediaItm.id, position: type === 'next' ? mediaItm.position+=1 : mediaItm.position-=1};\r\n                    if (mediaDet.position > maxLength - 1) {\r\n                        mediaDet = updateObject(mediaDet, {position: 0});\r\n                    }\r\n    \r\n                    if (mediaDet.position < 0) {\r\n                        mediaDet = updateObject(mediaDet, {position: maxLength - 1});\r\n                    }\r\n                    let updateMedia = mediaItms.filter(media => media.id !== id);\r\n                    updateMedia.push(mediaDet);\r\n                    this.setState({mediaItms: updateMedia, removeAnim: false,  removePrevMedia: null, animateItm: {id, direction: type}})\r\n                }\r\n                return\r\n            }\r\n            mediaItms.push(mediaDet);\r\n            this.setState({mediaItms, removeAnim: false, removePrevMedia: null,  animateItm: {id, direction: type}})   \r\n        }, timeFrame)\r\n\r\n        setTimeout(() => {\r\n            IS_ANIMATED = true;\r\n        }, 500)\r\n    }\r\n    changeCntHandler = (id, title, det, modelType) => {\r\n        let checkTitle = String(title).length > 50 ? String(title).substr(0, 50) + '...' : title\r\n        this.props.onChangeCnt(id, checkTitle, det, false, modelType);\r\n    }\r\n\r\n    render() {\r\n        this.props.onFetchShareActive();\r\n        this.props.onFetchShareCntActive();\r\n        this.props.onFetchNotifyActive();\r\n        this.props.onFetchCntActive();\r\n        this.props.onFetchQueActive();\r\n        this.props.onFetchPtActive();\r\n        this.props.onFetchReqActive();\r\n\r\n        let cnt = <Loader />;\r\n        if (this.props.postErr) {\r\n            cnt = null\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length === 0) {\r\n            cnt = <NoAcc \r\n                    isAuth={this.props.userID !== null}\r\n                    det='No content found!'\r\n                    icn='clone'\r\n                    filter />\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length === 0) {\r\n            cnt = <NoAcc \r\n                    isAuth={this.props.userID !== null}\r\n                    det='No content found!'\r\n                    icn='clone'\r\n                    filter />\r\n        }\r\n\r\n        if (this.props.cnts && this.props.cnts.length > 0) {\r\n            cnt = <Post \r\n                content={this.props.cnts} \r\n                media={this.props.media}\r\n                userOpt={this.showUserOptHandler}\r\n                showCntOpt={this.state.cntOpt}\r\n                fav={this.changeFavoriteHandler}\r\n                changedFav={this.props.changedFav}\r\n                favChange={this.props.favChange}\r\n                share={this.showShareHandler}\r\n                nextMedia={this.changeMediaHandler}\r\n                prevMedia={this.changeMediaHandler}\r\n                mediaItms={this.state.mediaItms}\r\n                removeAnim={this.removeAnimHandler}\r\n                disableAnim={this.state.removeAnim}\r\n                animateItm={this.state.animateItm}\r\n                removePrevMedia={this.state.removePrevMedia}\r\n                playVideo={this.playVideoHandler}\r\n                videoErr={this.props.videoErr}\r\n                video={this.props.postVideo}\r\n                playerIcnId={this.state.playerIcnId}\r\n                slidePlay={this.slidePlayHandler}\r\n                moveSlidePlay={this.moveSlidePlayHandler}\r\n                clearSlidePlay={this.clearSlidePlayhandler}\r\n                changeCnt={this.changeCntHandler}/>\r\n        }\r\n\r\n        return (\r\n          <App>\r\n            { cnt }\r\n          </App>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userID: state.auth.userID,\r\n        cnts: state.cnt.cnts,\r\n        skipCnt: state.cnt.skipCnt,\r\n        cntTotal: state.cnt.cntTotal,\r\n        changedFav: state.cnt.changedFav,\r\n        favChange: state.cnt.favChange,\r\n        cntErr: state.cnt.cntErr,\r\n        postVideo: state.cnt.postVideo,\r\n        videoErr: state.cnt.videoErr,\r\n        filterDet: state.cnt.filterDet\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchShareActive: () => dispatch(actions.fetchShareactiveInit()),\r\n        onFetchShareCntActive: () => dispatch(actions.fetchShareCntactiveInit()),\r\n        onFetchQueActive: () => dispatch(actions.fetchQueActiveInit()),\r\n        onFetchPtActive: () => dispatch(actions.fetchPtActiveInit()),\r\n        onFetchCntActive: () => dispatch(actions.fetchCntActiveInit()),\r\n        onFetchNotifyActive: () => dispatch(actions.fetchNotifyactiveInit()),\r\n        onFetchReqActive: () => dispatch(actions.fetchReqActiveInit()),\r\n        onFetchCnt: (userID, fetchType, limit, skipCnt, cntTotal) => dispatch(actions.fetchCntInit(userID, fetchType, limit, skipCnt, cntTotal)),\r\n        onFetchCntReset: () => dispatch(actions.fetchCntReset()),\r\n        onChangeFav: (id, liked, favAdd, changedFav, userID, cntGrp) => dispatch(actions.changeFavInit(id, liked, favAdd, changedFav, userID, cntGrp)),\r\n        onChangeShareID: (shareID,  cntType) => dispatch(actions.shareID(shareID,  cntType)),\r\n        onChangeTag: (path) => dispatch(actions.changeTagsPath(path)),\r\n        onFetchVideo: (id, url) => dispatch(actions.fetchVideo(id, url)),\r\n        onChangeCnt: (id, title, det, confirm, modelType) => dispatch(actions.changeCntInit(id, title, det, confirm,  modelType))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Posts));"]},"metadata":{},"sourceType":"module"}