{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nimport { updateObject } from '../../shared/utility';\nexport function* fetchCntCategInitSaga(action) {\n  try {\n    if (action.categ && action.categ.length > 0) {\n      yield put(actions.fetchCntCateg([...action.categ]));\n    } else {\n      let response = yield axios.post('/header', {\n        categ: 'question'\n      }, {\n        headers: {\n          'data-categ': 'category'\n        }\n      });\n      yield put(actions.fetchCntCateg(response.data));\n    }\n  } catch (e) {}\n}\nexport function* filterContentInitSaga(action) {\n  let categs = [];\n\n  for (let categ of action.content.category) {\n    categs.push(categ.category);\n  }\n\n  let filterDet = updateObject(action.content, {\n    category: categs\n  });\n  let filterCnt = JSON.stringify(filterDet);\n\n  if (!action.content.apply) {\n    try {\n      yield put(actions.filterContentStart());\n      let response = yield axios.post('/header', {\n        filterCnt,\n        model: 'question'\n      }, {\n        headers: {\n          'data-categ': 'cntSearch'\n        }\n      });\n      yield put(actions.filterContent(response.data));\n    } catch (err) {\n      yield put(actions.filterContentFail(err));\n    }\n\n    return;\n  }\n\n  yield put(actions.filterPost(filterCnt));\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/filter.js"],"names":["put","actions","axios","updateObject","fetchCntCategInitSaga","action","categ","length","fetchCntCateg","response","post","headers","data","e","filterContentInitSaga","categs","content","category","push","filterDet","filterCnt","JSON","stringify","apply","filterContentStart","model","filterContent","err","filterContentFail","filterPost"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,UAAUC,qBAAV,CAAgCC,MAAhC,EAAwC;AAC3C,MAAI;AACA,QAAIA,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACC,KAAP,CAAaC,MAAb,GAAsB,CAA1C,EAA6C;AACzC,YAAMP,GAAG,CAAEC,OAAO,CAACO,aAAR,CAAsB,CAAC,GAAGH,MAAM,CAACC,KAAX,CAAtB,CAAF,CAAT;AACH,KAFD,MAEO;AACH,UAAIG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,SAAX,EAAsB;AAACJ,QAAAA,KAAK,EAAE;AAAR,OAAtB,EAA2C;AAACK,QAAAA,OAAO,EAAE;AAAC,wBAAa;AAAd;AAAV,OAA3C,CAArB;AACA,YAAMX,GAAG,CAACC,OAAO,CAACO,aAAR,CAAsBC,QAAQ,CAACG,IAA/B,CAAD,CAAT;AACH;AACJ,GAPD,CAOE,OAAMC,CAAN,EAAQ,CAAE;AACf;AAED,OAAO,UAAUC,qBAAV,CAAgCT,MAAhC,EAAwC;AAC3C,MAAIU,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIT,KAAT,IAAkBD,MAAM,CAACW,OAAP,CAAeC,QAAjC,EAA2C;AACvCF,IAAAA,MAAM,CAACG,IAAP,CAAYZ,KAAK,CAACW,QAAlB;AACH;;AACD,MAAIE,SAAS,GAAGhB,YAAY,CAACE,MAAM,CAACW,OAAR,EAAiB;AAACC,IAAAA,QAAQ,EAAEF;AAAX,GAAjB,CAA5B;AACA,MAAIK,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAhB;;AACA,MAAG,CAACd,MAAM,CAACW,OAAP,CAAeO,KAAnB,EAA0B;AACtB,QAAI;AACA,YAAMvB,GAAG,CAACC,OAAO,CAACuB,kBAAR,EAAD,CAAT;AACA,UAAIf,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,SAAX,EAAqB;AAACU,QAAAA,SAAD;AAAYK,QAAAA,KAAK,EAAE;AAAnB,OAArB,EAAoD;AAACd,QAAAA,OAAO,EAAE;AAAC,wBAAa;AAAd;AAAV,OAApD,CAArB;AACA,YAAMX,GAAG,CAACC,OAAO,CAACyB,aAAR,CAAsBjB,QAAQ,CAACG,IAA/B,CAAD,CAAT;AACH,KAJD,CAIE,OAAMe,GAAN,EAAW;AACT,YAAM3B,GAAG,CAAEC,OAAO,CAAC2B,iBAAR,CAA0BD,GAA1B,CAAF,CAAT;AACH;;AACD;AACH;;AACD,QAAM3B,GAAG,CAACC,OAAO,CAAC4B,UAAR,CAAmBT,SAAnB,CAAD,CAAT;AACH","sourcesContent":["import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nexport function* fetchCntCategInitSaga(action) {\r\n    try {\r\n        if (action.categ && action.categ.length > 0) {\r\n            yield put (actions.fetchCntCateg([...action.categ]))\r\n        } else {\r\n            let response = yield axios.post('/header', {categ: 'question'}, {headers: {'data-categ':'category'}});\r\n            yield put(actions.fetchCntCateg(response.data));\r\n        }\r\n    } catch(e){}\r\n}\r\n\r\nexport function* filterContentInitSaga(action) {\r\n    let categs = [];\r\n    for (let categ of action.content.category) {\r\n        categs.push(categ.category);\r\n    }\r\n    let filterDet = updateObject(action.content, {category: categs});\r\n    let filterCnt = JSON.stringify(filterDet);\r\n    if(!action.content.apply) {\r\n        try {\r\n            yield put(actions.filterContentStart());\r\n            let response = yield axios.post('/header',{filterCnt, model: 'question'},{headers: {'data-categ':'cntSearch'}});\r\n            yield put(actions.filterContent(response.data));\r\n        } catch(err) {\r\n            yield put (actions.filterContentFail(err))\r\n        }\r\n        return\r\n    }\r\n    yield put(actions.filterPost(filterCnt));\r\n}"]},"metadata":{},"sourceType":"module"}