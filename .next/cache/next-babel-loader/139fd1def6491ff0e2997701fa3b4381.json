{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport axios from '../../axios';\nimport { changeFav } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nexport function* fetchNotifyInitSaga(action) {\n  try {\n    yield put(actions.fetchNotifyStart());\n    let response = yield axios.post('/header', {\n      fetchCnt: true\n    }, {\n      headers: {\n        'data-categ': 'allnotification'\n      }\n    });\n\n    if (response.data.collTotal > 0) {\n      yield put(actions.fetchNotify(response.data.coll));\n    } else {\n      yield put(actions.fetchNotify([]));\n    }\n  } catch (err) {\n    yield put(actions.fetchNotifyFail(err));\n  }\n}\nexport function* changeFavNotifySaga(action) {\n  let notify = changeFav(action.notify, action.notifyID);\n  yield put(actions.changeFavNotifyStart(notify.updateStartArray));\n  yield put(actions.changeFavNotify(notify.updateDataArray));\n}\nexport function* fetchNavlistInitSaga(action) {\n  try {\n    yield put(actions.fetchNavlistStart());\n    let response = yield axios.post('/header', {\n      categ: action.category\n    }, {\n      headers: {\n        'data-categ': 'category'\n      }\n    });\n    yield put(actions.fetchNavlist(action.category, response.data));\n  } catch (e) {}\n}\nexport function* fetchNotifyActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {}, {\n      headers: {\n        'data-categ': 'allnotification'\n      }\n    });\n    yield put(actions.fetchNotifyActive(response.data.collTotal));\n  } catch (err) {}\n}\nexport function* defaultNotifyActiveInitSaga(action) {\n  try {\n    yield axios.post('/header', {}, {\n      headers: {\n        'data-categ': 'resetnotification'\n      }\n    });\n    yield put(actions.defaultNotifyActive());\n  } catch (err) {}\n}\nexport function* headerFilterInitSaga(action) {\n  try {\n    yield put(actions.headerFilterStart(action.filterPos, action.filterLastPos));\n    let response = yield axios.post('/header', {\n      filterCnt: action.filterCnt\n    }, {\n      headers: {\n        'data-categ': 'headerfilter'\n      }\n    });\n    yield put(actions.headerFilter(response.data));\n  } catch (err) {\n    yield put(actions.headerFilterFail(err));\n  }\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/header.js"],"names":["put","axios","changeFav","actions","fetchNotifyInitSaga","action","fetchNotifyStart","response","post","fetchCnt","headers","data","collTotal","fetchNotify","coll","err","fetchNotifyFail","changeFavNotifySaga","notify","notifyID","changeFavNotifyStart","updateStartArray","changeFavNotify","updateDataArray","fetchNavlistInitSaga","fetchNavlistStart","categ","category","fetchNavlist","e","fetchNotifyActiveInitSaga","fetchNotifyActive","defaultNotifyActiveInitSaga","defaultNotifyActive","headerFilterInitSaga","headerFilterStart","filterPos","filterLastPos","filterCnt","headerFilter","headerFilterFail"],"mappings":"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","sourcesContent":["import { put } from 'redux-saga/effects';\r\n\r\nimport axios from '../../axios';\r\nimport { changeFav } from '../../shared/utility';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport function* fetchNotifyInitSaga(action) {\r\n    try {\r\n        yield put(actions.fetchNotifyStart());\r\n        let response = yield axios.post('/header', {fetchCnt: true}, {headers: {'data-categ':'allnotification'}});\r\n        if (response.data.collTotal > 0) {\r\n            yield put(actions.fetchNotify(response.data.coll));\r\n        } else {\r\n            yield put(actions.fetchNotify([]));\r\n        }\r\n    } catch(err) {\r\n        yield put(actions.fetchNotifyFail(err));\r\n    }\r\n}\r\n\r\nexport function* changeFavNotifySaga(action) {\r\n    let notify = changeFav(action.notify ,action.notifyID);\r\n    yield put(actions.changeFavNotifyStart(notify.updateStartArray));\r\n    yield put(actions.changeFavNotify(notify.updateDataArray));\r\n}\r\n\r\nexport function* fetchNavlistInitSaga(action) {\r\n    try {\r\n        yield put(actions.fetchNavlistStart());\r\n        let response = yield axios.post('/header', {categ: action.category}, {headers: {'data-categ':'category'}});\r\n        yield put(actions.fetchNavlist(action.category, response.data))\r\n    } catch(e) {}\r\n}\r\n\r\nexport function* fetchNotifyActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', {}, {headers: {'data-categ':'allnotification'}});\r\n        yield put(actions.fetchNotifyActive(response.data.collTotal));\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* defaultNotifyActiveInitSaga(action) {\r\n    try {\r\n         yield axios.post('/header', {}, {headers: {'data-categ':'resetnotification'}});\r\n        yield put(actions.defaultNotifyActive());\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* headerFilterInitSaga(action) {\r\n    try {\r\n        yield put(actions.headerFilterStart(action.filterPos, action.filterLastPos));\r\n        let response = yield axios.post('/header', {filterCnt: action.filterCnt}, {headers: {'data-categ':'headerfilter'}});\r\n        yield put(actions.headerFilter(response.data));\r\n    } catch(err) {\r\n        yield put(actions.headerFilterFail(err))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}