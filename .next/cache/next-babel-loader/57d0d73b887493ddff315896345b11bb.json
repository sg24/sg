{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkAuthInitSaga);\n\nimport { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function checkAuthInitSaga(action) {\n  var expiresIn, response;\n  return _regeneratorRuntime.wrap(function checkAuthInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          expiresIn = document.cookie.replace(/(?:(?:^|.*;\\s*)expiresIn\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n\n          if (!(expiresIn && new Date(new Date(expiresIn * 1000).getTime()) >= new Date().getTime())) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 4;\n          return put(actions.checkAuth(true));\n\n        case 4:\n          _context.prev = 4;\n          _context.next = 7;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'userimg'\n            }\n          });\n\n        case 7:\n          response = _context.sent;\n\n          if (!response.data.url) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 11;\n          return put(actions.checkUserImg(response.data.url));\n\n        case 11:\n          _context.next = 15;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return put(actions.checkUserName(response.data.name));\n\n        case 15:\n          _context.next = 19;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](4);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 17]]);\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/auth.js"],"names":["checkAuthInitSaga","put","actions","axios","action","expiresIn","document","cookie","replace","Date","getTime","checkAuth","post","headers","response","data","url","checkUserImg","checkUserName","name"],"mappings":";;;;yBAKiBA,iB;;AALjB,SAASC,GAAT,QAAoB,oBAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,SAAUH,iBAAV,CAA4BI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,UAAAA,SADD,GACcC,QAAQ,CAACC,MAAT,CAAgBC,OAAhB,CAAwB,kDAAxB,EAA4E,IAA5E,CADd;;AAAA,gBAECH,SAAS,IAAK,IAAII,IAAJ,CAAS,IAAIA,IAAJ,CAASJ,SAAS,GAAC,IAAnB,EAAyBK,OAAzB,EAAT,KAAgD,IAAID,IAAJ,GAAWC,OAAX,EAF/D;AAAA;AAAA;AAAA;;AAAA;AAGC,iBAAMT,GAAG,CAACC,OAAO,CAACS,SAAR,CAAkB,IAAlB,CAAD,CAAT;;AAHD;AAAA;AAAA;AAKoB,iBAAMR,KAAK,CAACS,IAAN,CAAW,SAAX,EAAsB,EAAtB,EAA0B;AAACC,YAAAA,OAAO,EAAE;AAAC,4BAAa;AAAd;AAAV,WAA1B,CAAN;;AALpB;AAKSC,UAAAA,QALT;;AAAA,eAMSA,QAAQ,CAACC,IAAT,CAAcC,GANvB;AAAA;AAAA;AAAA;;AAAA;AAOS,iBAAMf,GAAG,CAACC,OAAO,CAACe,YAAR,CAAqBH,QAAQ,CAACC,IAAT,CAAcC,GAAnC,CAAD,CAAT;;AAPT;AAAA;AAAA;;AAAA;AAAA;AASS,iBAAMf,GAAG,CAACC,OAAO,CAACgB,aAAR,CAAsBJ,QAAQ,CAACC,IAAT,CAAcI,IAApC,CAAD,CAAT;;AATT;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\nexport function* checkAuthInitSaga(action) {\r\n    let expiresIn =  document.cookie.replace(/(?:(?:^|.*;\\s*)expiresIn\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\r\n    if (expiresIn && (new Date(new Date(expiresIn*1000).getTime()) >= new Date().getTime())) {\r\n        yield put(actions.checkAuth(true))\r\n        try {\r\n            let response = yield axios.post('/header', {}, {headers: {'data-categ':'userimg'}});\r\n            if (response.data.url) {\r\n                yield put(actions.checkUserImg(response.data.url));\r\n            } else {\r\n                yield put(actions.checkUserName(response.data.name));\r\n            }\r\n            \r\n        } catch(err) {}\r\n        \r\n    } \r\n} "]},"metadata":{},"sourceType":"module"}