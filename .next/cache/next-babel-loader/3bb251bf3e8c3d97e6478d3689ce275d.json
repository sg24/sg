{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function* fetchPtActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'post'\n    }, {\n      headers: {\n        'data-categ': ' modelNotify'\n      }\n    });\n    yield put(actions.fetchPtActive(response.data));\n    return;\n  } catch (err) {}\n}\nexport function* fetchQueActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'question'\n    }, {\n      headers: {\n        'data-categ': ' modelNotify'\n      }\n    });\n    yield put(actions.fetchQueActive(response.data));\n    return;\n  } catch (err) {}\n}\nexport function* fetchCntActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'poet'\n    }, {\n      headers: {\n        'data-categ': ' modelNotify'\n      }\n    });\n    yield put(actions.fetchCntActive(response.data));\n  } catch (err) {}\n}\nexport function* fetchShareCntActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {\n      model: 'question'\n    }, {\n      headers: {\n        'data-categ': 'share'\n      }\n    });\n    yield put(actions.fetchShareCntActive(response.data));\n  } catch (err) {}\n}\nexport function* fetchReqActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/users', null, {\n      headers: {\n        'data-categ': 'request-activeOnly'\n      }\n    });\n    yield put(actions.fetchReqActive(response.data));\n  } catch (err) {}\n}\nexport function* fetchShareActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {}, {\n      headers: {\n        'data-categ': 'notification'\n      }\n    });\n    yield put(actions.fetchShareActive(response.data));\n  } catch (err) {}\n}\nexport function* resetActiveInitSaga(action) {\n  try {\n    if (action.curTab === 'helpme') {\n      yield axios.patch('/header', {\n        model: 'question'\n      }, {\n        headers: {\n          'data-categ': 'share'\n        }\n      });\n    } else {\n      yield axios.patch('/header', {\n        model: action.curTab\n      }, {\n        headers: {\n          'data-categ': 'modelNotify'\n        }\n      });\n    }\n\n    yield put(actions.resetActive(action.curTab));\n  } catch (err) {}\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/main.js"],"names":["put","actions","axios","fetchPtActiveInitSaga","action","response","post","model","headers","fetchPtActive","data","err","fetchQueActiveInitSaga","fetchQueActive","fetchCntActiveInitSaga","fetchCntActive","fetchShareCntActiveInitSaga","fetchShareCntActive","fetchReqActiveInitSaga","fetchReqActive","fetchShareActiveInitSaga","fetchShareActive","resetActiveInitSaga","curTab","patch","resetActive"],"mappings":"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","sourcesContent":["import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\nexport function* fetchPtActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'post'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchPtActive(response.data));\r\n        return\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchQueActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'question'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchQueActive(response.data));\r\n        return\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchCntActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'poet'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchCntActive(response.data));\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchShareCntActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'question'}, {headers: {'data-categ': 'share'}});\r\n        yield put(actions.fetchShareCntActive(response.data));\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* fetchReqActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/users', null,{headers: {'data-categ': 'request-activeOnly'}});\r\n        yield put(actions.fetchReqActive(response.data));\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchShareActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', {}, {headers: {'data-categ':'notification'}});\r\n        yield put(actions.fetchShareActive(response.data));        \r\n    } catch(err) {}\r\n}\r\n\r\nexport function* resetActiveInitSaga(action) {\r\n    try {\r\n        if (action.curTab === 'helpme') {\r\n            yield axios.patch('/header', {model: 'question'}, {headers: {'data-categ': 'share'}});\r\n        } else {\r\n            yield axios.patch('/header', {model: action.curTab}, {headers: {'data-categ': 'modelNotify'}});\r\n        }\r\n        yield put(actions.resetActive(action.curTab));\r\n    } catch(err) {}\r\n}"]},"metadata":{},"sourceType":"module"}