{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchNotifyInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(changeFavNotifySaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchNavlistInitSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchNotifyActiveInitSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(defaultNotifyActiveInitSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(headerFilterInitSaga);\n\nimport { put } from 'redux-saga/effects';\nimport axios from '../../axios';\nimport { changeFav } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nexport function fetchNotifyInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchNotifyInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put(actions.fetchNotifyStart());\n\n        case 3:\n          _context.next = 5;\n          return axios.post('/header', {\n            fetchCnt: true\n          }, {\n            headers: {\n              'data-categ': 'allnotification'\n            }\n          });\n\n        case 5:\n          response = _context.sent;\n\n          if (!(response.data.collTotal > 0)) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 9;\n          return put(actions.fetchNotify(response.data.coll));\n\n        case 9:\n          _context.next = 13;\n          break;\n\n        case 11:\n          _context.next = 13;\n          return put(actions.fetchNotify([]));\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 19;\n          return put(actions.fetchNotifyFail(_context.t0));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 15]]);\n}\nexport function changeFavNotifySaga(action) {\n  var notify;\n  return _regeneratorRuntime.wrap(function changeFavNotifySaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          notify = changeFav(action.notify, action.notifyID);\n          _context2.next = 3;\n          return put(actions.changeFavNotifyStart(notify.updateStartArray));\n\n        case 3:\n          _context2.next = 5;\n          return put(actions.changeFavNotify(notify.updateDataArray));\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function fetchNavlistInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchNavlistInitSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put(actions.fetchNavlistStart());\n\n        case 3:\n          _context3.next = 5;\n          return axios.post('/header', {\n            categ: action.category\n          }, {\n            headers: {\n              'data-categ': 'category'\n            }\n          });\n\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return put(actions.fetchNavlist(action.category, response.data));\n\n        case 8:\n          _context3.next = 12;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\nexport function fetchNotifyActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchNotifyActiveInitSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'allnotification'\n            }\n          });\n\n        case 3:\n          response = _context4.sent;\n          _context4.next = 6;\n          return put(actions.fetchNotifyActive(response.data.collTotal));\n\n        case 6:\n          _context4.next = 10;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\nexport function defaultNotifyActiveInitSaga(action) {\n  return _regeneratorRuntime.wrap(function defaultNotifyActiveInitSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'resetnotification'\n            }\n          });\n\n        case 3:\n          _context5.next = 5;\n          return put(actions.defaultNotifyActive());\n\n        case 5:\n          _context5.next = 9;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\nexport function headerFilterInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function headerFilterInitSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return put(actions.headerFilterStart(action.filterPos, action.filterLastPos));\n\n        case 3:\n          _context6.next = 5;\n          return axios.post('/header', {\n            filterCnt: action.filterCnt\n          }, {\n            headers: {\n              'data-categ': 'headerfilter'\n            }\n          });\n\n        case 5:\n          response = _context6.sent;\n          _context6.next = 8;\n          return put(actions.headerFilter(response.data));\n\n        case 8:\n          _context6.next = 14;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 14;\n          return put(actions.headerFilterFail(_context6.t0));\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 10]]);\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/header.js"],"names":["fetchNotifyInitSaga","changeFavNotifySaga","fetchNavlistInitSaga","fetchNotifyActiveInitSaga","defaultNotifyActiveInitSaga","headerFilterInitSaga","put","axios","changeFav","actions","action","fetchNotifyStart","post","fetchCnt","headers","response","data","collTotal","fetchNotify","coll","fetchNotifyFail","notify","notifyID","changeFavNotifyStart","updateStartArray","changeFavNotify","updateDataArray","fetchNavlistStart","categ","category","fetchNavlist","fetchNotifyActive","defaultNotifyActive","headerFilterStart","filterPos","filterLastPos","filterCnt","headerFilter","headerFilterFail"],"mappings":"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","sourcesContent":["import { put } from 'redux-saga/effects';\r\n\r\nimport axios from '../../axios';\r\nimport { changeFav } from '../../shared/utility';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport function* fetchNotifyInitSaga(action) {\r\n    try {\r\n        yield put(actions.fetchNotifyStart());\r\n        let response = yield axios.post('/header', {fetchCnt: true}, {headers: {'data-categ':'allnotification'}});\r\n        if (response.data.collTotal > 0) {\r\n            yield put(actions.fetchNotify(response.data.coll));\r\n        } else {\r\n            yield put(actions.fetchNotify([]));\r\n        }\r\n    } catch(err) {\r\n        yield put(actions.fetchNotifyFail(err));\r\n    }\r\n}\r\n\r\nexport function* changeFavNotifySaga(action) {\r\n    let notify = changeFav(action.notify ,action.notifyID);\r\n    yield put(actions.changeFavNotifyStart(notify.updateStartArray));\r\n    yield put(actions.changeFavNotify(notify.updateDataArray));\r\n}\r\n\r\nexport function* fetchNavlistInitSaga(action) {\r\n    try {\r\n        yield put(actions.fetchNavlistStart());\r\n        let response = yield axios.post('/header', {categ: action.category}, {headers: {'data-categ':'category'}});\r\n        yield put(actions.fetchNavlist(action.category, response.data))\r\n    } catch(e) {}\r\n}\r\n\r\nexport function* fetchNotifyActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', {}, {headers: {'data-categ':'allnotification'}});\r\n        yield put(actions.fetchNotifyActive(response.data.collTotal));\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* defaultNotifyActiveInitSaga(action) {\r\n    try {\r\n         yield axios.post('/header', {}, {headers: {'data-categ':'resetnotification'}});\r\n        yield put(actions.defaultNotifyActive());\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* headerFilterInitSaga(action) {\r\n    try {\r\n        yield put(actions.headerFilterStart(action.filterPos, action.filterLastPos));\r\n        let response = yield axios.post('/header', {filterCnt: action.filterCnt}, {headers: {'data-categ':'headerfilter'}});\r\n        yield put(actions.headerFilter(response.data));\r\n    } catch(err) {\r\n        yield put(actions.headerFilterFail(err))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}