{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchPtActiveInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchQueActiveInitSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCntActiveInitSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchShareCntActiveInitSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchReqActiveInitSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchShareActiveInitSaga),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(resetActiveInitSaga);\n\nimport { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function fetchPtActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchPtActiveInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.post('/header', {\n            model: 'post'\n          }, {\n            headers: {\n              'data-categ': ' modelNotify'\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return put(actions.fetchPtActive(response.data));\n\n        case 6:\n          return _context.abrupt(\"return\");\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\nexport function fetchQueActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchQueActiveInitSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return axios.post('/header', {\n            model: 'question'\n          }, {\n            headers: {\n              'data-categ': ' modelNotify'\n            }\n          });\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return put(actions.fetchQueActive(response.data));\n\n        case 6:\n          return _context2.abrupt(\"return\");\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\nexport function fetchCntActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchCntActiveInitSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return axios.post('/header', {\n            model: 'poet'\n          }, {\n            headers: {\n              'data-categ': ' modelNotify'\n            }\n          });\n\n        case 3:\n          response = _context3.sent;\n          _context3.next = 6;\n          return put(actions.fetchCntActive(response.data));\n\n        case 6:\n          _context3.next = 10;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\nexport function fetchShareCntActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchShareCntActiveInitSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return axios.post('/header', {\n            model: 'question'\n          }, {\n            headers: {\n              'data-categ': 'share'\n            }\n          });\n\n        case 3:\n          response = _context4.sent;\n          _context4.next = 6;\n          return put(actions.fetchShareCntActive(response.data));\n\n        case 6:\n          _context4.next = 10;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\nexport function fetchReqActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchReqActiveInitSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return axios.post('/users', null, {\n            headers: {\n              'data-categ': 'request-activeOnly'\n            }\n          });\n\n        case 3:\n          response = _context5.sent;\n          _context5.next = 6;\n          return put(actions.fetchReqActive(response.data));\n\n        case 6:\n          _context5.next = 10;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\nexport function fetchShareActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchShareActiveInitSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'notification'\n            }\n          });\n\n        case 3:\n          response = _context6.sent;\n          _context6.next = 6;\n          return put(actions.fetchShareActive(response.data));\n\n        case 6:\n          _context6.next = 10;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\nexport function resetActiveInitSaga(action) {\n  return _regeneratorRuntime.wrap(function resetActiveInitSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n\n          if (!(action.curTab === 'helpme')) {\n            _context7.next = 6;\n            break;\n          }\n\n          _context7.next = 4;\n          return axios.patch('/header', {\n            model: 'question'\n          }, {\n            headers: {\n              'data-categ': 'share'\n            }\n          });\n\n        case 4:\n          _context7.next = 8;\n          break;\n\n        case 6:\n          _context7.next = 8;\n          return axios.patch('/header', {\n            model: action.curTab\n          }, {\n            headers: {\n              'data-categ': 'modelNotify'\n            }\n          });\n\n        case 8:\n          _context7.next = 10;\n          return put(actions.resetActive(action.curTab));\n\n        case 10:\n          _context7.next = 14;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 12]]);\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/main.js"],"names":["fetchPtActiveInitSaga","fetchQueActiveInitSaga","fetchCntActiveInitSaga","fetchShareCntActiveInitSaga","fetchReqActiveInitSaga","fetchShareActiveInitSaga","resetActiveInitSaga","put","actions","axios","action","post","model","headers","response","fetchPtActive","data","fetchQueActive","fetchCntActive","fetchShareCntActive","fetchReqActive","fetchShareActive","curTab","patch","resetActive"],"mappings":";;;;yBAKiBA,qB;;;yBASAC,sB;;;yBASAC,sB;;;yBAQAC,2B;;;yBAOAC,sB;;;yBAQAC,wB;;;yBAOAC,mB;;AArDjB,SAASC,GAAT,QAAoB,oBAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,SAAUT,qBAAV,CAAgCU,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMD,KAAK,CAACE,IAAN,CAAW,SAAX,EAAsB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAtB,EAAwC;AAACC,YAAAA,OAAO,EAAE;AAAC,4BAAc;AAAf;AAAV,WAAxC,CAAN;;AAFhB;AAEKC,UAAAA,QAFL;AAAA;AAGC,iBAAMP,GAAG,CAACC,OAAO,CAACO,aAAR,CAAsBD,QAAQ,CAACE,IAA/B,CAAD,CAAT;;AAHD;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,OAAO,SAAUf,sBAAV,CAAiCS,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMD,KAAK,CAACE,IAAN,CAAW,SAAX,EAAsB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAtB,EAA4C;AAACC,YAAAA,OAAO,EAAE;AAAC,4BAAc;AAAf;AAAV,WAA5C,CAAN;;AAFhB;AAEKC,UAAAA,QAFL;AAAA;AAGC,iBAAMP,GAAG,CAACC,OAAO,CAACS,cAAR,CAAuBH,QAAQ,CAACE,IAAhC,CAAD,CAAT;;AAHD;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,OAAO,SAAUd,sBAAV,CAAiCQ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMD,KAAK,CAACE,IAAN,CAAW,SAAX,EAAsB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAtB,EAAwC;AAACC,YAAAA,OAAO,EAAE;AAAC,4BAAc;AAAf;AAAV,WAAxC,CAAN;;AAFhB;AAEKC,UAAAA,QAFL;AAAA;AAGC,iBAAMP,GAAG,CAACC,OAAO,CAACU,cAAR,CAAuBJ,QAAQ,CAACE,IAAhC,CAAD,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAAUb,2BAAV,CAAsCO,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMD,KAAK,CAACE,IAAN,CAAW,SAAX,EAAsB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAtB,EAA4C;AAACC,YAAAA,OAAO,EAAE;AAAC,4BAAc;AAAf;AAAV,WAA5C,CAAN;;AAFhB;AAEKC,UAAAA,QAFL;AAAA;AAGC,iBAAMP,GAAG,CAACC,OAAO,CAACW,mBAAR,CAA4BL,QAAQ,CAACE,IAArC,CAAD,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOP,OAAO,SAAUZ,sBAAV,CAAiCM,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMD,KAAK,CAACE,IAAN,CAAW,QAAX,EAAqB,IAArB,EAA0B;AAACE,YAAAA,OAAO,EAAE;AAAC,4BAAc;AAAf;AAAV,WAA1B,CAAN;;AAFhB;AAEKC,UAAAA,QAFL;AAAA;AAGC,iBAAMP,GAAG,CAACC,OAAO,CAACY,cAAR,CAAuBN,QAAQ,CAACE,IAAhC,CAAD,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAAUX,wBAAV,CAAmCK,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEgB,iBAAMD,KAAK,CAACE,IAAN,CAAW,SAAX,EAAsB,EAAtB,EAA0B;AAACE,YAAAA,OAAO,EAAE;AAAC,4BAAa;AAAd;AAAV,WAA1B,CAAN;;AAFhB;AAEKC,UAAAA,QAFL;AAAA;AAGC,iBAAMP,GAAG,CAACC,OAAO,CAACa,gBAAR,CAAyBP,QAAQ,CAACE,IAAlC,CAAD,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOP,OAAO,SAAUV,mBAAV,CAA8BI,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEKA,MAAM,CAACY,MAAP,KAAkB,QAFvB;AAAA;AAAA;AAAA;;AAAA;AAGK,iBAAMb,KAAK,CAACc,KAAN,CAAY,SAAZ,EAAuB;AAACX,YAAAA,KAAK,EAAE;AAAR,WAAvB,EAA4C;AAACC,YAAAA,OAAO,EAAE;AAAC,4BAAc;AAAf;AAAV,WAA5C,CAAN;;AAHL;AAAA;AAAA;;AAAA;AAAA;AAKK,iBAAMJ,KAAK,CAACc,KAAN,CAAY,SAAZ,EAAuB;AAACX,YAAAA,KAAK,EAAEF,MAAM,CAACY;AAAf,WAAvB,EAA+C;AAACT,YAAAA,OAAO,EAAE;AAAC,4BAAc;AAAf;AAAV,WAA/C,CAAN;;AALL;AAAA;AAOC,iBAAMN,GAAG,CAACC,OAAO,CAACgB,WAAR,CAAoBd,MAAM,CAACY,MAA3B,CAAD,CAAT;;AAPD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\nexport function* fetchPtActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'post'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchPtActive(response.data));\r\n        return\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchQueActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'question'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchQueActive(response.data));\r\n        return\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchCntActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'poet'}, {headers: {'data-categ': ' modelNotify'}});\r\n        yield put(actions.fetchCntActive(response.data));\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchShareCntActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', { model: 'question'}, {headers: {'data-categ': 'share'}});\r\n        yield put(actions.fetchShareCntActive(response.data));\r\n    } catch(err) {}\r\n}\r\n\r\nexport function* fetchReqActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/users', null,{headers: {'data-categ': 'request-activeOnly'}});\r\n        yield put(actions.fetchReqActive(response.data));\r\n    } catch(err) {}\r\n\r\n}\r\n\r\nexport function* fetchShareActiveInitSaga(action) {\r\n    try {\r\n        let response = yield axios.post('/header', {}, {headers: {'data-categ':'notification'}});\r\n        yield put(actions.fetchShareActive(response.data));        \r\n    } catch(err) {}\r\n}\r\n\r\nexport function* resetActiveInitSaga(action) {\r\n    try {\r\n        if (action.curTab === 'helpme') {\r\n            yield axios.patch('/header', {model: 'question'}, {headers: {'data-categ': 'share'}});\r\n        } else {\r\n            yield axios.patch('/header', {model: action.curTab}, {headers: {'data-categ': 'modelNotify'}});\r\n        }\r\n        yield put(actions.resetActive(action.curTab));\r\n    } catch(err) {}\r\n}"]},"metadata":{},"sourceType":"module"}