{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConvItems from '../../../../components/Main/Nav/ConvItems/ConvItems';\nimport * as actions from '../../../../store/actions/index';\nimport { updateObject } from '../../../../shared/utility';\n\nclass Conversation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      convOpt: null\n    });\n\n    _defineProperty(this, \"showUserOptHandler\", index => {\n      if (this.state.convOpt && this.state.convOpt.index === index) {\n        this.setState((prevState, props) => {\n          return {\n            convOpt: updateObject(prevState.convOpt, {\n              visible: !prevState.convOpt.visible\n            })\n          };\n        });\n        return;\n      }\n\n      const newConvOpt = {\n        visible: true,\n        index\n      };\n      this.setState({\n        convOpt: newConvOpt\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.onFetchConv();\n  }\n\n  render() {\n    let convs = null;\n\n    if (this.props.conv) {\n      convs = __jsx(ConvItems, {\n        convs: this.props.conv,\n        userOpt: this.showUserOptHandler,\n        showConvOpt: this.state.convOpt\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"reuse-conv\"\n    }, __jsx(\"div\", {\n      className: \"reuse-conv__title\"\n    }, __jsx(\"div\", {\n      className: \"reuse-conv__title--wrapper\"\n    }, __jsx(\"div\", null, __jsx(FontAwesomeIcon, {\n      icon: ['far', 'comment-dots'],\n      className: \"icon icon__reuse-conv--comment\"\n    })), \"Conversations\")), convs);\n  }\n\n}\n\nconst mapStateToPros = state => {\n  return {\n    conv: state.conv.conv\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchConv: () => dispatch(actions.fetchConvInit())\n  };\n};\n\nexport default connect(mapStateToPros, mapDispatchToProps)(Conversation);","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/containers/SiteMain/MainNav/Conversation/Conversation.js"],"names":["React","Component","connect","FontAwesomeIcon","ConvItems","actions","updateObject","Conversation","convOpt","index","state","setState","prevState","props","visible","newConvOpt","componentDidMount","onFetchConv","render","convs","conv","showUserOptHandler","mapStateToPros","mapDispatchToProps","dispatch","fetchConvInit"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,SAAP,MAAsB,qDAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCACzB;AACJO,MAAAA,OAAO,EAAE;AADL,KADyB;;AAAA,gDASXC,KAAD,IAAW;AAC5B,UAAI,KAAKC,KAAL,CAAWF,OAAX,IAAsB,KAAKE,KAAL,CAAWF,OAAX,CAAmBC,KAAnB,KAA6BA,KAAvD,EAA8D;AAC1D,aAAKE,QAAL,CAAc,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChC,iBAAO;AACHL,YAAAA,OAAO,EAAEF,YAAY,CAACM,SAAS,CAACJ,OAAX,EAAoB;AAACM,cAAAA,OAAO,EAAE,CAACF,SAAS,CAACJ,OAAV,CAAkBM;AAA7B,aAApB;AADlB,WAAP;AAGH,SAJD;AAKA;AACH;;AAED,YAAMC,UAAU,GAAG;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBL,QAAAA;AAAhB,OAAnB;AACA,WAAKE,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAEO;AAAV,OAAd;AACH,KArBgC;AAAA;;AAKjCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWI,WAAX;AACH;;AAgBDC,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,IAAZ;;AAEA,QAAI,KAAKN,KAAL,CAAWO,IAAf,EAAqB;AACjBD,MAAAA,KAAK,GAAG,MAAC,SAAD;AACJ,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,IADd;AAEJ,QAAA,OAAO,EAAE,KAAKC,kBAFV;AAGJ,QAAA,WAAW,EAAE,KAAKX,KAAL,CAAWF;AAHpB,QAAR;AAIH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACA;AAAK,MAAA,SAAS,EAAC;AAAf,OACG;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,mBACK,MAAC,eAAD;AACI,MAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,cAAR,CADV;AAEI,MAAA,SAAS,EAAC;AAFd,MADL,CADJ,kBADH,CADA,EAWEW,KAXF,CADJ;AAeH;;AAhDgC;;AAmDrC,MAAMG,cAAc,GAAGZ,KAAK,IAAI;AAC5B,SAAO;AACHU,IAAAA,IAAI,EAAEV,KAAK,CAACU,IAAN,CAAWA;AADd,GAAP;AAGH,CAJD;;AAMA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHP,IAAAA,WAAW,EAAE,MAAMO,QAAQ,CAACnB,OAAO,CAACoB,aAAR,EAAD;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAevB,OAAO,CAACoB,cAAD,EAAiBC,kBAAjB,CAAP,CAA4ChB,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport ConvItems from '../../../../components/Main/Nav/ConvItems/ConvItems';\r\nimport * as actions from '../../../../store/actions/index';\r\nimport { updateObject } from '../../../../shared/utility';\r\n\r\nclass Conversation extends Component {\r\n    state = {\r\n        convOpt: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchConv();\r\n    }\r\n\r\n    showUserOptHandler = (index) => {\r\n        if (this.state.convOpt && this.state.convOpt.index === index) {\r\n            this.setState((prevState, props) => {\r\n                return {\r\n                    convOpt: updateObject(prevState.convOpt, {visible: !prevState.convOpt.visible})\r\n                }\r\n            });\r\n            return\r\n        }\r\n\r\n        const newConvOpt = {visible: true, index}\r\n        this.setState({convOpt: newConvOpt})\r\n    }\r\n\r\n    render() {\r\n        let convs = null;\r\n\r\n        if (this.props.conv) {\r\n            convs = <ConvItems \r\n                convs={this.props.conv}\r\n                userOpt={this.showUserOptHandler}\r\n                showConvOpt={this.state.convOpt}/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-conv\">\r\n            <div className=\"reuse-conv__title\">\r\n               <div className=\"reuse-conv__title--wrapper\">\r\n                   <div>\r\n                        <FontAwesomeIcon \r\n                            icon={['far', 'comment-dots']} \r\n                            className=\"icon icon__reuse-conv--comment\" /> \r\n                    </div> \r\n                    Conversations\r\n               </div>\r\n            </div>\r\n            { convs }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToPros = state => {\r\n    return {\r\n        conv: state.conv.conv\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchConv: () => dispatch(actions.fetchConvInit())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToPros, mapDispatchToProps)(Conversation);"]},"metadata":{},"sourceType":"module"}