{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../store/actions/index';\nimport TrendItems from '../../../../components/Main/Nav/TrendItems/TrendItems';\nimport Loader from '../../../../components/UI/Loader/Loader';\n\nclass TopTrending extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"changeFavoriteHandler\", (id, isLiked, favAdd, cntGrp) => {\n      this.props.onChangeFav(id, isLiked, favAdd, this.props.changedFav, this.props.userID, cntGrp);\n    });\n  }\n\n  render() {\n    let trends = __jsx(Loader, null);\n\n    if (this.props.trd) {\n      trends = __jsx(TrendItems, {\n        content: this.props.trd,\n        fav: this.changeFavoriteHandler,\n        changedFav: this.props.changedFav,\n        favChange: this.props.favChange\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"reuse-trd reuse-trd__nav\"\n    }, __jsx(\"h3\", null, \" Top Trendings\"), __jsx(\"div\", {\n      className: \"reuse-trd__cnt reuse-trd__cnt--nav\"\n    }, trends));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    trd: state.trd.trends,\n    changedFav: state.cnt.changedFav,\n    favChange: state.cnt.favChange,\n    userID: state.auth.userID\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChangeFav: (id, liked, favAdd, changedFav, userID, cntGrp) => dispatch(actions.changeFavInit(id, liked, favAdd, changedFav, userID, cntGrp))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopTrending);","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/containers/SiteMain/MainNav/TopTrending/TopTrending.js"],"names":["React","Component","connect","actions","TrendItems","Loader","TopTrending","id","isLiked","favAdd","cntGrp","props","onChangeFav","changedFav","userID","render","trends","trd","changeFavoriteHandler","favChange","mapStateToProps","state","cnt","auth","mapDispatchToProps","dispatch","liked","changeFavInit"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;AACA,OAAOC,UAAP,MAAuB,uDAAvB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mDACR,CAACM,EAAD,EAAKC,OAAL,EAAcC,MAAd,EAAsBC,MAAtB,KAAiC;AACrD,WAAKC,KAAL,CAAWC,WAAX,CAAuBL,EAAvB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4C,KAAKE,KAAL,CAAWE,UAAvD,EAAmE,KAAKF,KAAL,CAAWG,MAA9E,EAAsFJ,MAAtF;AACH,KAH+B;AAAA;;AAKhCK,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAG,MAAC,MAAD,OAAb;;AAEA,QAAI,KAAKL,KAAL,CAAWM,GAAf,EAAoB;AAChBD,MAAAA,MAAM,GAAG,MAAC,UAAD;AACT,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,GADX;AAET,QAAA,GAAG,EAAE,KAAKC,qBAFD;AAGT,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWE,UAHd;AAIT,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWQ;AAJb,QAAT;AAKH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,mCADJ,EAEI;AAAK,MAAA,SAAS,EAAC;AAAf,OACMH,MADN,CAFJ,CADJ;AAQH;;AAxB+B;;AA2BpC,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,GAAG,EAAEI,KAAK,CAACJ,GAAN,CAAUD,MADZ;AAEHH,IAAAA,UAAU,EAAEQ,KAAK,CAACC,GAAN,CAAUT,UAFnB;AAGHM,IAAAA,SAAS,EAAEE,KAAK,CAACC,GAAN,CAAUH,SAHlB;AAIHL,IAAAA,MAAM,EAAEO,KAAK,CAACE,IAAN,CAAWT;AAJhB,GAAP;AAMH,CAPD;;AASA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHb,IAAAA,WAAW,EAAE,CAACL,EAAD,EAAKmB,KAAL,EAAYjB,MAAZ,EAAoBI,UAApB,EAAgCC,MAAhC,EAAwCJ,MAAxC,KAAmDe,QAAQ,CAACtB,OAAO,CAACwB,aAAR,CAAsBpB,EAAtB,EAA0BmB,KAA1B,EAAiCjB,MAAjC,EAAyCI,UAAzC,EAAqDC,MAArD,EAA6DJ,MAA7D,CAAD;AADrE,GAAP;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../../store/actions/index';\r\nimport TrendItems from '../../../../components/Main/Nav/TrendItems/TrendItems';\r\nimport Loader from '../../../../components/UI/Loader/Loader';\r\n\r\nclass TopTrending extends Component {\r\n    changeFavoriteHandler = (id, isLiked, favAdd, cntGrp) => {\r\n        this.props.onChangeFav(id, isLiked, favAdd, this.props.changedFav, this.props.userID, cntGrp)\r\n    };\r\n\r\n    render() {\r\n        let trends = <Loader />;\r\n\r\n        if (this.props.trd) {\r\n            trends = <TrendItems \r\n            content={this.props.trd}\r\n            fav={this.changeFavoriteHandler}\r\n            changedFav={this.props.changedFav}\r\n            favChange={this.props.favChange}/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"reuse-trd reuse-trd__nav\">\r\n                <h3> Top Trendings</h3>\r\n                <div className=\"reuse-trd__cnt reuse-trd__cnt--nav\">\r\n                    { trends }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        trd: state.trd.trends,\r\n        changedFav: state.cnt.changedFav,\r\n        favChange: state.cnt.favChange,\r\n        userID: state.auth.userID,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onChangeFav: (id, liked, favAdd, changedFav, userID, cntGrp) => dispatch(actions.changeFavInit(id, liked, favAdd, changedFav, userID, cntGrp))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopTrending);"]},"metadata":{},"sourceType":"module"}