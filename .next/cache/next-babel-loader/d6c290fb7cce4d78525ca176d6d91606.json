{"ast":null,"code":"import { put, delay } from 'redux-saga/effects';\nimport { changeFav } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function* fetchCntInitSaga(action) {\n  let model = action.fetchType === 'post' ? '/post' : action.fetchType === 'question' || action.fetchType === 'shared' ? '/question' : '/' + action.fetchType;\n  let categ = action.fetchType === 'shared' ? `shared-${action.userID}` : action.fetchType;\n\n  if (action.cntTotal > action.skipCnt) {\n    yield put(actions.fetchCntStart());\n  }\n\n  try {\n    if (action.cntTotal === 0 || action.cntTotal > action.skipCnt) {\n      let response = yield axios.post(model, null, {\n        headers: {\n          'data-categ': categ,\n          'limit': action.fetchLimit,\n          'skip': action.skipCnt\n        }\n      });\n      yield put(actions.fetchCnt(response.data.cnt, action.skipCnt, response.data.cntTotal));\n    }\n  } catch (err) {\n    yield put(actions.fetchCntFail(err));\n  }\n}\nexport function* changeFavSaga(action) {\n  let updateFav = changeFav(action.id, action.liked, action.favAdd, action.changedFav);\n  yield put(actions.changeMainFavoriteStart(updateFav.favDet.liked));\n  yield put(actions.changeFavPtStart(updateFav.favDet.id, updateFav.favDet.liked));\n\n  try {\n    let field = action.cntGrp === 'post' ? 'postID' : action.cntGrp === 'question' ? 'queID' : 'pwtID';\n    yield axios.patch('/header', {\n      id: updateFav.favDet.id,\n      model: action.cntGrp,\n      field\n    }, {\n      headers: {\n        'data-categ': 'changefavorite'\n      }\n    });\n    yield delay(500);\n    yield put(actions.changeMainFavoriteReset());\n    yield put(actions.changeFav(updateFav.updateChangeFav));\n  } catch (err) {\n    yield delay(500);\n    yield put(actions.changeMainFavoriteReset());\n    yield put(actions.changeFavPtFail());\n  }\n}\nexport function* changeCntInitSaga(action) {\n  let field = action.modelType === 'post' ? 'postID' : action.modelType === 'question' ? 'queID' : 'pwtID';\n\n  if (!action.confirm) {\n    yield put(actions.changeCntStart(action.title, action.id, action.det, action.modelType));\n    return;\n  }\n\n  if (action.det === 'addUser') {\n    yield put(actions.changeCntStart(action.title, action.id, action.det, action.modelType));\n  }\n\n  try {\n    if (action.det === 'delete') {\n      let payload = JSON.stringify({\n        id: action.id,\n        model: action.modelType,\n        field\n      });\n      yield axios.delete('/header', {\n        headers: {\n          'data-categ': `deletecnt-${payload}`\n        }\n      });\n    } else if (action.modelType === 'user') {\n      yield axios.patch('/users', {\n        id: action.id\n      }, {\n        headers: {\n          'data-categ': action.det\n        }\n      });\n    } else {\n      yield axios.patch('/header', {\n        id: action.id,\n        model: action.modelType,\n        field\n      }, {\n        headers: {\n          'data-categ': 'draftmode'\n        }\n      });\n    }\n\n    yield put(actions.changeCnt());\n    yield delay(1000);\n    yield put(actions.changeCntReset(true));\n  } catch (err) {\n    yield put(actions.changeCntFail(err));\n    yield delay(1000);\n    yield put(actions.changeCntReset(false));\n  }\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/model.js"],"names":["put","delay","changeFav","actions","axios","fetchCntInitSaga","action","model","fetchType","categ","userID","cntTotal","skipCnt","fetchCntStart","response","post","headers","fetchLimit","fetchCnt","data","cnt","err","fetchCntFail","changeFavSaga","updateFav","id","liked","favAdd","changedFav","changeMainFavoriteStart","favDet","changeFavPtStart","field","cntGrp","patch","changeMainFavoriteReset","updateChangeFav","changeFavPtFail","changeCntInitSaga","modelType","confirm","changeCntStart","title","det","payload","JSON","stringify","delete","changeCnt","changeCntReset","changeCntFail"],"mappings":"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","sourcesContent":["import { put, delay } from 'redux-saga/effects';\r\nimport { changeFav } from '../../shared/utility';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\nexport function* fetchCntInitSaga(action) {\r\n    let model = action.fetchType === 'post' ? '/post' : action.fetchType === 'question' || action.fetchType === 'shared' ?\r\n    '/question':'/'+action.fetchType;\r\n    let categ = action.fetchType === 'shared' ? `shared-${action.userID}` : action.fetchType;\r\n    if (action.cntTotal > action.skipCnt) {\r\n        yield put(actions.fetchCntStart());\r\n    }\r\n    \r\n    try {\r\n        if (action.cntTotal === 0 || action.cntTotal > action.skipCnt) {\r\n            let response = yield axios.post(model, null,{\r\n                headers: {\r\n                    'data-categ': categ,\r\n                    'limit': action.fetchLimit, \r\n                    'skip': action.skipCnt}});\r\n            yield put(actions.fetchCnt(response.data.cnt, action.skipCnt, response.data.cntTotal));\r\n        }  \r\n        \r\n    } catch(err){\r\n        yield put(actions.fetchCntFail(err))\r\n    }\r\n    \r\n}\r\n\r\nexport function* changeFavSaga(action) {\r\n    let updateFav = changeFav(action.id ,action.liked, action.favAdd, action.changedFav);\r\n    yield put(actions.changeMainFavoriteStart(updateFav.favDet.liked));\r\n    yield put(actions.changeFavPtStart(updateFav.favDet.id, updateFav.favDet.liked))\r\n    try {\r\n        let field = action.cntGrp === 'post' ? 'postID' : action.cntGrp === 'question' ?\r\n        'queID' : 'pwtID';\r\n        yield axios.patch('/header', {id: updateFav.favDet.id, model: action.cntGrp, field},{headers: {'data-categ': 'changefavorite'}});\r\n        yield delay(500)\r\n        yield put(actions.changeMainFavoriteReset());\r\n        yield put(actions.changeFav(updateFav.updateChangeFav));\r\n    }catch(err){\r\n        yield delay(500)\r\n        yield put(actions.changeMainFavoriteReset());\r\n        yield put(actions.changeFavPtFail())\r\n    }\r\n}\r\n\r\nexport function* changeCntInitSaga(action) {\r\n    let field =   action.modelType === 'post' ? 'postID' : action.modelType === 'question' ? 'queID' : 'pwtID'\r\n    if (!action.confirm) {\r\n        yield put(actions.changeCntStart(action.title, action.id, action.det, action.modelType))\r\n        return;\r\n    }\r\n    if (action.det === 'addUser') {\r\n        yield put(actions.changeCntStart(action.title, action.id, action.det, action.modelType))\r\n    }\r\n\r\n    try {\r\n        if (action.det === 'delete') {\r\n            let payload = JSON.stringify({id: action.id, model: action.modelType, field})\r\n            yield axios.delete('/header', {headers: {'data-categ': `deletecnt-${payload}`}});\r\n        } else if (action.modelType === 'user') {\r\n            yield axios.patch('/users', {id: action.id}, {headers: {'data-categ': action.det}});\r\n        } else {\r\n            yield axios.patch('/header', {id: action.id, model: action.modelType, field} ,{headers: {'data-categ': 'draftmode'}});\r\n        }\r\n        yield put(actions.changeCnt())\r\n        yield delay(1000);\r\n        yield put(actions.changeCntReset(true))\r\n    } catch(err){\r\n        yield put(actions.changeCntFail(err))\r\n        yield delay(1000);\r\n        yield put(actions.changeCntReset(false))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}