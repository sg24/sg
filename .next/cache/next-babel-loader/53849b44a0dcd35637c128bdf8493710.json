{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar initialState = {\n  showBackdrop: false,\n  cntActive: null,\n  ptActive: null,\n  queActive: null,\n  reqActive: null,\n  shareActive: null,\n  shareCntActive: null\n};\n\nvar fetchPtActive = function fetchPtActive(state, action) {\n  return updateObject(state, {\n    ptActive: action.ptActive\n  });\n};\n\nvar fetchQueActive = function fetchQueActive(state, action) {\n  return updateObject(state, {\n    queActive: action.queActive\n  });\n};\n\nvar fetchCntActive = function fetchCntActive(state, action) {\n  return updateObject(state, {\n    cntActive: action.cntActive\n  });\n};\n\nvar fetchReqActive = function fetchReqActive(state, action) {\n  return updateObject(state, {\n    reqActive: action.reqActive\n  });\n};\n\nvar fetchShareActive = function fetchShareActive(state, action) {\n  return updateObject(state, {\n    shareActive: action.shareActive\n  });\n};\n\nvar fetchShareCntActive = function fetchShareCntActive(state, action) {\n  return updateObject(state, {\n    shareCntActive: action.shareCntActive\n  });\n};\n\nvar resetActive = function resetActive(state, action) {\n  return updateObject(state, _objectSpread({}, state));\n};\n\nvar showMainBackdrop = function showMainBackdrop(state, action) {\n  return updateObject(state, {\n    showBackdrop: true\n  });\n};\n\nvar hideMainBackdrop = function hideMainBackdrop(state, action) {\n  return updateObject(state, {\n    showBackdrop: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_PT_ACTIVE:\n      return fetchPtActive(state, action);\n\n    case actionTypes.FETCH_QUE_ACTIVE:\n      return fetchQueActive(state, action);\n\n    case actionTypes.FETCH_CNT_ACTIVE:\n      return fetchCntActive(state, action);\n\n    case actionTypes.FETCH_SHARECNT_ACTIVE:\n      return fetchShareCntActive(state, action);\n\n    case actionTypes.FETCH_SHARE_ACTIVE:\n      return fetchShareActive(state, action);\n\n    case actionTypes.FETCH_REQ_ACTIVE:\n      return fetchReqActive(state, action);\n\n    case actionTypes.RESET_ACTIVE:\n      return resetActive(state, action);\n\n    case actionTypes.SHOW_MAIN_BACKDROP:\n      return showMainBackdrop(state, action);\n\n    case actionTypes.HIDE_MAIN_BACKDROP:\n      return hideMainBackdrop(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}