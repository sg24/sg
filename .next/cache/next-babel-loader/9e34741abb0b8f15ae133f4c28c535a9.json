{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport * as actions from '../../../store/actions/index';\nimport MainNavigations from '../../../components/MainNavigations/MainNavigations';\nimport Loader from '../../../components/UI/Loader/Loader';\n\nvar MainContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainContent, _Component);\n\n  function MainContent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainContent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      post: {\n        path: '/index/post',\n        icnGrp: 'newspaper',\n        icnClass: 'icon icon__site-main__content--tab',\n        title: 'News feed'\n      },\n      questions: {\n        path: '/index/question',\n        icnGrp: 'question',\n        icnClass: 'icon icon__site-main__content--tab',\n        title: 'Questions'\n      },\n      // group: {\n      //     path: '/index/group',\n      //     icnGrp: 'users',\n      //     icnClass: 'icon icon__site-main__content--tab',\n      //     title: 'Groups'\n      // },\n      user: {\n        path: '/index/user',\n        icnGrp: 'users',\n        icnClass: 'icon icon__site-main__content--tab',\n        title: 'Scholars'\n      },\n      helpme: {\n        path: '/index/helpme',\n        icnGrp: 'hand-paper',\n        icnClass: 'icon icon__site-main__content--tab',\n        title: 'Q Chat'\n      },\n      poet: {\n        path: '/index/poet',\n        icnGrp: 'book',\n        icnClass: 'icon icon__site-main__content--tab',\n        title: 'Writers'\n      },\n      curTab: _this.props.router.pathname.split('/')[2] ? _this.props.router.pathname.split('/')[2] : 'post',\n      cntFetch: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeActiveHandler\", function (curTab) {\n      if (_this.state.curTab !== curTab) {\n        _this.props.onResetActive(_this.props.userID, curTab);\n\n        _this.setState({\n          curTab: curTab\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(MainContent, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.cntFetch && !this.state.cntFetch) {\n        this.props.onResetActive(this.props.userID, this.state.curTab);\n        this.setState({\n          cntFetch: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loaderCnt = null;\n\n      if (this.props.showLoader) {\n        loaderCnt = __jsx(\"div\", {\n          className: \"site-main__content--loader\"\n        }, __jsx(Loader, null));\n      }\n\n      return __jsx(\"div\", {\n        className: \"site-main__content\"\n      }, __jsx(\"div\", {\n        className: \"site-main__content--wrapper\"\n      }, __jsx(\"ul\", {\n        className: \"site-main__content--tab\"\n      }, __jsx(MainNavigations, {\n        content: this.state.post,\n        removeActive: this.removeActiveHandler.bind(this, 'post'),\n        active: this.state.curTab !== 'post' ? this.props.ptActive : null\n      }), __jsx(MainNavigations, {\n        content: this.state.questions,\n        removeActive: this.removeActiveHandler.bind(this, 'question'),\n        active: this.state.curTab !== 'question' ? this.props.queActive : null\n      }), __jsx(MainNavigations, {\n        content: this.state.helpme,\n        removeActive: this.removeActiveHandler.bind(this, 'helpme'),\n        active: this.state.curTab !== 'helpme' ? this.props.shareCntActive : null\n      }), __jsx(MainNavigations, {\n        content: this.state.user,\n        removeActive: this.removeActiveHandler.bind(this, 'user'),\n        active: this.state.curTab !== 'user' ? this.props.reqActive : null\n      }), __jsx(MainNavigations, {\n        content: this.state.poet,\n        removeActive: this.removeActiveHandler.bind(this, 'poet'),\n        active: this.state.curTab !== 'poet' ? this.props.cntActive : null\n      })), this.props.children, loaderCnt));\n    }\n  }]);\n\n  return MainContent;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userID: state.auth.userID,\n    shareCntActive: state.main.shareCntActive,\n    cntActive: state.main.cntActive,\n    ptActive: state.main.ptActive,\n    queActive: state.main.queActive,\n    reqActive: state.main.reqActive,\n    cntFetch: state.cnt.cnts !== null,\n    showLoader: state.cnt.showLoader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onResetActive: function onResetActive(userID, curTab) {\n      return dispatch(actions.resetActiveInit(userID, curTab));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainContent));","map":null,"metadata":{},"sourceType":"module"}