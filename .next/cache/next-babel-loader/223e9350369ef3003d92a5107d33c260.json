{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './react/index/index.css';\nimport auth from './react/index/store/reducers/auth';\nimport cnt from './react/index/store/reducers/model';\nimport filter from './react/index/store/reducers/filter';\nimport share from './react/index/store/reducers/share';\nimport tags from './react/index/store/reducers/tags';\nimport trend from './react/index/store/reducers/trend';\nimport setQue from './react/index/store/reducers/setQue';\nimport conv from './react/index/store/reducers/conv';\nimport header from './react/index/store/reducers/header';\nimport main from './react/index/store/reducers/main';\nimport { rootSaga } from './react/index/store/sagas/index';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {// const { composeWithDevTools } = require('redux-devtools-extension')\n    // return composeWithDevTools(applyMiddleware(...middleware))\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var rootReducers = combineReducers({\n    auth: auth,\n    cnt: cnt,\n    filter: filter,\n    share: share,\n    tags: tags,\n    trd: trend,\n    setQue: setQue,\n    conv: conv,\n    header: header,\n    main: main\n  });\n  var store = createStore(rootReducers, initialState, bindMiddleware([sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/store.js"],"names":["applyMiddleware","createStore","combineReducers","createSagaMiddleware","auth","cnt","filter","share","tags","trend","setQue","conv","header","main","rootSaga","bindMiddleware","middleware","configureStore","initialState","sagaMiddleware","rootReducers","trd","store","sagaTask","run"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAO,yBAAP;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,GAAP,MAAkB,oCAAlB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,IAAP,MAAkB,mCAAlB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AAEA,SACIC,QADJ,QAEO,iCAFP;;AAKA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACnC,YAA2C,CACzC;AACA;AACD;;AACD,SAAOhB,eAAe,MAAf,4BAAmBgB,UAAnB,EAAP;AACD,CAND;;AASA,SAASC,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACzC,MAAMC,cAAc,GAAGhB,oBAAoB,EAA3C;AACA,MAAMiB,YAAY,GAAGlB,eAAe,CAAC;AACnCE,IAAAA,IAAI,EAAJA,IADmC;AAEnCC,IAAAA,GAAG,EAAHA,GAFmC;AAGnCC,IAAAA,MAAM,EAANA,MAHmC;AAInCC,IAAAA,KAAK,EAAEA,KAJ4B;AAKnCC,IAAAA,IAAI,EAAEA,IAL6B;AAMnCa,IAAAA,GAAG,EAAEZ,KAN8B;AAOnCC,IAAAA,MAAM,EAAEA,MAP2B;AAQnCC,IAAAA,IAAI,EAAJA,IARmC;AASnCC,IAAAA,MAAM,EAANA,MATmC;AAUnCC,IAAAA,IAAI,EAAJA;AAVmC,GAAD,CAApC;AAaA,MAAMS,KAAK,GAAGrB,WAAW,CACvBmB,YADuB,EAEvBF,YAFuB,EAGvBH,cAAc,CAAC,CAACI,cAAD,CAAD,CAHS,CAAzB;AAMAG,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBV,QAAnB,CAAjB;AAEA,SAAOQ,KAAP;AACD;;AAED,eAAeL,cAAf","sourcesContent":["import { applyMiddleware, createStore, combineReducers } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport './react/index/index.css';\r\nimport auth from './react/index/store/reducers/auth';\r\nimport cnt   from './react/index/store/reducers/model';\r\nimport filter from './react/index/store/reducers/filter';\r\nimport share from './react/index/store/reducers/share';\r\nimport tags  from './react/index/store/reducers/tags';\r\nimport trend from './react/index/store/reducers/trend';\r\nimport setQue from './react/index/store/reducers/setQue';\r\nimport conv from './react/index/store/reducers/conv';\r\nimport header from './react/index/store/reducers/header';\r\nimport main from './react/index/store/reducers/main';\r\n\r\nimport { \r\n    rootSaga\r\n} from './react/index/store/sagas/index';\r\n\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // const { composeWithDevTools } = require('redux-devtools-extension')\r\n    // return composeWithDevTools(applyMiddleware(...middleware))\r\n  }\r\n  return applyMiddleware(...middleware)\r\n}\r\n\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const rootReducers = combineReducers({\r\n    auth,\r\n    cnt,\r\n    filter,\r\n    share: share,\r\n    tags: tags,\r\n    trd: trend,\r\n    setQue: setQue,\r\n    conv,\r\n    header,\r\n    main\r\n});\r\n\r\n  const store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    bindMiddleware([sagaMiddleware])\r\n  )\r\n\r\n  store.sagaTask = sagaMiddleware.run(rootSaga)\r\n\r\n  return store\r\n}\r\n\r\nexport default configureStore"]},"metadata":{},"sourceType":"module"}