{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject, changeMode } from '../../shared/utility';\nconst initialState = {\n  cnts: null,\n  cntErr: null,\n  skipCnt: null,\n  cntTotal: null,\n  showLoader: false,\n  changedFav: [],\n  favChange: null,\n  postVideo: {\n    id: null\n  },\n  videoErr: null,\n  filterDet: null,\n  modelType: null,\n  changeCnt: false,\n  changeCntErr: null,\n  changeCntStart: null\n};\n\nconst fetchCnt = (state, action) => {\n  let cnts = !state.cnts ? action.cnt : state.cnts.concat(...action.cnt);\n  return updateObject(state, {\n    cnts,\n    skipCnt: action.skipCnt,\n    cntTotal: action.cntTotal,\n    showLoader: false\n  });\n};\n\nconst fetchCntReset = (state, action) => {\n  return updateObject(state, {\n    cnts: null,\n    skipCnt: null,\n    cntTotal: null,\n    curTab: null,\n    showLoader: false\n  });\n};\n\nconst fetchCntStart = (state, action) => {\n  return updateObject(state, {\n    showLoader: true\n  });\n};\n\nconst fetchPostFail = (state, action) => {\n  return updateObject(state, {\n    cntErr: action.err,\n    showLoader: false\n  });\n};\n\nconst changeCntStart = (state, action) => {\n  return updateObject(state, {\n    changeCntStart: {\n      title: action.title,\n      id: action.id,\n      det: action.det,\n      modelType: action.modelType\n    },\n    changeCntErr: null\n  });\n};\n\nconst changeCntCancel = (state, action) => {\n  return updateObject(state, {\n    changeCntStart: null,\n    changeCntErr: null,\n    changeCnt: false\n  });\n};\n\nconst changeCntReset = (state, action) => {\n  let cnts = [...state.cnts];\n\n  if (action.changed) {\n    if (state.changeCntStart.det === 'addUser') {\n      let updateCnts = changeMode(cnts, state.changeCntStart, 'pending', true);\n      return updateObject(state, {\n        cnts: updateCnts,\n        changeCntStart: null,\n        changeCntErr: null,\n        changeCnt: false\n      });\n    }\n\n    if (state.changeCntStart.det === 'acceptUser') {\n      let updateCnts = changeMode(cnts, state.changeCntStart, 'accept', true);\n      return updateObject(state, {\n        cnts: updateCnts,\n        changeCntStart: null,\n        changeCntErr: null,\n        changeCnt: false\n      });\n    }\n\n    if (state.changeCntStart.det === 'rejUser') {\n      let updateCnts = changeMode(cnts, state.changeCntStart, 'request', false);\n      return updateObject(state, {\n        cnts: updateCnts,\n        changeCntStart: null,\n        changeCntErr: null,\n        changeCnt: false\n      });\n    }\n\n    if (state.changeCntStart.det === 'cancelReq') {\n      let updateCnts = changeMode(cnts, state.changeCntStart, 'pending', false);\n      return updateObject(state, {\n        cnts: updateCnts,\n        changeCntStart: null,\n        changeCntErr: null,\n        changeCnt: false\n      });\n    }\n\n    if (state.changeCntStart.det === 'unfriend') {\n      let updateCnts = changeMode(cnts, state.changeCntStart, 'accept', false);\n      return updateObject(state, {\n        cnts: updateCnts,\n        changeCntStart: null,\n        changeCntErr: null,\n        changeCnt: false\n      });\n    }\n\n    if (state.changeCntStart.det === 'blockUser') {\n      let updateCnt = cnts.filter(cnt => cnt.id !== state.changeCntStart.id);\n      return updateObject(state, {\n        cnts: updateCnt,\n        changeCntStart: null,\n        changeCntErr: null,\n        changeCnt: false\n      });\n    }\n\n    let updateCnt = cnts.filter(cnt => cnt._id !== state.changeCntStart.id);\n    return updateObject(state, {\n      cnts: updateCnt,\n      changeCntStart: null,\n      changeCntErr: null,\n      changeCnt: false\n    });\n  }\n\n  return updateObject(state, {\n    cnts,\n    changeCntStart: null,\n    changeCntErr: null,\n    changeCnt: false\n  });\n};\n\nconst changeCntFail = (state, action) => {\n  return updateObject(state, {\n    changeCntErr: action.err\n  });\n};\n\nconst changeCnt = (state, action) => {\n  return updateObject(state, {\n    changeCnt: true\n  });\n};\n\nconst fetchVideo = (state, action) => {\n  return updateObject(state, {\n    postVideo: {\n      id: action.id,\n      url: action.url\n    }\n  });\n};\n\nconst changeFavPtStart = (state, action) => {\n  return updateObject(state, {\n    favChange: {\n      id: action.id,\n      isLiked: action.isLiked\n    }\n  });\n};\n\nconst changeFavPtFail = (state, action) => {\n  return updateObject(state, {\n    favChange: null\n  });\n};\n\nconst changeFav = (state, action) => {\n  return updateObject(state, {\n    changedFav: action.changedFav,\n    favChange: null\n  });\n};\n\nconst filterPost = (state, action) => {\n  return updateObject(state, {\n    filterDet: action.filterDet\n  });\n};\n\nconst resetModel = (state, action) => {\n  return updateObject(state, {\n    cntErr: null,\n    changeCntStart: null,\n    changeCntErr: null,\n    changeCnt: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_CNT:\n      return fetchCnt(state, action);\n\n    case actionTypes.FETCH_CNT_START:\n      return fetchCntStart(state, action);\n\n    case actionTypes.FETCH_CNT_RESET:\n      return fetchCntReset(state, action);\n\n    case actionTypes.FETCH_CNT_FAIL:\n      return fetchPostFail(state, action);\n\n    case actionTypes.CHANGE_CNT_START:\n      return changeCntStart(state, action);\n\n    case actionTypes.CHANGE_CNT_CANCEL:\n      return changeCntCancel(state, action);\n\n    case actionTypes.CHANGE_CNT_RESET:\n      return changeCntReset(state, action);\n\n    case actionTypes.CHANGE_CNT_FAIL:\n      return changeCntFail(state, action);\n\n    case actionTypes.CHANGE_CNT:\n      return changeCnt(state, action);\n\n    case actionTypes.FETCH_VIDEO:\n      return fetchVideo(state, action);\n\n    case actionTypes.CHANGE_FAVORITE:\n      return changeFav(state, action);\n\n    case actionTypes.CHANGE_FAVORITE_PT_START:\n      return changeFavPtStart(state, action);\n\n    case actionTypes.CHANGE_FAVORITE_PT_FAIL:\n      return changeFavPtFail(state, action);\n\n    case actionTypes.FILTER_POST:\n      return filterPost(state, action);\n\n    case actionTypes.RESET_MODEL:\n      return resetModel(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}