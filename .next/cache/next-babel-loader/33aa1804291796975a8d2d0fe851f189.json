{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchUsersInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(filterUserInitSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(filterUserSelectInitSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(shareUserInitSaga);\n\nimport { put, delay } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function fetchUsersInitSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchUsersInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.post('/users', null, {\n            headers: {\n              'data-categ': \"allteacher-notab\"\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return put(actions.fetchUsers(response.data));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(actions.fetchUsersFail(_context.t0));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\nexport function filterUserInitSaga(action) {\n  var filterUser;\n  return _regeneratorRuntime.wrap(function filterUserInitSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filterUser = null;\n\n          if (!action.filterContent) {\n            filterUser = action.users;\n          } else {\n            filterUser = action.users.filter(function (user) {\n              return user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1;\n            });\n          }\n\n          _context2.next = 4;\n          return put(actions.filterUser(filterUser));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function filterUserSelectInitSaga(action) {\n  var filterUser;\n  return _regeneratorRuntime.wrap(function filterUserSelectInitSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          filterUser = null;\n\n          if (!action.filterContent) {\n            filterUser = action.userSelect;\n          } else {\n            filterUser = action.userSelect.filter(function (user) {\n              return user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1;\n            });\n          }\n\n          _context3.next = 4;\n          return put(actions.filterUserSelect(filterUser));\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function shareUserInitSaga(action) {\n  var shareUser, _i, _arr, user, field;\n\n  return _regeneratorRuntime.wrap(function shareUserInitSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          shareUser = [];\n\n          for (_i = 0, _arr = _toConsumableArray(action.userSelect); _i < _arr.length; _i++) {\n            user = _arr[_i];\n            shareUser.push(user.id);\n          }\n\n          _context4.prev = 2;\n          _context4.next = 5;\n          return put(actions.shareUserStart());\n\n        case 5:\n          field = action.cntType === 'post' ? 'postID' : action.cntType === 'question' ? 'queID' : 'pwtID';\n          _context4.next = 8;\n          return axios.patch('/header', {\n            users: _JSON$stringify(shareUser),\n            id: action.shareID,\n            model: action.cntType,\n            field: field\n          }, {\n            headers: {\n              'data-categ': 'shareuser'\n            }\n          });\n\n        case 8:\n          _context4.next = 10;\n          return delay(1000);\n\n        case 10:\n          _context4.next = 12;\n          return put(actions.shareUser());\n\n        case 12:\n          _context4.next = 22;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](2);\n          _context4.next = 18;\n          return put(actions.shareUserfail(_context4.t0));\n\n        case 18:\n          _context4.next = 20;\n          return delay(1000);\n\n        case 20:\n          _context4.next = 22;\n          return put(actions.shareUser());\n\n        case 22:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 14]]);\n}","map":{"version":3,"sources":["C:/Users/g/my-sg final deploy/react/index/store/sagas/share.js"],"names":["fetchUsersInitSaga","filterUserInitSaga","filterUserSelectInitSaga","shareUserInitSaga","put","delay","actions","axios","post","headers","response","fetchUsers","data","fetchUsersFail","action","filterUser","filterContent","users","filter","user","username","toLowerCase","indexOf","userSelect","filterUserSelect","shareUser","push","id","shareUserStart","field","cntType","patch","shareID","model","shareUserfail"],"mappings":"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","sourcesContent":["import { put, delay } from 'redux-saga/effects';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios';\r\n\r\n\r\nexport function* fetchUsersInitSaga () {\r\n    try {\r\n        let response = yield axios.post('/users', null,{headers: {'data-categ':`allteacher-notab`}});\r\n        yield put(actions.fetchUsers(response.data));\r\n    } catch(err) {\r\n        yield put(actions.fetchUsersFail(err))\r\n    }\r\n}\r\n\r\nexport function* filterUserInitSaga(action) {\r\n   let filterUser = null;\r\n   if (!action.filterContent) {\r\n        filterUser = action.users\r\n    } else {\r\n        filterUser = action.users.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1);\r\n    }\r\n   yield put(actions.filterUser(filterUser))\r\n}\r\n\r\nexport function* filterUserSelectInitSaga(action) {\r\n    let filterUser = null;\r\n    if (!action.filterContent) {\r\n        filterUser = action.userSelect\r\n    } else {\r\n        filterUser = action.userSelect.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1 );\r\n    }\r\n    yield put(actions.filterUserSelect(filterUser))\r\n}\r\n\r\nexport function* shareUserInitSaga(action) {\r\n    let shareUser = [];\r\n\r\n    for (let user of [...action.userSelect] ) {\r\n        shareUser.push(user.id)\r\n    }\r\n    \r\n    try {\r\n        yield put(actions.shareUserStart())\r\n        let field =   action.cntType === 'post' ? 'postID' : action.cntType === 'question' ? 'queID' : 'pwtID'\r\n        yield axios.patch('/header', {users: JSON.stringify(shareUser), id: action.shareID, model: action.cntType, field},{headers: {'data-categ': 'shareuser'}});\r\n        yield delay(1000);\r\n        yield put(actions.shareUser());\r\n    } catch(err){\r\n        yield put(actions.shareUserfail(err));\r\n        yield delay(1000);\r\n        yield put(actions.shareUser());\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}