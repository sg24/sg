{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport axios from '../../axios';\nimport { changeFav } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nexport function* fetchNotifyInitSaga(action) {\n  try {\n    yield put(actions.fetchNotifyStart());\n    let response = yield axios.post('/header', {\n      fetchCnt: true\n    }, {\n      headers: {\n        'data-categ': 'allnotification'\n      }\n    });\n\n    if (response.data.collTotal > 0) {\n      yield put(actions.fetchNotify(response.data.coll));\n    } else {\n      yield put(actions.fetchNotify([]));\n    }\n  } catch (err) {\n    yield put(actions.fetchNotifyFail(err));\n  }\n}\nexport function* changeFavNotifySaga(action) {\n  let notify = changeFav(action.notify, action.notifyID);\n  yield put(actions.changeFavNotifyStart(notify.updateStartArray));\n  yield put(actions.changeFavNotify(notify.updateDataArray));\n}\nexport function* fetchNavlistInitSaga(action) {\n  try {\n    yield put(actions.fetchNavlistStart());\n    let response = yield axios.post('/header', {\n      categ: action.category\n    }, {\n      headers: {\n        'data-categ': 'category'\n      }\n    });\n    yield put(actions.fetchNavlist(action.category, response.data));\n  } catch (e) {}\n}\nexport function* fetchNotifyActiveInitSaga(action) {\n  try {\n    let response = yield axios.post('/header', {}, {\n      headers: {\n        'data-categ': 'allnotification'\n      }\n    });\n\n    if (response.data.collTotal > 0) {\n      yield put(actions.fetchNotifyActive(response.data.collTotal));\n    }\n\n    ;\n  } catch (err) {}\n}\nexport function* defaultNotifyActiveInitSaga(action) {\n  try {\n    yield axios.post('/header', {}, {\n      headers: {\n        'data-categ': 'resetnotification'\n      }\n    });\n    yield put(actions.defaultNotifyActive());\n  } catch (err) {}\n}\nexport function* headerFilterInitSaga(action) {\n  try {\n    yield put(actions.headerFilterStart(action.filterPos, action.filterLastPos));\n    let response = yield axios.post('/header', {\n      filterCnt: action.filterCnt\n    }, {\n      headers: {\n        'data-categ': 'headerfilter'\n      }\n    });\n    yield put(actions.headerFilter(response.data));\n  } catch (err) {\n    yield put(actions.headerFilterFail(err));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}