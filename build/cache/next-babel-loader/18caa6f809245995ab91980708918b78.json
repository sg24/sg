{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport TimeAgo from 'react-timeago';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\nimport Avatar from 'react-avatar';\nimport './PoetContent.css';\nimport '../../../UI/ShareIcn/ShareIcn.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Aux from '../../../../hoc/Auxs/Auxs';\nimport { transformNumber, engStrings } from '../../../../shared/utility';\nimport FavoriteActive from '../../../UI/FavoriteActive/FavoriteActive';\n\nvar poetContent = function poetContent(props) {\n  var formatter = buildFormatter(engStrings);\n  var userOpt = null;\n  var userOptDetClass = ['reuse-pwt__content--det__user--det'];\n  var userOptClass = ['reuse-pwt__content--det__user--det__opt'];\n  var favAdd = null;\n  var isLiked = null;\n\n  var userOptMode = __jsx(\"li\", {\n    className: \"reuse-pwt__content--det__user--det__opt--status\",\n    onClick: props.changeCnt\n  }, __jsx(FontAwesomeIcon, {\n    icon: ['far', 'eye-slash'],\n    className: \"icon icon__reuse-pwt--options__dft\"\n  }), \"Draft\");\n\n  var fav = __jsx(FontAwesomeIcon, {\n    icon: ['far', 'heart'],\n    className: \"icon icon__reuse-pwt--footer__heart\"\n  });\n\n  var userImage = __jsx(\"img\", {\n    src: props.pwt.userImage,\n    alt: \"\"\n  });\n\n  if (props.pwt.mode === 'draft') {\n    userOptMode = __jsx(\"li\", {\n      className: \"reuse-pwt__content--det__user--det__opt--status\",\n      onClick: props.changeCntPublish\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['far', 'eye'],\n      className: \"icon icon__reuse-pwt--options__dft\"\n    }), \"Publish\");\n  }\n\n  if (props.pwt.username && !props.pwt.userImage) {\n    userImage = __jsx(Avatar, {\n      name: props.pwt.username,\n      size: \"50\",\n      round: true\n    });\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(props.changedFav), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var changedFav = _step.value;\n\n      if (props.pwt._id === changedFav.id) {\n        favAdd = changedFav.favAdd;\n        isLiked = changedFav.liked;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (props.showCnt && props.showCnt.visible && props.showCnt.id === props.pwt._id) {\n    userOptDetClass.push('reuse-pwt__content--det__user--det__clk');\n    userOptClass.push('reuse-pwt__content--det__user--det__opt--visible');\n  }\n\n  if (props.pwt.userOpt) {\n    userOpt = __jsx(\"div\", {\n      className: userOptDetClass.join(' '),\n      onClick: props.userOpt\n    }, __jsx(\"div\", {\n      className: \"reuse-pwt__content--det__user--det__mid\"\n    }), __jsx(\"ul\", {\n      className: userOptClass.join(' ')\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"/edit/poet/\".concat(props.pwt._id)\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['far', 'edit'],\n      className: \"icon icon__reuse-pwt--options\"\n    }), \"Edit\")), userOptMode, __jsx(\"li\", {\n      onClick: props.deleteCnt\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['far', 'trash-alt'],\n      className: \"icon icon__reuse-pwt--options\"\n    }), \"Delete\")));\n  }\n\n  ;\n\n  if (props.pwt.liked && isLiked === null) {\n    fav = __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'heart'],\n      className: \"icon icon__reuse-pwt--footer__heart\"\n    });\n  }\n\n  if (isLiked) {\n    fav = __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'heart'],\n      className: \"icon icon__reuse-pwt--footer__heart\"\n    });\n  }\n\n  var pwtType = __jsx(\"div\", {\n    className: \"reuse-pwt\"\n  }, __jsx(\"div\", {\n    className: \"reuse-share\"\n  }, __jsx(\"div\", {\n    className: \"reuse-share__icn\",\n    onClick: props.share\n  }, __jsx(FontAwesomeIcon, {\n    icon: ['fas', 'location-arrow'],\n    className: \"icon icon__reuse-share--icn\"\n  }))), __jsx(\"div\", {\n    className: \"reuse-pwt__content\"\n  }, __jsx(\"div\", {\n    className: \"reuse-pwt__content--tag\"\n  }, __jsx(\"span\", null, __jsx(FontAwesomeIcon, {\n    icon: props.pwt.category.length > 1 ? ['fas', 'tags'] : ['fas', 'tag'],\n    className: \"icon icon__reuse-pwt--header__tag\"\n  }), props.pwt.category[0])), __jsx(\"div\", {\n    className: \"reuse-pwt__content--title\"\n  }, __jsx(\"div\", {\n    className: \"reuse-pwt__content--title__wrapper\"\n  }, __jsx(\"a\", {\n    href: \"/view/poet/\" + props.pwt._id\n  }, String(props.pwt.title).length > 149 ? String(props.pwt.title).substr(0, 150) + '...' : props.pwt.title))), __jsx(\"div\", {\n    className: \"reuse-pwt__content--det\"\n  }, __jsx(\"div\", {\n    className: \"reuse-pwt__content--det__user\"\n  }, __jsx(\"div\", {\n    className: \"reuse-pwt__content--det__user--img\"\n  }, userImage), __jsx(\"a\", {\n    href: \"/user/profile/\" + props.pwt.authorID\n  }, \" \", String(props.pwt.username).substr(0, 8), \" \"), __jsx(\"div\", {\n    className: \"reuse-pwt__content--det__user--time\"\n  }, \"@ \", __jsx(TimeAgo, {\n    date: props.pwt.pwtCreated,\n    live: false,\n    formatter: formatter\n  })), userOpt))), __jsx(\"ul\", {\n    className: \"reuse-pwt__footer\"\n  }, __jsx(\"li\", null, __jsx(FontAwesomeIcon, {\n    icon: ['far', 'smile'],\n    className: \"icon icon__reuse-pwt--footer__smile\"\n  }), transformNumber(props.pwt.helpFull)), __jsx(\"li\", null, __jsx(\"span\", {\n    onClick: props.fav\n  }, fav), transformNumber(favAdd !== null ? favAdd : props.pwt.favorite), props.favChange && props.favChange.id === props.pwt._id ? __jsx(FavoriteActive, {\n    liked: props.favChange.isLiked\n  }) : null), __jsx(\"li\", null, __jsx(FontAwesomeIcon, {\n    icon: ['far', 'comment-dots'],\n    className: \"icon icon__reuse-pwt--footer__comments\"\n  }), transformNumber(props.pwt.comment))));\n\n  return __jsx(Aux, null, pwtType);\n};\n\nexport default poetContent;","map":null,"metadata":{},"sourceType":"module"}