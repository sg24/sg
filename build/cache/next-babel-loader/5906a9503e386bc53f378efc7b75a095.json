{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as actions from '../../../../store/actions/index';\nimport Logo from '../../../../components/UI/Logo/Logo';\nimport Loader from '../../../../components/UI/Loader/Loader';\nimport Aux from '../../../../hoc/Auxs/Auxs';\nimport { updateObject, checkValidity } from '../../../../shared/utility';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      formElement: {\n        username: {\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      field: {\n        type: 'password',\n        isChange: false\n      },\n      formIsValid: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeFieldHandler\", function () {\n      if (_this.state.field.isChange) {\n        _this.setState({\n          field: updateObject(_this.state.field, {\n            type: 'password',\n            isChange: false\n          })\n        });\n\n        return;\n      }\n\n      _this.setState({\n        field: updateObject(_this.state.field, {\n          type: 'text',\n          isChange: true\n        })\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputChangedHandler\", function (event, inputType) {\n      var updateFormType = updateObject(_this.state.formElement[inputType], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, _this.state.formElement[inputType].validation),\n        touched: true\n      });\n      var formIsValid = true;\n      var updateFormElement = updateObject(_this.state.formElement, _defineProperty({}, inputType, updateFormType));\n\n      for (var _inputType in updateFormElement) {\n        formIsValid = updateFormElement[_inputType].valid && formIsValid;\n      }\n\n      _this.setState({\n        formElement: updateFormElement,\n        formIsValid: formIsValid\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitHandler\", function (event) {\n      event.preventDefault();\n\n      if (_this.state.formIsValid) {\n        var newCnt = {\n          username: _this.state.formElement.username.value,\n          password: _this.state.formElement.password.value\n        };\n\n        _this.props.onSubmitForm(newCnt);\n\n        return;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.submitted) {\n        window.location.replace('/index/post');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cnt = __jsx(Aux, null, __jsx(Logo, null), __jsx(\"div\", {\n        className: \"reuse-form__cnt\"\n      }, __jsx(\"div\", {\n        className: \"reuse-form__cnt--header\"\n      }, __jsx(\"h4\", null, \"Welcome to Slodge24\"), __jsx(\"p\", null, \"Knowledge sharing platform | Connecting scholars\")), __jsx(\"div\", {\n        className: \"reuse-form__cnt--main-wrapper\"\n      }, __jsx(\"h4\", null, \"Login with\"), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/auth/google\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fab', 'google']\n      }))), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/auth/facebook\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fab', 'facebook-f']\n      }))))), __jsx(\"div\", {\n        className: \"reuse-form__cnt--alt\"\n      }, \"OR\"), this.props.submitError ? __jsx(\"div\", {\n        className: \"reuse-form__err\"\n      }, this.props.submitError.message) : null, __jsx(\"div\", {\n        className: \"reuse-form__cnt--main-wrapper\"\n      }, __jsx(\"div\", {\n        className: \"reuse-form__cnt--wrapper\"\n      }, __jsx(\"label\", {\n        className: \"reuse-form__cnt--title\"\n      }, \"Email\"), __jsx(\"div\", {\n        className: \"reuse-form__cnt--det\"\n      }, __jsx(\"input\", {\n        type: \"email\",\n        className: \"reuse-form__cnt--det__input\",\n        required: true,\n        minLength: \"6\",\n        value: this.state.formElement.username.value,\n        onChange: function onChange(event) {\n          return _this2.inputChangedHandler(event, 'username');\n        }\n      })), !this.state.formElement.username.valid && this.state.formElement.username.touched ? __jsx(\"div\", {\n        className: \"reuse-form__err\"\n      }, \"Email must be longer than 6 characters\") : null), __jsx(\"div\", {\n        className: \"reuse-form__cnt--wrapper\"\n      }, __jsx(\"label\", {\n        className: \"reuse-form__cnt--title\"\n      }, \"Password\"), __jsx(\"div\", {\n        className: \"reuse-form__cnt--det\"\n      }, __jsx(\"input\", {\n        type: this.state.field.type,\n        className: \"reuse-form__cnt--det__input reuse-form__cnt--det__input--pwd\",\n        required: true,\n        minLength: \"6\",\n        value: this.state.formElement.password.value,\n        onChange: function onChange(event) {\n          return _this2.inputChangedHandler(event, 'password');\n        }\n      }), __jsx(\"div\", {\n        className: \"reuse-form__cnt--det__pwd\",\n        onClick: this.changeFieldHandler\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['far', 'eye'],\n        className: \"icon icon__reuse-form--view\"\n      }))), !this.state.formElement.password.valid && this.state.formElement.password.touched ? __jsx(\"div\", {\n        className: \"reuse-form__err\"\n      }, \"Password must be longer than 5 characters\") : null), __jsx(\"div\", {\n        className: \"reuse-form__cnt--footer reuse-form__btn\"\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"reuse-form__btn--log\",\n        disabled: !this.state.formIsValid\n      }, \"Login\", !this.props.start ? __jsx(Loader, null) : null))), __jsx(\"p\", null, \"Forgot password \", __jsx(\"a\", {\n        href: \"/forget/password\"\n      }, \"Retrive\")), __jsx(\"p\", null, \"Create New Account \", __jsx(\"a\", {\n        href: \"/signup\"\n      }, \"Sign up\"))), __jsx(\"ul\", {\n        className: \"reuse-form__footer\"\n      }, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/privacy\"\n      }, \"Privacy policy\")), __jsx(\"li\", {\n        className: \"reuse-form__footer--copy\"\n      }, \"\\xA9 Slodge24 , 2020\"), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/term\"\n      }, \"Terms of service\"))));\n\n      return __jsx(\"form\", {\n        className: \"reuse-form\",\n        onSubmit: this.submitHandler\n      }, __jsx(\"div\", {\n        className: \"reuse-form__wrapper\"\n      }, cnt));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userID: state.auth.userID,\n    submitError: state.form.submitError,\n    submitted: state.form.submitted,\n    start: state.form.start\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSubmitForm: function onSubmitForm(formData) {\n      return dispatch(actions.submitFormInit(formData));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":null,"metadata":{},"sourceType":"module"}