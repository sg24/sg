{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  showBackdrop: false,\n  shareActive: null\n};\n\nconst fetchShareActive = (state, action) => {\n  return updateObject(state, {\n    shareActive: action.shareActive\n  });\n};\n\nconst resetActive = (state, action) => {\n  let reset = action.curTab === 'question' ? {\n    cntActive: null\n  } : {\n    shareActive: null,\n    shareCntActive: null\n  };\n  return updateObject(state, _objectSpread({}, reset));\n};\n\nconst showMainBackdrop = (state, action) => {\n  return updateObject(state, {\n    showBackdrop: true\n  });\n};\n\nconst hideMainBackdrop = (state, action) => {\n  return updateObject(state, {\n    showBackdrop: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_SHARE_ACTIVE:\n      return fetchShareActive(state, action);\n\n    case actionTypes.RESET_ACTIVE:\n      return resetActive(state, action);\n\n    case actionTypes.SHOW_MAIN_BACKDROP:\n      return showMainBackdrop(state, action);\n\n    case actionTypes.HIDE_MAIN_BACKDROP:\n      return hideMainBackdrop(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}