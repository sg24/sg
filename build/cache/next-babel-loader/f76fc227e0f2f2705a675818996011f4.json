{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCntInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchVideoInitSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCategInitSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addCategInitSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkLinkInitSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchUsersInitSaga),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(filterUserInitSaga),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(showUserSelectInitSaga);\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { put, delay } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nimport fileAxios from 'axios';\nimport { dataURLtoBlob } from '../../shared/utility';\nimport global from '../../../../global/global';\nexport function fetchCntInitSaga(action) {\n  var response, images, snaps, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, image, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _loop, _iterator2, _step2;\n\n  return _regeneratorRuntime.wrap(function fetchCntInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.post('/header', {\n            id: action.id,\n            model: 'question'\n          }, {\n            headers: {\n              'data-categ': \"editform\"\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.data && (response.data.image.length > 0 || response.data.snapshot.length > 0))) {\n            _context.next = 49;\n            break;\n          }\n\n          images = [];\n          snaps = [];\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context.prev = 10;\n\n          for (_iterator = _getIterator(response.data.image); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            image = _step.value;\n            images.push(_objectSpread({\n              url: \"\".concat(global.url, \"/media/image/\").concat(image.id)\n            }, image, {\n              mediaType: 'image'\n            }));\n          }\n\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](10);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n\n        case 18:\n          _context.prev = 18;\n          _context.prev = 19;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 21:\n          _context.prev = 21;\n\n          if (!_didIteratorError) {\n            _context.next = 24;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 24:\n          return _context.finish(21);\n\n        case 25:\n          return _context.finish(18);\n\n        case 26:\n          _iteratorNormalCompletion2 = true;\n          _didIteratorError2 = false;\n          _iteratorError2 = undefined;\n          _context.prev = 29;\n\n          _loop = function _loop() {\n            var snap = _step2.value;\n            var video = response.data.video.filter(function (videoDet) {\n              return videoDet.snapshotID === snap.videoID;\n            });\n            snaps.push(_objectSpread({\n              url: \"\".concat(global.url, \"/media/image/\").concat(snap.id)\n            }, snap, {\n              mediaType: 'snapshot',\n              video: video[0]\n            }));\n          };\n\n          for (_iterator2 = _getIterator(response.data.snapshot); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            _loop();\n          }\n\n          _context.next = 38;\n          break;\n\n        case 34:\n          _context.prev = 34;\n          _context.t1 = _context[\"catch\"](29);\n          _didIteratorError2 = true;\n          _iteratorError2 = _context.t1;\n\n        case 38:\n          _context.prev = 38;\n          _context.prev = 39;\n\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n\n        case 41:\n          _context.prev = 41;\n\n          if (!_didIteratorError2) {\n            _context.next = 44;\n            break;\n          }\n\n          throw _iteratorError2;\n\n        case 44:\n          return _context.finish(41);\n\n        case 45:\n          return _context.finish(38);\n\n        case 46:\n          response.data.image = images;\n          response.data.snapshot = snaps;\n          response.data.video = [];\n\n        case 49:\n          _context.next = 51;\n          return put(actions.fetchCnt(response.data));\n\n        case 51:\n          _context.next = 57;\n          break;\n\n        case 53:\n          _context.prev = 53;\n          _context.t2 = _context[\"catch\"](0);\n          _context.next = 57;\n          return put(actions.fetchCntFail(_context.t2));\n\n        case 57:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 53], [10, 14, 18, 26], [19,, 21, 25], [29, 34, 38, 46], [39,, 41, 45]]);\n}\nexport function fetchVideoInitSaga(action) {\n  var videos, video, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, vid, media, vidData, url;\n\n  return _regeneratorRuntime.wrap(function fetchVideoInitSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          videos = [];\n          video = 0;\n\n          if (!(action.videosID.length < 1)) {\n            _context2.next = 7;\n            break;\n          }\n\n          _context2.next = 6;\n          return put(actions.fetchVideo([]));\n\n        case 6:\n          return _context2.abrupt(\"return\");\n\n        case 7:\n          _iteratorNormalCompletion3 = true;\n          _didIteratorError3 = false;\n          _iteratorError3 = undefined;\n          _context2.prev = 10;\n          _iterator3 = _getIterator(action.videosID);\n\n        case 12:\n          if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n            _context2.next = 27;\n            break;\n          }\n\n          vid = _step3.value;\n          _context2.next = 16;\n          return axios.post('/media', {\n            mediaID: vid.id\n          }, {\n            headers: {\n              'data-categ': 'media'\n            }\n          });\n\n        case 16:\n          media = _context2.sent;\n          vidData = dataURLtoBlob(media.data);\n          url = window.URL.createObjectURL(vidData);\n          ++video;\n          videos.push({\n            file: vidData,\n            url: url,\n            id: vid.snapshotID\n          });\n\n          if (!(video === action.videosID.length)) {\n            _context2.next = 24;\n            break;\n          }\n\n          _context2.next = 24;\n          return put(actions.fetchVideo(videos));\n\n        case 24:\n          _iteratorNormalCompletion3 = true;\n          _context2.next = 12;\n          break;\n\n        case 27:\n          _context2.next = 33;\n          break;\n\n        case 29:\n          _context2.prev = 29;\n          _context2.t0 = _context2[\"catch\"](10);\n          _didIteratorError3 = true;\n          _iteratorError3 = _context2.t0;\n\n        case 33:\n          _context2.prev = 33;\n          _context2.prev = 34;\n\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n\n        case 36:\n          _context2.prev = 36;\n\n          if (!_didIteratorError3) {\n            _context2.next = 39;\n            break;\n          }\n\n          throw _iteratorError3;\n\n        case 39:\n          return _context2.finish(36);\n\n        case 40:\n          return _context2.finish(33);\n\n        case 41:\n          _context2.next = 47;\n          break;\n\n        case 43:\n          _context2.prev = 43;\n          _context2.t1 = _context2[\"catch\"](0);\n          _context2.next = 47;\n          return put(actions.fetchVideoFail(_context2.t1));\n\n        case 47:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 43], [10, 29, 33, 41], [34,, 36, 40]]);\n}\nexport function fetchCategInitSaga(action) {\n  var category, categ;\n  return _regeneratorRuntime.wrap(function fetchCategInitSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put(actions.fetchCategStart());\n\n        case 3:\n          _context3.next = 5;\n          return axios.post('/question', null, {\n            headers: {\n              'data-categ': 'category'\n            }\n          });\n\n        case 5:\n          category = _context3.sent;\n          categ = category.data && category.data.length > 0 ? category.data : null;\n          _context3.next = 9;\n          return put(actions.fetchCateg(categ));\n\n        case 9:\n          _context3.next = 19;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put(actions.fetchCategFail(_context3.t0));\n\n        case 15:\n          _context3.next = 17;\n          return delay(2000);\n\n        case 17:\n          _context3.next = 19;\n          return put(actions.fetchCategReset());\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\nexport function addCategInitSaga(action) {\n  var categs, transformCateg, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, categ, removeDuplicate;\n\n  return _regeneratorRuntime.wrap(function addCategInitSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          categs = String(action.categ).split(',');\n          transformCateg = [];\n          _iteratorNormalCompletion4 = true;\n          _didIteratorError4 = false;\n          _iteratorError4 = undefined;\n          _context4.prev = 5;\n\n          for (_iterator4 = _getIterator(categs); !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            categ = _step4.value;\n            transformCateg.push(String(categ).trim().charAt(0).toUpperCase() + String(categ).trim().toLowerCase().slice(1));\n          }\n\n          _context4.next = 13;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](5);\n          _didIteratorError4 = true;\n          _iteratorError4 = _context4.t0;\n\n        case 13:\n          _context4.prev = 13;\n          _context4.prev = 14;\n\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n\n        case 16:\n          _context4.prev = 16;\n\n          if (!_didIteratorError4) {\n            _context4.next = 19;\n            break;\n          }\n\n          throw _iteratorError4;\n\n        case 19:\n          return _context4.finish(16);\n\n        case 20:\n          return _context4.finish(13);\n\n        case 21:\n          removeDuplicate = _toConsumableArray(new _Set(transformCateg));\n          _context4.next = 24;\n          return put(actions.addCateg(removeDuplicate));\n\n        case 24:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[5, 9, 13, 21], [14,, 16, 20]]);\n}\nexport function checkLinkInitSaga(action) {\n  var link, _response;\n\n  return _regeneratorRuntime.wrap(function checkLinkInitSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          link = String(action.link).trim();\n          _context5.prev = 1;\n          _context5.next = 4;\n          return fileAxios.get(link, {\n            responseType: 'blob',\n            timeout: 8000\n          });\n\n        case 4:\n          _response = _context5.sent;\n\n          if (!_response.data.type.startsWith(action.mediaType + '/')) {\n            _context5.next = 9;\n            break;\n          }\n\n          _context5.next = 8;\n          return put(actions.checkLink(null, {\n            file: _response.data,\n            url: window.URL.createObjectURL(_response.data)\n          }));\n\n        case 8:\n          return _context5.abrupt(\"return\");\n\n        case 9:\n          throw new Error(\"Unknown format, Only \".concat(action.mediaType, \" files\"));\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](1);\n          _context5.next = 16;\n          return put(actions.checkLink(_context5.t0, null));\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[1, 12]]);\n}\nexport function fetchUsersInitSaga(action) {\n  var _response2;\n\n  return _regeneratorRuntime.wrap(function fetchUsersInitSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return axios.post('/users', null, {\n            headers: {\n              'data-categ': \"allteacher-\".concat(action.userStatus)\n            }\n          });\n\n        case 3:\n          _response2 = _context6.sent;\n          _context6.next = 6;\n          return put(actions.fetchUsers(_response2.data, action.userStatus));\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put(actions.fetchUsersFail(_context6.t0));\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\nexport function filterUserInitSaga(action) {\n  var filterUser;\n  return _regeneratorRuntime.wrap(function filterUserInitSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          filterUser = action.users.filter(function (user) {\n            return user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1;\n          });\n\n          if (!action.filterContent && action.users && action.users.length > 0) {\n            filterUser = _toConsumableArray(action.users);\n          }\n\n          _context7.next = 4;\n          return put(actions.filterUser(filterUser));\n\n        case 4:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nexport function showUserSelectInitSaga(action) {\n  var filterUser;\n  return _regeneratorRuntime.wrap(function showUserSelectInitSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          filterUser = action.users.filter(function (user) {\n            return action.userID.indexOf(user.id) !== -1;\n          });\n          _context8.next = 3;\n          return put(actions.showUserSelect(filterUser));\n\n        case 3:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":null,"metadata":{},"sourceType":"module"}