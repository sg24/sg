{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  cntErr: null,\n  categ: null,\n  showCateg: false,\n  categErr: null,\n  newCateg: null,\n  hideMediaBox: false,\n  hidAddItm: false,\n  linkValid: null,\n  snapshot: [],\n  media: {},\n  curTab: 'online',\n  startUser: true,\n  users: null,\n  onlineUser: [],\n  offlineUser: [],\n  filteredUser: null,\n  defaultValue: false,\n  uploadPercent: null,\n  submitError: null,\n  removedSnap: [],\n  submitForm: false,\n  id: null,\n  content: null,\n  title: null,\n  videoFetched: false,\n  showVideo: false,\n  editImage: false,\n  editVideo: false,\n  redirect: false\n};\n\nconst fetchCnt = (state, action) => {\n  if (action.cnt) {\n    let snapshot = [...action.cnt.snapshot];\n    let image = [...action.cnt.image];\n    let video = [...action.cnt.video];\n    let desc = JSON.parse(action.cnt.desc);\n    desc.blocks[0].text = action.cnt.title;\n    return updateObject(state, {\n      newCateg: action.cnt.category,\n      content: desc,\n      cntErr: null,\n      snapshot,\n      media: {\n        image,\n        video\n      }\n    });\n  }\n\n  return updateObject(state, {\n    redirect: true\n  });\n};\n\nconst fetchCntFail = (state, action) => {\n  return updateObject(state, {\n    cntErr: action.err\n  });\n};\n\nconst fetchVideo = (state, action) => {\n  let media = _objectSpread({}, state.media);\n\n  let videos = [...action.videos];\n  media.video = videos;\n  return updateObject(state, {\n    media,\n    videoFetched: true\n  });\n};\n\nconst fetchVideoFail = (state, action) => {\n  return updateObject(state, {\n    cntErr: action.err\n  });\n};\n\nconst videoFetched = (state, action) => {\n  return updateObject(state, {\n    showVideo: true\n  });\n};\n\nconst imageEdit = (state, action) => {\n  return updateObject(state, {\n    editImage: true\n  });\n};\n\nconst videoEdit = (state, action) => {\n  return updateObject(state, {\n    editVideo: true\n  });\n};\n\nconst fetchCategStart = (state, action) => {\n  return updateObject(state, {\n    showCateg: true,\n    categErr: null\n  });\n};\n\nconst fetchCategFail = (state, action) => {\n  return updateObject(state, {\n    categErr: {\n      message: action.err.message,\n      code: action.err.code\n    }\n  });\n};\n\nconst fetchCategReset = (state, action) => {\n  return updateObject(state, {\n    categErr: null,\n    showCateg: false\n  });\n};\n\nconst fetchCateg = (state, action) => {\n  return updateObject(state, {\n    categ: action.categ,\n    showCateg: action.categ !== null\n  });\n};\n\nconst addCateg = (state, action) => {\n  return updateObject(state, {\n    newCateg: action.categ\n  });\n};\n\nconst checkLink = (state, action) => {\n  return updateObject(state, {\n    linkValid: {\n      err: action.err,\n      media: action.media\n    }\n  });\n};\n\nconst resetLink = (state, action) => {\n  return updateObject(state, {\n    linkValid: null\n  });\n};\n\nconst addSnapshot = (state, action) => {\n  return updateObject(state, {\n    snapshot: action.snapshot\n  });\n};\n\nconst removeSnapshot = (state, action) => {\n  return updateObject(state, {\n    snapshot: action.snapshot\n  });\n};\n\nconst saveRemoveSnap = (state, action) => {\n  let snap = [...state.removedSnap];\n  snap.push(action.snapshotDet);\n  return updateObject(state, {\n    removedSnap: snap\n  });\n};\n\nconst removeMedia = (state, action) => {\n  return updateObject(state, {\n    media: action.media\n  });\n};\n\nconst submitMedia = (state, action) => {\n  return updateObject(state, {\n    media: action.media,\n    hideMediaBox: true\n  });\n};\n\nconst hideMediaBox = (state, action) => {\n  return updateObject(state, {\n    hideMediaBox: true\n  });\n};\n\nconst showMediaBox = (state, action) => {\n  return updateObject(state, {\n    hideMediaBox: false\n  });\n};\n\nconst fetchUsers = (state, action) => {\n  return updateObject(state, {\n    users: action.users,\n    filteredUser: null,\n    startUser: false,\n    defaultValue: true,\n    onlineUser: action.status === 'online' ? action.users : state.onlineUser,\n    offlineUser: action.status === 'offline' ? action.users : state.offlineUser,\n    curTab: action.status\n  });\n};\n\nconst fetchUsersFail = (state, action) => {\n  return updateObject(state, {\n    users: null,\n    filteredUser: null,\n    startUser: false\n  });\n};\n\nconst resetTab = (state, action) => {\n  return updateObject(state, {\n    users: null,\n    filteredUser: null,\n    startUser: false\n  });\n};\n\nconst inputDefaultValue = (state, action) => {\n  return updateObject(state, {\n    defaultValue: false\n  });\n};\n\nconst filterUser = (state, action) => {\n  return updateObject(state, {\n    filteredUser: action.users\n  });\n};\n\nconst userSelect = (state, action) => {\n  return updateObject(state, {\n    media: action.users\n  });\n};\n\nconst showUserSelect = (state, action) => {\n  return updateObject(state, {\n    users: action.users,\n    curTab: 'userSelect',\n    filteredUser: null,\n    defaultValue: true\n  });\n};\n\nconst submitFormStart = (state, action) => {\n  return updateObject(state, {\n    submitForm: true,\n    submitError: null,\n    submitFiles: 0\n  });\n};\n\nconst submitFormSuccess = (state, action) => {\n  return updateObject(state, {\n    uploadPercent: action.uploadPercent\n  });\n};\n\nconst submitFormFail = (state, action) => {\n  return updateObject(state, {\n    submitError: {\n      message: action.err.message,\n      code: action.err.code\n    }\n  });\n};\n\nconst formSubmitted = (state, action) => {\n  return updateObject(state, {\n    id: action.id\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_CNT:\n      return fetchCnt(state, action);\n\n    case actionTypes.FETCH_CNT_FAIL:\n      return fetchCntFail(state, action);\n\n    case actionTypes.FETCH_VIDEO:\n      return fetchVideo(state, action);\n\n    case actionTypes.FETCH_VIDEO_FAIL:\n      return fetchVideoFail(state, action);\n\n    case actionTypes.VIDEO_FETCHED:\n      return videoFetched(state, action);\n\n    case actionTypes.VIDEO_EDIT:\n      return videoEdit(state, action);\n\n    case actionTypes.IMAGE_EDIT:\n      return imageEdit(state, action);\n\n    case actionTypes.FETCH_CATEG_START:\n      return fetchCategStart(state, action);\n\n    case actionTypes.FETCH_CATEG_FAIL:\n      return fetchCategFail(state, action);\n\n    case actionTypes.FETCH_CATEG_RESET:\n      return fetchCategReset(state, action);\n\n    case actionTypes.FETCH_CATEG:\n      return fetchCateg(state, action);\n\n    case actionTypes.ADD_CATEG:\n      return addCateg(state, action);\n\n    case actionTypes.HIDE_MEDIA_BOX:\n      return hideMediaBox(state, action);\n\n    case actionTypes.SHOW_MEDIA_BOX:\n      return showMediaBox(state, action);\n\n    case actionTypes.CHECK_LINK:\n      return checkLink(state, action);\n\n    case actionTypes.RESET_LINK:\n      return resetLink(state, action);\n\n    case actionTypes.ADD_SNAPSHOT:\n      return addSnapshot(state, action);\n\n    case actionTypes.REMOVE_SNAPSHOT:\n      return removeSnapshot(state, action);\n\n    case actionTypes.SAVE_REMOVE_SNAP:\n      return saveRemoveSnap(state, action);\n\n    case actionTypes.REMOVE_MEDIA:\n      return removeMedia(state, action);\n\n    case actionTypes.SUBMIT_MEDIA:\n      return submitMedia(state, action);\n\n    case actionTypes.FETCH_USERS:\n      return fetchUsers(state, action);\n\n    case actionTypes.FETCH_USERS_FAIL:\n      return fetchUsersFail(state, action);\n\n    case actionTypes.RESET_TAB:\n      return resetTab(state, action);\n\n    case actionTypes.INPUT_DEFAULT_VALUE:\n      return inputDefaultValue(state, action);\n\n    case actionTypes.FILTER_USER:\n      return filterUser(state, action);\n\n    case actionTypes.USER_SELECT:\n      return userSelect(state, action);\n\n    case actionTypes.SHOW_USER_SELECT:\n      return showUserSelect(state, action);\n\n    case actionTypes.SUBMIT_FORM_START:\n      return submitFormStart(state, action);\n\n    case actionTypes.SUBMIT_FORM_SUCCESS:\n      return submitFormSuccess(state, action);\n\n    case actionTypes.SUBMIT_FORM_FAIL:\n      return submitFormFail(state, action);\n\n    case actionTypes.FORM_SUBMITTED:\n      return formSubmitted(state, action);\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}