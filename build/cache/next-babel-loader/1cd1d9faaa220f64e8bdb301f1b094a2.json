{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var updateObject = function updateObject(oldObject, updatedProperties) {\n  return _objectSpread({}, oldObject, {}, updatedProperties);\n};\nexport var transformNumber = function transformNumber(favNumber) {\n  var favNumArray = String(favNumber).split(\"\");\n\n  if (favNumArray.length === 4) {\n    return \"\".concat(favNumArray[0], \"K\");\n  }\n\n  if (favNumArray.length === 5) {\n    var favNum = favNumArray[0] + favNumArray[1];\n    return \"\".concat(favNum, \"K\");\n  }\n\n  if (favNumArray.length === 6) {\n    var _favNum = favNumArray[0] + favNumArray[1] + favNumArray[2];\n\n    return \"\".concat(_favNum, \"K\");\n  }\n\n  if (favNumArray.length === 7) {\n    var _favNum2 = favNumArray[0];\n    return \"\".concat(_favNum2, \"M\");\n  }\n\n  if (favNumArray.length === 8) {\n    var _favNum3 = favNumArray[0] + favNumArray[1];\n\n    return \"\".concat(_favNum3, \"M\");\n  }\n\n  if (favNumArray.length === 9) {\n    var _favNum4 = favNumArray[0] + favNumArray[1] + favNumArray[2];\n\n    return \"\".concat(_favNum4, \"M\");\n  }\n\n  if (favNumArray.length === 10) {\n    var _favNum5 = favNumArray[0];\n    return \"\".concat(_favNum5, \"B\");\n  }\n\n  if (favNumArray.length === 11) {\n    var _favNum6 = favNumArray[0] + favNumArray[1];\n\n    return \"\".concat(_favNum6, \"B\");\n  }\n\n  return favNumber;\n};\nexport var transformString = function transformString(val) {\n  var curVal = String(val).substr(0, 115);\n  return curVal;\n};\nexport function changeFav(datas, dataID) {\n  var dataArray = _toConsumableArray(datas);\n\n  var dtIndex;\n  var dtArray = dataArray.filter(function (data, index) {\n    if (data.id === dataID) {\n      dtIndex = index;\n      return true;\n    }\n\n    return false;\n  });\n\n  if (dtArray.length > 0) {\n    var data = dtArray[0];\n    data = updateObject(data, {\n      liked: !data.liked\n    });\n\n    if (data.liked) {\n      data = updateObject(data, {\n        favorite: data.favorite + 1\n      });\n    } else {\n      data = updateObject(data, {\n        favorite: data.favorite - 1\n      });\n    }\n\n    var updateDataArray = _toConsumableArray(dataArray);\n\n    updateDataArray[dtIndex] = data;\n\n    var updateStartArray = _toConsumableArray(updateDataArray);\n\n    data = updateObject(data, {\n      changeFavActive: data.liked\n    });\n    updateStartArray[dtIndex] = data;\n    return {\n      updateStartArray: updateStartArray,\n      updateDataArray: updateDataArray\n    };\n  }\n\n  return dataArray;\n}\n;\nexport var checkValidity = function checkValidity(value, rules) {\n  var isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  return isValid;\n};\nexport var getSnapshot = function getSnapshot(url, mediaType) {\n  var canvas = document.createElement('canvas');\n  return new _Promise(function (resolve, reject) {\n    if (canvas.getContext) {\n      var multipleEventListener = function multipleEventListener(el, mediaLoadHandler) {\n        'loadedmetadata loadeddata suspend'.split(' ').forEach(function (event) {\n          el.addEventListener(event, mediaLoadHandler, false);\n        });\n      };\n\n      var mediaLoadHandler = function mediaLoadHandler() {\n        if (++event_fired === 3) {\n          media.currentTime = 1000;\n          media.addEventListener('seeked', function (event) {\n            canvas.width = media.videoWidth;\n            canvas.height = media.videoHeight;\n            canvas.getContext('2d').drawImage(media, 0, 0);\n            var snapshot = canvas.toDataURL('image/png');\n            resolve(snapshot);\n          });\n        }\n      };\n\n      var media = document.createElement(mediaType);\n      media.src = url;\n      multipleEventListener(media, mediaLoadHandler);\n      var event_fired = 0;\n    } else {\n      reject('Please update your Browser');\n    }\n  });\n};\nexport var getImageURL = function getImageURL(url) {\n  var image = new Image();\n  image.src = url;\n  var canvas = document.createElement('canvas');\n  return new _Promise(function (resolve, reject) {\n    if (canvas.getContext) {\n      image.onload = function () {\n        canvas.width = image.naturalWidth;\n        canvas.height = image.naturalHeight;\n        canvas.getContext('2d').drawImage(image, 0, 0);\n        var snapShot = canvas.toDataURL('image/png');\n        resolve(snapShot);\n      };\n    } else {\n      reject('Please update your Browser');\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}