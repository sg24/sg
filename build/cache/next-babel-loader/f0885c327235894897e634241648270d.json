{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(submitFormInitSaga);\n\nimport { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function submitFormInitSaga(action) {\n  var error, key;\n  return _regeneratorRuntime.wrap(function submitFormInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put(actions.submitFormStart());\n\n        case 2:\n          _context.prev = 2;\n          _context.next = 5;\n          return axios.post('/signup', action.formData);\n\n        case 5:\n          _context.next = 7;\n          return put(actions.formSubmitted());\n\n        case 7:\n          _context.next = 15;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          error = null;\n\n          if (_context.t0.response) {\n            if (_context.t0.response.data && _context.t0.response.data.keyValue) {\n              for (key in _context.t0.response.data.keyValue) {\n                if (key === 'email') {\n                  error = \"\".concat(key, \"  already taken\");\n                } else if (key === 'username') {\n                  error = \"\".concat(key, \" already taken\");\n                } else {\n                  error = _context.t0.message;\n                }\n              }\n            } else {\n              error = typeof _context.t0.response.data !== 'object' ? _context.t0.response.data : 'Connection Error';\n            }\n          } else {\n            error = _context.t0.message;\n          }\n\n          _context.next = 15;\n          return put(actions.submitFormFail(error));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 9]]);\n}","map":null,"metadata":{},"sourceType":"module"}