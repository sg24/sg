{"ast":null,"code":"import { put, delay } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function* fetchUsersInitSaga() {\n  try {\n    let response = yield axios.post('/users', null, {\n      headers: {\n        'data-categ': `allteacher-notab`\n      }\n    });\n    yield put(actions.fetchUsers(response.data));\n  } catch (err) {\n    yield put(actions.fetchUsersFail(err));\n  }\n}\nexport function* filterUserInitSaga(action) {\n  let filterUser = null;\n\n  if (!action.filterContent) {\n    filterUser = action.users;\n  } else {\n    filterUser = action.users.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1);\n  }\n\n  yield put(actions.filterUser(filterUser));\n}\nexport function* filterUserSelectInitSaga(action) {\n  let filterUser = null;\n\n  if (!action.filterContent) {\n    filterUser = action.userSelect;\n  } else {\n    filterUser = action.userSelect.filter(user => user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1);\n  }\n\n  yield put(actions.filterUserSelect(filterUser));\n}\nexport function* shareUserInitSaga(action) {\n  let shareUser = [];\n\n  for (let user of [...action.userSelect]) {\n    shareUser.push(user.id);\n  }\n\n  try {\n    yield put(actions.shareUserStart());\n    let field = action.cntType === 'post' ? 'postID' : action.cntType === 'question' ? 'queID' : 'pwtID';\n    yield axios.patch('/header', {\n      users: JSON.stringify(shareUser),\n      id: action.shareID,\n      model: action.cntType,\n      field\n    }, {\n      headers: {\n        'data-categ': 'shareuser'\n      }\n    });\n    yield delay(1000);\n    yield put(actions.shareUser());\n  } catch (err) {\n    yield put(actions.shareUserfail(err));\n    yield delay(1000);\n    yield put(actions.shareUser());\n  }\n}","map":null,"metadata":{},"sourceType":"module"}