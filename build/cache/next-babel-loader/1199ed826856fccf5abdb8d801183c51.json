{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function* submitFormInitSaga(action) {\n  yield put(actions.submitFormStart());\n\n  try {\n    yield axios.post('/forget/password', action.formData);\n    yield put(actions.formSubmitted());\n  } catch (err) {\n    let error = null;\n\n    if (err.response) {\n      if (err.response.data && err.response.data.keyValue) {\n        for (let key in err.response.data.keyValue) {\n          if (key === 'email') {\n            error = `${key}  already taken`;\n          } else if (key === 'username') {\n            error = `${key} already taken`;\n          } else {\n            error = err.message;\n          }\n        }\n      } else {\n        error = typeof err.response.data !== 'object' ? err.response.data : 'Connection Error';\n      }\n    } else {\n      error = err.message;\n    }\n\n    yield put(actions.submitFormFail(error));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}