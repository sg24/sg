{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as actions from '../../../store/actions/index';\nimport NavigationLists from '../../../components/Navigation/NavigationLists/NavigationLists';\nimport Loader from '../../../components/UI/Loader/Loader';\nimport Aux from '../../../hoc/Auxs/Auxs';\n\nclass NavigationList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      show: false,\n      showNavList: false,\n      showNavItm: false,\n      default: false,\n      category: null\n    });\n\n    _defineProperty(this, \"showNavTipHandler\", () => {\n      if (!this.state.showNavList) {\n        this.setState({\n          show: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"hidNavTipHandler\", () => {\n      this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(this, \"showNavListHandler\", () => {\n      this.props.onshowNavList();\n      this.setState((prevState, props) => {\n        return {\n          show: false,\n          default: false,\n          showNavList: prevState.showNavItm ? true : !prevState.showNavList,\n          showNavItm: false\n        };\n      });\n    });\n\n    _defineProperty(this, \"showNavItmHandler\", () => {\n      this.props.onshowNavList();\n      this.setState((prevState, props) => {\n        return {\n          showNavItm: true,\n          show: false,\n          default: false,\n          showNavList: prevState.showNavItm ? !prevState.showNavList : true\n        };\n      });\n    });\n\n    _defineProperty(this, \"fetchNavListHandler\", category => {\n      this.props.onFetchNavList(category);\n      this.setState({\n        category\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.showNavList && !this.state.default && this.props.hidNavList) {\n      this.setState({\n        default: true,\n        show: false,\n        showNavList: false\n      });\n    }\n  }\n\n  render() {\n    let navTipClass = [\"site-header__tool-tip site-header__tool-tip--nav\"];\n    let navClass = [\"site-header__menu--nav__opt\"];\n    let navList = null;\n    let navOptClass = [\"site-header__menu--nav__opt--det\"];\n\n    if (this.state.show) {\n      navTipClass.push(\"site-header__tool-tip--nav__visible\");\n    }\n\n    if (this.state.showNavList) {\n      navClass.push(\"site-header__menu--nav__opt--visible\");\n    }\n\n    if (this.state.showNavList && this.state.category) {\n      let navOptCateg = this.state.category === 'post' ? 'site-header__menu--nav__opt--det__pt' : null;\n      navOptCateg = this.state.category === 'question' ? 'site-header__menu--nav__opt--det__que' : navOptCateg;\n      navOptCateg = this.state.category === 'onlineque' ? 'site-header__menu--nav__opt--det__pwt' : navOptCateg;\n      navOptCateg = this.state.category === 'group' ? 'site-header__menu--nav__opt--det__grp' : navOptCateg;\n      navOptCateg = this.state.category === 'poet' ? 'site-header__menu--nav__opt--det__onlineque' : navOptCateg;\n      navOptClass.push(navOptCateg);\n      navList = this.props.navList ? __jsx(\"ul\", {\n        className: navOptClass.join(' ')\n      }, __jsx(NavigationLists, {\n        content: this.props.navList,\n        category: this.props.navListCateg\n      })) : __jsx(\"div\", {\n        className: `${navOptClass.join(' ')} site-header__menu--nav__opt--det__loading`\n      }, __jsx(Loader, null));\n    }\n\n    let navItm = __jsx(Aux, null, navList, __jsx(\"ul\", {\n      className: \"site-header__menu--nav__opt--itm\"\n    }, __jsx(\"li\", {\n      onMouseEnter: this.fetchNavListHandler.bind(this, 'post'),\n      className: this.state.category === 'post' ? 'active-header-nav' : null\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'newspaper'],\n      className: \"icon icon__site-header--nav__itm\"\n    }), \"News Feed\", __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'caret-right'],\n      className: \"icon icon__site-header--nav__angle\"\n    })), __jsx(\"li\", {\n      onMouseEnter: this.fetchNavListHandler.bind(this, 'question'),\n      className: this.state.category === 'question' ? 'active-header-nav' : null\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'question'],\n      className: \"icon icon__site-header--nav__itm\"\n    }), \"Questions\", __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'caret-right'],\n      className: \"icon icon__site-header--nav__angle\"\n    })), __jsx(\"li\", {\n      onMouseEnter: this.fetchNavListHandler.bind(this, 'poet'),\n      className: this.state.category === 'poet' ? 'active-header-nav' : null\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'book'],\n      className: \"icon icon__site-header--nav__itm\"\n    }), \"Writers\", __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'caret-right'],\n      className: \"icon icon__site-header--nav__angle\"\n    }))));\n\n    if (this.state.showNavItm) {\n      navItm = __jsx(\"ul\", {\n        className: \"site-header__menu--nav__opt--itm__sm-categ--cnt\"\n      }, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/post\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'newspaper'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"News Feed\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/question\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'question'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"Questions\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/poet\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'book'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"Writers\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"/users\"\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'users'],\n        className: \"icon icon__site-header--nav__itm\"\n      }), \"Scholars\")));\n    }\n\n    return __jsx(\"div\", {\n      className: \"site-header__menu--nav\"\n    }, __jsx(\"div\", {\n      className: \"site-header__menu--nav__icn\",\n      onMouseEnter: this.showNavTipHandler,\n      onMouseLeave: this.hidNavTipHandler,\n      onClick: this.showNavListHandler\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'bars'],\n      className: \"icon icon__site-header--list\"\n    })), __jsx(\"div\", {\n      className: navTipClass.join(' ')\n    }, \"Options\"), __jsx(\"div\", {\n      className: \"site-header__menu--nav__opt--itm__sm-categ\",\n      onClick: this.showNavItmHandler\n    }, __jsx(FontAwesomeIcon, {\n      icon: ['fas', 'external-link-alt']\n    })), __jsx(\"nav\", {\n      className: navClass.join(' ')\n    }, navItm));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    navListCateg: state.header.navListCateg,\n    navList: state.header.navList,\n    hidNavList: state.header.hidNavList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onshowNavList: () => dispatch(actions.showNavList()),\n    onFetchNavList: category => dispatch(actions.fetchNavlistInit(category))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationList);","map":null,"metadata":{},"sourceType":"module"}