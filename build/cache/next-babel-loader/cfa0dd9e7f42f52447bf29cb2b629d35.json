{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport var submit = function submit(formData) {\n  return function (dispatch) {\n    dispatch(actions.submitFormStart());\n    var formContent = new FormData();\n\n    for (var key in formData) {\n      if (key !== 'video' && key !== 'image') {\n        formContent.append(key, formData[key]);\n      }\n\n      if (key === 'video' && formData[key].length > 0) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(formData[key]), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var video = _step.value;\n            var ext = video.file.type.split('/').pop();\n            formContent.append(key, video.file, \"\".concat(video.id, \".\").concat(ext));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (key === 'image' && formData[key].length > 0) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _getIterator(formData[key]), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var image = _step2.value;\n\n            var _ext = image.file.type.split('/').pop();\n\n            formContent.append(key, image.file, \"\".concat(image.id, \".\").concat(_ext));\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n\n    axios.post('/add/question', formContent, {\n      onUploadProgress: function onUploadProgress(progressEvent) {\n        if (progressEvent.lengthComputable) {\n          var percentage = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          dispatch(actions.submitFormSuccess(percentage));\n        }\n      }\n    }).then(function (res) {\n      dispatch(actions.formSubmitted(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(actions.submitFormFail(err));\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}