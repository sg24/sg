{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport var submit = function submit(formData) {\n  return function (dispatch) {\n    dispatch(actions.submitFormStart());\n    var formContent = new FormData();\n\n    for (var key in formData) {\n      if (key !== 'video' && key !== 'image' && key !== 'removedSnap' && key !== 'snapshot') {\n        formContent.append(key, formData[key]);\n      }\n\n      if (key === 'video') {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _getIterator(formData[key]), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var video = _step.value;\n            var ext = video.file.type.split('/').pop();\n            formContent.append(key, video.file, \"\".concat(video.id, \".\").concat(ext));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (key === 'image') {\n        var send = 0;\n        var uploaded = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _getIterator(formData[key]), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var image = _step2.value;\n\n            if (image.mediaType) {\n              uploaded.push({\n                id: image.id,\n                filename: image.filename,\n                type: image.type\n              });\n              ++send;\n\n              if (send === formData[key].length) {\n                formContent.append('uploadedimage', _JSON$stringify(uploaded));\n              }\n            } else {\n              var _ext = image.file.type.split('/').pop();\n\n              formContent.append(key, image.file, \"\".concat(image.id, \".\").concat(_ext));\n              ++send;\n\n              if (send === formData[key].length) {\n                formContent.append('uploadedimage', _JSON$stringify(uploaded));\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      if (key === 'snapshot') {\n        var uploadedSnap = [];\n        var uploadedVideo = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = _getIterator(formData[key]), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var media = _step3.value;\n            uploadedSnap.push({\n              id: media.id,\n              videoID: media.videoID,\n              videoCnt: media.videoCnt\n            });\n            uploadedVideo.push({\n              id: media.video.id,\n              snapshotID: media.video.snapshotID,\n              type: media.video.type\n            });\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n              _iterator3[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        formContent.append('uploadedvideo', _JSON$stringify(uploadedVideo));\n        formContent.append('uploadedsnap', _JSON$stringify(uploadedSnap));\n      }\n\n      if (key === 'removedSnap' && formData[key].length > 0) {\n        formContent.append('removedmedia', _JSON$stringify(formData[key]));\n      }\n    }\n\n    axios.post('/edit/post', formContent, {\n      onUploadProgress: function onUploadProgress(progressEvent) {\n        if (progressEvent.lengthComputable) {\n          var percentage = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          dispatch(actions.submitFormSuccess(percentage));\n        }\n      }\n    }).then(function (res) {\n      dispatch(actions.formSubmitted(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(actions.submitFormFail(err));\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}