{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchCntInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(ansCorrectInitSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(ansWrongInitSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(changeFavSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(changeCntInitSaga);\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { put, delay } from 'redux-saga/effects';\nimport { changeFav } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nimport global from '../../../../global/global';\nexport function fetchCntInitSaga(action) {\n  var response, images, snaps, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, image, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, snap;\n\n  return _regeneratorRuntime.wrap(function fetchCntInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.post(\"/view/\".concat(action.categ, \"/\").concat(action.id), null, {\n            headers: {\n              'data-categ': 'viewcnt'\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!response.data) {\n            _context.next = 50;\n            break;\n          }\n\n          images = [];\n          snaps = [];\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context.prev = 10;\n\n          for (_iterator = _getIterator(response.data.image); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            image = _step.value;\n            images.push(_objectSpread({\n              url: \"\".concat(global.url, \"/media/image/\").concat(image.id)\n            }, image, {\n              mediaType: 'image'\n            }));\n          }\n\n          _context.next = 18;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](10);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n\n        case 18:\n          _context.prev = 18;\n          _context.prev = 19;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 21:\n          _context.prev = 21;\n\n          if (!_didIteratorError) {\n            _context.next = 24;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 24:\n          return _context.finish(21);\n\n        case 25:\n          return _context.finish(18);\n\n        case 26:\n          _iteratorNormalCompletion2 = true;\n          _didIteratorError2 = false;\n          _iteratorError2 = undefined;\n          _context.prev = 29;\n\n          for (_iterator2 = _getIterator(response.data.snapshot); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            snap = _step2.value;\n            snaps.push(_objectSpread({\n              url: \"\".concat(global.url, \"/media/image/\").concat(snap.id)\n            }, snap, {\n              mediaType: 'snapshot'\n            }));\n          }\n\n          _context.next = 37;\n          break;\n\n        case 33:\n          _context.prev = 33;\n          _context.t1 = _context[\"catch\"](29);\n          _didIteratorError2 = true;\n          _iteratorError2 = _context.t1;\n\n        case 37:\n          _context.prev = 37;\n          _context.prev = 38;\n\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n\n        case 40:\n          _context.prev = 40;\n\n          if (!_didIteratorError2) {\n            _context.next = 43;\n            break;\n          }\n\n          throw _iteratorError2;\n\n        case 43:\n          return _context.finish(40);\n\n        case 44:\n          return _context.finish(37);\n\n        case 45:\n          response.data.image = images;\n          response.data.snapshot = snaps;\n          response.data.video = [];\n          _context.next = 50;\n          return put(actions.fetchCnt(response.data));\n\n        case 50:\n          _context.next = 56;\n          break;\n\n        case 52:\n          _context.prev = 52;\n          _context.t2 = _context[\"catch\"](0);\n          _context.next = 56;\n          return put(actions.fetchCntFail(_context.t2));\n\n        case 56:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 52], [10, 14, 18, 26], [19,, 21, 25], [29, 33, 37, 45], [38,, 40, 44]]);\n}\nexport function ansCorrectInitSaga(action) {\n  return _regeneratorRuntime.wrap(function ansCorrectInitSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n          if (!(action.categ === 'reply')) {\n            _context2.next = 6;\n            break;\n          }\n\n          _context2.next = 4;\n          return axios.patch('/view', {\n            id: action.commentID,\n            replyID: action.replyID\n          }, {\n            headers: {\n              'data-categ': 'answercorretreply'\n            }\n          });\n\n        case 4:\n          _context2.next = 18;\n          break;\n\n        case 6:\n          if (!(action.categ === 'smile')) {\n            _context2.next = 11;\n            break;\n          }\n\n          _context2.next = 9;\n          return axios.patch('/view', {\n            id: action.commentID\n          }, {\n            headers: {\n              'data-categ': 'smile'\n            }\n          });\n\n        case 9:\n          _context2.next = 18;\n          break;\n\n        case 11:\n          if (!(action.categ === 'smilereply')) {\n            _context2.next = 16;\n            break;\n          }\n\n          _context2.next = 14;\n          return axios.patch('/view', {\n            id: action.commentID,\n            replyID: action.replyID\n          }, {\n            headers: {\n              'data-categ': 'smilereply'\n            }\n          });\n\n        case 14:\n          _context2.next = 18;\n          break;\n\n        case 16:\n          _context2.next = 18;\n          return axios.patch('/view', {\n            id: action.commentID\n          }, {\n            headers: {\n              'data-categ': 'answercorrect'\n            }\n          });\n\n        case 18:\n          _context2.next = 20;\n          return put(actions.ansCorrect(action.commentID, action.categ, action.replyID));\n\n        case 20:\n          _context2.next = 30;\n          break;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 26;\n          return put(actions.fetchCntFail(_context2.t0));\n\n        case 26:\n          _context2.next = 28;\n          return delay(1000);\n\n        case 28:\n          _context2.next = 30;\n          return put(actions.resetModel());\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 22]]);\n}\nexport function ansWrongInitSaga(action) {\n  return _regeneratorRuntime.wrap(function ansWrongInitSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n\n          if (!(action.categ === 'reply')) {\n            _context3.next = 6;\n            break;\n          }\n\n          _context3.next = 4;\n          return axios.patch('/view', {\n            id: action.commentID,\n            replyID: action.replyID\n          }, {\n            headers: {\n              'data-categ': 'answerwrongreply'\n            }\n          });\n\n        case 4:\n          _context3.next = 8;\n          break;\n\n        case 6:\n          _context3.next = 8;\n          return axios.patch('/view', {\n            id: action.commentID\n          }, {\n            headers: {\n              'data-categ': 'answerwrong'\n            }\n          });\n\n        case 8:\n          _context3.next = 10;\n          return put(actions.ansWrong(action.commentID, action.categ, action.replyID));\n\n        case 10:\n          _context3.next = 20;\n          break;\n\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 16;\n          return put(actions.fetchCntFail(_context3.t0));\n\n        case 16:\n          _context3.next = 18;\n          return delay(1000);\n\n        case 18:\n          _context3.next = 20;\n          return put(actions.resetModel());\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 12]]);\n}\nexport function changeFavSaga(action) {\n  var updateFav, field;\n  return _regeneratorRuntime.wrap(function changeFavSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          updateFav = changeFav(action.id, action.liked, action.favAdd, action.changedFav);\n          _context4.next = 3;\n          return put(actions.changeMainFavoriteStart(updateFav.favDet.liked));\n\n        case 3:\n          _context4.next = 5;\n          return put(actions.changeFavPtStart(updateFav.favDet.id, updateFav.favDet.liked));\n\n        case 5:\n          _context4.prev = 5;\n          field = action.cntGrp === 'post' ? 'postID' : action.cntGrp === 'question' ? 'queID' : 'pwtID';\n          _context4.next = 9;\n          return axios.patch('/header', {\n            id: updateFav.favDet.id,\n            model: action.cntGrp,\n            field: field\n          }, {\n            headers: {\n              'data-categ': 'changefavorite'\n            }\n          });\n\n        case 9:\n          _context4.next = 11;\n          return delay(500);\n\n        case 11:\n          _context4.next = 13;\n          return put(actions.changeMainFavoriteReset());\n\n        case 13:\n          _context4.next = 15;\n          return put(actions.changeFav(updateFav.updateChangeFav));\n\n        case 15:\n          _context4.next = 25;\n          break;\n\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](5);\n          _context4.next = 21;\n          return delay(500);\n\n        case 21:\n          _context4.next = 23;\n          return put(actions.changeMainFavoriteReset());\n\n        case 23:\n          _context4.next = 25;\n          return put(actions.changeFavPtFail());\n\n        case 25:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[5, 17]]);\n}\nexport function changeCntInitSaga(action) {\n  var field, payload;\n  return _regeneratorRuntime.wrap(function changeCntInitSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          field = action.modelType === 'post' ? 'postID' : action.modelType === 'question' ? 'queID' : 'pwtID';\n\n          if (action.confirm) {\n            _context5.next = 5;\n            break;\n          }\n\n          _context5.next = 4;\n          return put(actions.changeCntStart(action.title, action.id, action.det, action.modelType));\n\n        case 4:\n          return _context5.abrupt(\"return\");\n\n        case 5:\n          _context5.prev = 5;\n\n          if (!(action.det === 'delete')) {\n            _context5.next = 12;\n            break;\n          }\n\n          payload = _JSON$stringify({\n            id: action.id,\n            model: action.modelType,\n            field: field\n          });\n          _context5.next = 10;\n          return axios[\"delete\"]('/header', {\n            headers: {\n              'data-categ': \"deletecnt-\".concat(payload)\n            }\n          });\n\n        case 10:\n          _context5.next = 19;\n          break;\n\n        case 12:\n          if (!(action.det === 'draft')) {\n            _context5.next = 17;\n            break;\n          }\n\n          _context5.next = 15;\n          return axios.patch('/header', {\n            id: action.id,\n            model: action.modelType,\n            field: field\n          }, {\n            headers: {\n              'data-categ': 'draftmode'\n            }\n          });\n\n        case 15:\n          _context5.next = 19;\n          break;\n\n        case 17:\n          _context5.next = 19;\n          return axios.patch('/header', {\n            id: action.id,\n            model: action.modelType,\n            field: field\n          }, {\n            headers: {\n              'data-categ': 'publishmode'\n            }\n          });\n\n        case 19:\n          _context5.next = 21;\n          return put(actions.changeCnt());\n\n        case 21:\n          _context5.next = 23;\n          return delay(1000);\n\n        case 23:\n          _context5.next = 25;\n          return put(actions.changeCntReset(true));\n\n        case 25:\n          _context5.next = 35;\n          break;\n\n        case 27:\n          _context5.prev = 27;\n          _context5.t0 = _context5[\"catch\"](5);\n          _context5.next = 31;\n          return put(actions.changeCntFail(_context5.t0));\n\n        case 31:\n          _context5.next = 33;\n          return delay(1000);\n\n        case 33:\n          _context5.next = 35;\n          return put(actions.changeCntReset(false));\n\n        case 35:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[5, 27]]);\n}","map":null,"metadata":{},"sourceType":"module"}