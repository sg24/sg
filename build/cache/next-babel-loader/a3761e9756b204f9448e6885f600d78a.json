{"ast":null,"code":"import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reduxThunk from 'redux-thunk';\nimport auth from './store/reducers/auth';\nimport header from './store/reducers/header';\nimport form from './store/reducers/form';\nimport main from './store/reducers/main';\nimport { rootSaga } from './store/sagas/index';\n\nconst bindMiddleware = middleware => {\n  if (false) {// const { composeWithDevTools } = require('redux-devtools-extension')\n    // return composeWithDevTools(applyMiddleware(...middleware))\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const rootReducers = combineReducers({\n    auth,\n    header,\n    main,\n    form\n  });\n  const store = createStore(rootReducers, initialState, bindMiddleware([reduxThunk, sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}