{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchNotifyInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(changeFavNotifySaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchNavlistInitSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchNotifyActiveInitSaga),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(defaultNotifyActiveInitSaga),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(headerFilterInitSaga);\n\nimport { put } from 'redux-saga/effects';\nimport axios from '../../axios';\nimport { changeFav } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nexport function fetchNotifyInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchNotifyInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put(actions.fetchNotifyStart());\n\n        case 3:\n          _context.next = 5;\n          return axios.post('/header', {\n            fetchCnt: true\n          }, {\n            headers: {\n              'data-categ': 'allnotification'\n            }\n          });\n\n        case 5:\n          response = _context.sent;\n\n          if (!(response.data.collTotal > 0)) {\n            _context.next = 11;\n            break;\n          }\n\n          _context.next = 9;\n          return put(actions.fetchNotify(response.data.coll));\n\n        case 9:\n          _context.next = 13;\n          break;\n\n        case 11:\n          _context.next = 13;\n          return put(actions.fetchNotify([]));\n\n        case 13:\n          _context.next = 19;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 19;\n          return put(actions.fetchNotifyFail(_context.t0));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 15]]);\n}\nexport function changeFavNotifySaga(action) {\n  var notify;\n  return _regeneratorRuntime.wrap(function changeFavNotifySaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          notify = changeFav(action.notify, action.notifyID);\n          _context2.next = 3;\n          return put(actions.changeFavNotifyStart(notify.updateStartArray));\n\n        case 3:\n          _context2.next = 5;\n          return put(actions.changeFavNotify(notify.updateDataArray));\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function fetchNavlistInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchNavlistInitSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put(actions.fetchNavlistStart());\n\n        case 3:\n          _context3.next = 5;\n          return axios.post('/header', {\n            categ: action.category\n          }, {\n            headers: {\n              'data-categ': 'category'\n            }\n          });\n\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return put(actions.fetchNavlist(action.category, response.data));\n\n        case 8:\n          _context3.next = 12;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\nexport function fetchNotifyActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchNotifyActiveInitSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'allnotification'\n            }\n          });\n\n        case 3:\n          response = _context4.sent;\n\n          if (!(response.data.collTotal > 0)) {\n            _context4.next = 7;\n            break;\n          }\n\n          _context4.next = 7;\n          return put(actions.fetchNotifyActive(response.data.collTotal));\n\n        case 7:\n          ;\n          _context4.next = 12;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\nexport function defaultNotifyActiveInitSaga(action) {\n  return _regeneratorRuntime.wrap(function defaultNotifyActiveInitSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'resetnotification'\n            }\n          });\n\n        case 3:\n          _context5.next = 5;\n          return put(actions.defaultNotifyActive());\n\n        case 5:\n          _context5.next = 9;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\nexport function headerFilterInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function headerFilterInitSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return put(actions.headerFilterStart(action.filterPos, action.filterLastPos));\n\n        case 3:\n          _context6.next = 5;\n          return axios.post('/header', {\n            filterCnt: action.filterCnt\n          }, {\n            headers: {\n              'data-categ': 'headerfilter'\n            }\n          });\n\n        case 5:\n          response = _context6.sent;\n          _context6.next = 8;\n          return put(actions.headerFilter(response.data));\n\n        case 8:\n          _context6.next = 14;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 14;\n          return put(actions.headerFilterFail(_context6.t0));\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 10]]);\n}","map":null,"metadata":{},"sourceType":"module"}