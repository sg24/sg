{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar initialState = {\n  users: null,\n  userSelect: null,\n  filterUser: null,\n  filterUserSelect: null,\n  viewAllUsers: true,\n  shareID: null,\n  cntType: null,\n  start: false,\n  shareErr: null\n};\n\nvar fetchUsers = function fetchUsers(state, action) {\n  return updateObject(state, {\n    users: action.users,\n    filterUser: null\n  });\n};\n\nvar userSelect = function userSelect(state, action) {\n  return updateObject(state, {\n    userSelect: action.userSelect\n  });\n};\n\nvar viewUsers = function viewUsers(state, action) {\n  return updateObject(state, {\n    viewAllUsers: !state.viewAllUsers\n  });\n};\n\nvar removeUser = function removeUser(state, action) {\n  return updateObject(state, {\n    userSelect: action.users,\n    viewAllUsers: action.users && !action.users.length > 0\n  });\n};\n\nvar filterUser = function filterUser(state, action) {\n  return updateObject(state, {\n    filterUser: action.users\n  });\n};\n\nvar filterUserSelect = function filterUserSelect(state, action) {\n  return updateObject(state, {\n    filterUserSelect: action.userSelect\n  });\n};\n\nvar shareID = function shareID(state, action) {\n  return updateObject(state, {\n    shareID: String(action.shareID),\n    cntType: action.cntType\n  });\n};\n\nvar shareUserStart = function shareUserStart(state, action) {\n  return updateObject(state, {\n    start: true\n  });\n};\n\nvar shareUserFail = function shareUserFail(state, action) {\n  return updateObject(state, {\n    shareErr: action.err\n  });\n};\n\nvar shareUser = function shareUser(state, action) {\n  return updateObject(state, {\n    users: null,\n    userSelect: null,\n    filterUser: null,\n    filterUserSelect: null,\n    viewAllUsers: true,\n    shareID: null,\n    share: false,\n    start: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_USERS:\n      return fetchUsers(state, action);\n\n    case actionTypes.USER_SELECT:\n      return userSelect(state, action);\n\n    case actionTypes.VIEW_USERS:\n      return viewUsers(state, action);\n\n    case actionTypes.REMOVE_USER:\n      return removeUser(state, action);\n\n    case actionTypes.FILTER_USER:\n      return filterUser(state, action);\n\n    case actionTypes.FILTER_USER_SELECT:\n      return filterUserSelect(state, action);\n\n    case actionTypes.SHARE_ID:\n      return shareID(state, action);\n\n    case actionTypes.SHARE_USER_START:\n      return shareUserStart(state, action);\n\n    case actionTypes.SHARE_USER_FAIL:\n      return shareUserFail(state, action);\n\n    case actionTypes.SHARE_USER:\n      return shareUser(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}