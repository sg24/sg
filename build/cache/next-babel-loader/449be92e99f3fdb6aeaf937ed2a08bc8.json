{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchShareActiveInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(resetActiveInitSaga);\n\nimport { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function fetchShareActiveInitSaga(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchShareActiveInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'notification'\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.data > 0)) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 7;\n          return put(actions.fetchShareActive(response.data));\n\n        case 7:\n          return _context.abrupt(\"return\");\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\nexport function resetActiveInitSaga(action) {\n  return _regeneratorRuntime.wrap(function resetActiveInitSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n\n          if (!(action.curTab === 'share')) {\n            _context2.next = 4;\n            break;\n          }\n\n          _context2.next = 4;\n          return axios.patch('/header', {\n            userID: action.userID\n          }, {\n            headers: {\n              'data-categ': action.curTab\n            }\n          });\n\n        case 4:\n          _context2.next = 6;\n          return put(actions.resetActive(action.curTab));\n\n        case 6:\n          _context2.next = 10;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}","map":null,"metadata":{},"sourceType":"module"}