{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkAuthInitSaga);\n\nimport { put } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function checkAuthInitSaga(action) {\n  var expiresIn, response;\n  return _regeneratorRuntime.wrap(function checkAuthInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          expiresIn = document.cookie.replace(/(?:(?:^|.*;\\s*)expiresIn\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n\n          if (!(expiresIn && new Date(new Date(expiresIn * 1000).getTime()) >= new Date().getTime())) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 4;\n          return put(actions.checkAuth(true));\n\n        case 4:\n          _context.prev = 4;\n          _context.next = 7;\n          return axios.post('/header', {}, {\n            headers: {\n              'data-categ': 'userimg'\n            }\n          });\n\n        case 7:\n          response = _context.sent;\n\n          if (!response.data.url) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 11;\n          return put(actions.checkUserImg(response.data.url));\n\n        case 11:\n          _context.next = 15;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return put(actions.checkUserName(response.data.name));\n\n        case 15:\n          _context.next = 19;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](4);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 17]]);\n}","map":null,"metadata":{},"sourceType":"module"}