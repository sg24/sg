{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar initialState = {\n  cntCateg: null,\n  filterStart: false,\n  totalFound: null,\n  filterErr: null\n};\n\nvar fetchCntCateg = function fetchCntCateg(state, action) {\n  return updateObject(state, {\n    cntCateg: action.categ\n  });\n};\n\nvar filterContentStart = function filterContentStart(state, action) {\n  return updateObject(state, {\n    filterStart: true,\n    filterErr: null\n  });\n};\n\nvar filterContentFail = function filterContentFail(state, action) {\n  return updateObject(state, {\n    filterErr: action.err\n  });\n};\n\nvar filterContent = function filterContent(state, action) {\n  return updateObject(state, {\n    totalFound: action.totalFound\n  });\n};\n\nvar resetFilter = function resetFilter(state, action) {\n  return updateObject(state, {\n    totalFound: null,\n    filterErr: null\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_CNTCATEG:\n      return fetchCntCateg(state, action);\n\n    case actionTypes.FILTER_CONTENT_START:\n      return filterContentStart(state, action);\n\n    case actionTypes.FILTER_CONTENT_FAIL:\n      return filterContentFail(state, action);\n\n    case actionTypes.FILTER_CONTENT:\n      return filterContent(state, action);\n\n    case actionTypes.RESET_FILTER:\n      return resetFilter(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}