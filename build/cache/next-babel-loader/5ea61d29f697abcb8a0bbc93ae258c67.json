{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var updateObject = function updateObject(oldObject, updatedProperties) {\n  return _objectSpread({}, oldObject, {}, updatedProperties);\n};\nexport var transformNumber = function transformNumber(favNumber) {\n  var favNumArray = String(favNumber).split(\"\");\n\n  if (favNumArray.length === 4) {\n    return \"\".concat(favNumArray[0], \"K\");\n  }\n\n  if (favNumArray.length === 5) {\n    var favNum = favNumArray[0] + favNumArray[1];\n    return \"\".concat(favNum, \"K\");\n  }\n\n  if (favNumArray.length === 6) {\n    var _favNum = favNumArray[0] + favNumArray[1] + favNumArray[2];\n\n    return \"\".concat(_favNum, \"K\");\n  }\n\n  if (favNumArray.length === 7) {\n    var _favNum2 = favNumArray[0];\n    return \"\".concat(_favNum2, \"M\");\n  }\n\n  if (favNumArray.length === 8) {\n    var _favNum3 = favNumArray[0] + favNumArray[1];\n\n    return \"\".concat(_favNum3, \"M\");\n  }\n\n  if (favNumArray.length === 9) {\n    var _favNum4 = favNumArray[0] + favNumArray[1] + favNumArray[2];\n\n    return \"\".concat(_favNum4, \"M\");\n  }\n\n  if (favNumArray.length === 10) {\n    var _favNum5 = favNumArray[0];\n    return \"\".concat(_favNum5, \"B\");\n  }\n\n  if (favNumArray.length === 11) {\n    var _favNum6 = favNumArray[0] + favNumArray[1];\n\n    return \"\".concat(_favNum6, \"B\");\n  }\n\n  return favNumber;\n};\nexport var transformString = function transformString(val) {\n  var curVal = String(val).substr(0, 115);\n  return curVal;\n};\nexport function changeFav(id, liked, favAdd, changedFav) {\n  var changedFavorites = _toConsumableArray(changedFav);\n\n  var favDets = changedFavorites.filter(function (fav) {\n    return fav.id === id;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(favDets), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var favDet = _step.value;\n      return updateFavs(favDet);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var newChangedFav = {\n    id: id,\n    liked: liked,\n    favAdd: favAdd\n  };\n  return updateFavs(newChangedFav);\n\n  function updateFavs(favDet) {\n    favDet = updateObject(favDet, {\n      liked: !favDet.liked\n    });\n\n    if (favDet.liked) {\n      favDet = updateObject(favDet, {\n        favAdd: favDet.favAdd + 1\n      });\n    } else {\n      favDet = updateObject(favDet, {\n        favAdd: favDet.favAdd - 1\n      });\n    }\n\n    var updateChangeFav = changedFavorites.filter(function (fav) {\n      return fav.id !== id;\n    });\n    updateChangeFav.push(favDet);\n    return {\n      favDet: favDet,\n      updateChangeFav: updateChangeFav\n    };\n  }\n}\n;\nexport var engStrings = {\n  suffixAgo: 'ago',\n  seconds: 'sec',\n  minute: '%d min',\n  minutes: '%d min',\n  hour: '%d hr',\n  hours: '%d hrs',\n  day: '%d day',\n  days: '%d days',\n  month: '%d month',\n  months: '%d months',\n  year: '%d yr',\n  years: '%d yrs'\n};\nexport function changeMode(oldCnts, changeCntStart, field, isUpdate) {\n  var cnts = _toConsumableArray(oldCnts);\n\n  var curIndex;\n  var user = cnts.filter(function (userFnd, index) {\n    if (userFnd.id === changeCntStart.id) {\n      curIndex = index;\n      return true;\n    }\n\n    return false;\n  });\n\n  if (user.length > 0) {\n    var updateUser = _objectSpread({}, user[0]);\n\n    updateUser['pending'] = false;\n    updateUser['request'] = false;\n    updateUser['accept'] = false;\n    updateUser[field] = isUpdate;\n    cnts[curIndex] = updateUser;\n    return cnts;\n  }\n\n  return oldCnts;\n}","map":null,"metadata":{},"sourceType":"module"}