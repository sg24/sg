{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConvItems from '../../../../components/Main/Nav/ConvItems/ConvItems';\nimport * as actions from '../../../../store/actions/index';\nimport { updateObject } from '../../../../shared/utility';\n\nvar Conversation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Conversation, _Component);\n\n  function Conversation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Conversation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Conversation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      convOpt: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showUserOptHandler\", function (index) {\n      if (_this.state.convOpt && _this.state.convOpt.index === index) {\n        _this.setState(function (prevState, props) {\n          return {\n            convOpt: updateObject(prevState.convOpt, {\n              visible: !prevState.convOpt.visible\n            })\n          };\n        });\n\n        return;\n      }\n\n      var newConvOpt = {\n        visible: true,\n        index: index\n      };\n\n      _this.setState({\n        convOpt: newConvOpt\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Conversation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchConv();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var convs = null;\n\n      if (this.props.conv) {\n        convs = __jsx(ConvItems, {\n          convs: this.props.conv,\n          userOpt: this.showUserOptHandler,\n          showConvOpt: this.state.convOpt\n        });\n      }\n\n      return __jsx(\"div\", {\n        className: \"reuse-conv\"\n      }, __jsx(\"div\", {\n        className: \"reuse-conv__title\"\n      }, __jsx(\"div\", {\n        className: \"reuse-conv__title--wrapper\"\n      }, __jsx(\"div\", null, __jsx(FontAwesomeIcon, {\n        icon: ['far', 'comment-dots'],\n        className: \"icon icon__reuse-conv--comment\"\n      })), \"Conversations\")), convs);\n    }\n  }]);\n\n  return Conversation;\n}(Component);\n\nvar mapStateToPros = function mapStateToPros(state) {\n  return {\n    conv: state.conv.conv\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchConv: function onFetchConv() {\n      return dispatch(actions.fetchConvInit());\n    }\n  };\n};\n\nexport default connect(mapStateToPros, mapDispatchToProps)(Conversation);","map":null,"metadata":{},"sourceType":"module"}