{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { EditorState, convertToRaw } from 'draft-js'; // import { Editor } from 'react-draft-wysiwyg';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ModelEditor.css';\nimport './react-draft-wysiwyg.css';\nimport * as actions from '../../../../../store/actions/index';\n\nvar ModelEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModelEditor, _Component);\n\n  function ModelEditor(props) {\n    var _this;\n\n    _classCallCheck(this, ModelEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModelEditor).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputChangedHandler\", function (editorState) {\n      _this.setState({\n        inputValue: editorState\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeEditorHandler\", function () {\n      _this.props.onResetInput();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitReplyHandler\", function () {\n      var cnt = _JSON$stringify(convertToRaw(_this.state.inputValue.getCurrentContent()));\n\n      _this.props.onSubmitComment(_this.props.id, _this.props.categ, cnt, 'reply');\n\n      _this.setState({\n        submitStart: true\n      });\n    });\n\n    _this.state = {\n      inputValue: EditorState.createEmpty(),\n      submitStart: false\n    };\n    return _this;\n  }\n\n  _createClass(ModelEditor, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.submitStart && this.props.resetInput) {\n        this.setState({\n          inputValue: EditorState.createEmpty(),\n          submitStart: false\n        });\n        this.props.onResetInput();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"reuse-view__editor--wrapper\"\n      }, __jsx(\"div\", {\n        className: \"reuse-view__editor--backdrop\",\n        onClick: this.closeEditorHandler\n      }), __jsx(\"div\", {\n        className: \"reuse-view__editor\"\n      }, __jsx(\"div\", {\n        className: \"reuse-view__editor--main-close\",\n        onClick: this.closeEditorHandler\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'times'],\n        className: \"\"\n      })), __jsx(\"div\", {\n        className: \"reuse-view__editor--content\"\n      }, __jsx(\"div\", {\n        className: \"reuse-view__form--field__wrapper\"\n      })), __jsx(\"div\", {\n        className: \"reuse-view__editor--footer\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        disabled: this.props.submitStart || String(convertToRaw(this.state.inputValue.getCurrentContent()).blocks[0].text).length < 1,\n        onClick: this.submitReplyHandler\n      }, __jsx(FontAwesomeIcon, {\n        icon: ['fas', 'reply'],\n        className: \"icon icon__reuse-view--reply\"\n      }), \"Reply\"))));\n    }\n  }]);\n\n  return ModelEditor;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    submitStart: state.cnt.submitStart,\n    resetInput: state.cnt.resetInput\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSubmitComment: function onSubmitComment(id, cntGp, cnt, modelType) {\n      return dispatch(actions.submitCommentInit(id, cntGp, cnt, modelType));\n    },\n    onSubmitSuccess: function onSubmitSuccess(id, cntGrp, msg) {\n      return dispatch(actions.submitComment(id, cntGrp, msg));\n    },\n    onResetInput: function onResetInput() {\n      return dispatch(actions.resetInput());\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ModelEditor));","map":null,"metadata":{},"sourceType":"module"}