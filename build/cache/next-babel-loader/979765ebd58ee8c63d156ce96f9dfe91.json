{"ast":null,"code":"import { takeEvery, all, takeLatest } from 'redux-saga/effects';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport { checkAuthInitSaga } from './auth';\nimport { fetchCntInitSaga, ansCorrectInitSaga, ansWrongInitSaga, changeFavSaga, changeCntInitSaga } from './model';\nimport { fetchUsersInitSaga, filterUserInitSaga, filterUserSelectInitSaga, shareUserInitSaga } from './share';\nimport { fetchTagsInitSaga } from './tags';\nimport { fetchTrdInitSaga } from './trend';\nimport { fetchCategInitSaga } from './setQue';\nimport { fetchConvInitSaga } from './conv';\nimport { fetchNotifyInitSaga, changeFavNotifySaga, fetchNavlistInitSaga, fetchNotifyActiveInitSaga, defaultNotifyActiveInitSaga, headerFilterInitSaga } from './header';\nimport { fetchShareActiveInitSaga, resetActiveInitSaga } from './main';\nexport function* watchAuth() {\n  yield all([takeEvery(actionTypes.CHECK_AUTH_INIT, checkAuthInitSaga)]);\n}\nexport function* watchCnt() {\n  yield all([takeLatest(actionTypes.FETCH_CNT_INIT, fetchCntInitSaga), takeLatest(actionTypes.ANS_CORRECT_INIT, ansCorrectInitSaga), takeLatest(actionTypes.ANS_WRONG_INIT, ansWrongInitSaga), takeEvery(actionTypes.CHANGE_FAVORITE_INIT, changeFavSaga), takeLatest(actionTypes.CHANGE_CNT_INIT, changeCntInitSaga)]);\n}\nexport function* watchShare() {\n  yield all([takeEvery(actionTypes.FETCH_USERS_INIT, fetchUsersInitSaga), takeEvery(actionTypes.FILTER_USER_INIT, filterUserInitSaga), takeEvery(actionTypes.FILTER_USER_SELECT_INIT, filterUserSelectInitSaga), takeEvery(actionTypes.SHARE_USER_INIT, shareUserInitSaga)]);\n}\nexport function* watchTags() {\n  yield takeEvery(actionTypes.FETCH_TAGS_INIT, fetchTagsInitSaga);\n}\nexport function* watchTrd() {\n  yield all([takeEvery(actionTypes.FETCH_TRD_INIT, fetchTrdInitSaga)]);\n}\nexport function* watchSetQue() {\n  yield takeEvery(actionTypes.FETCH_CATEG_INIT, fetchCategInitSaga);\n}\nexport function* watchConv() {\n  yield takeEvery(actionTypes.FETCH_CONV_INIT, fetchConvInitSaga);\n}\nexport function* watchHeader() {\n  yield all([takeEvery(actionTypes.FETCH_NOTIFY_INIT, fetchNotifyInitSaga), takeEvery(actionTypes.CHANGE_FAVORITE_NOTIFY_INIT, changeFavNotifySaga), takeEvery(actionTypes.FETCH_NAVLIST_INIT, fetchNavlistInitSaga), takeEvery(actionTypes.FETCH_NOTIFY_ACTIVE_INIT, fetchNotifyActiveInitSaga), takeEvery(actionTypes.DEFAULT_NOTIFYACTIVE_INIT, defaultNotifyActiveInitSaga), takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga), takeEvery(actionTypes.HEADER_FILTER_INIT, headerFilterInitSaga)]);\n}\nexport function* watchMain() {\n  yield all([takeEvery(actionTypes.FETCH_SHARE_ACTIVE_INIT, fetchShareActiveInitSaga), takeEvery(actionTypes.RESET_ACTIVE_INIT, resetActiveInitSaga)]);\n}\nexport function* rootSaga() {\n  yield all([watchAuth(), watchCnt(), watchTags(), watchTrd(), watchShare(), watchSetQue(), watchConv(), watchHeader(), watchMain()]);\n}","map":null,"metadata":{},"sourceType":"module"}