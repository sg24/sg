{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore, combineReducers } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reduxThunk from 'redux-thunk';\nimport auth from './store/reducers/auth';\nimport cnt from './store/reducers/model';\nimport tags from './store/reducers/tags';\nimport share from './store/reducers/share';\nimport trend from './store/reducers/trend';\nimport setQue from './store/reducers/setQue';\nimport conv from './store/reducers/conv';\nimport header from './store/reducers/header';\nimport main from './store/reducers/main';\nimport { rootSaga } from './store/sagas/index';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (false) {// const { composeWithDevTools } = require('redux-devtools-extension')\n    // return composeWithDevTools(applyMiddleware(...middleware))\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var rootReducers = combineReducers({\n    auth: auth,\n    cnt: cnt,\n    tags: tags,\n    trd: trend,\n    share: share,\n    setQue: setQue,\n    conv: conv,\n    header: header,\n    main: main\n  });\n  var store = createStore(rootReducers, initialState, bindMiddleware([reduxThunk, sagaMiddleware]));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}