{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchUsersInitSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(filterUserInitSaga),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(filterUserSelectInitSaga),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(shareUserInitSaga);\n\nimport { put, delay } from 'redux-saga/effects';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios';\nexport function fetchUsersInitSaga() {\n  var response;\n  return _regeneratorRuntime.wrap(function fetchUsersInitSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.post('/users', null, {\n            headers: {\n              'data-categ': \"allteacher-notab\"\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return put(actions.fetchUsers(response.data));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(actions.fetchUsersFail(_context.t0));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\nexport function filterUserInitSaga(action) {\n  var filterUser;\n  return _regeneratorRuntime.wrap(function filterUserInitSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          filterUser = null;\n\n          if (!action.filterContent) {\n            filterUser = action.users;\n          } else {\n            filterUser = action.users.filter(function (user) {\n              return user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1;\n            });\n          }\n\n          _context2.next = 4;\n          return put(actions.filterUser(filterUser));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function filterUserSelectInitSaga(action) {\n  var filterUser;\n  return _regeneratorRuntime.wrap(function filterUserSelectInitSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          filterUser = null;\n\n          if (!action.filterContent) {\n            filterUser = action.userSelect;\n          } else {\n            filterUser = action.userSelect.filter(function (user) {\n              return user.username.toLowerCase().indexOf(action.filterContent.toLowerCase()) !== -1;\n            });\n          }\n\n          _context3.next = 4;\n          return put(actions.filterUserSelect(filterUser));\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function shareUserInitSaga(action) {\n  var shareUser, _i, _arr, user, field;\n\n  return _regeneratorRuntime.wrap(function shareUserInitSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          shareUser = [];\n\n          for (_i = 0, _arr = _toConsumableArray(action.userSelect); _i < _arr.length; _i++) {\n            user = _arr[_i];\n            shareUser.push(user.id);\n          }\n\n          _context4.prev = 2;\n          _context4.next = 5;\n          return put(actions.shareUserStart());\n\n        case 5:\n          field = action.cntType === 'post' ? 'postID' : action.cntType === 'question' ? 'queID' : 'pwtID';\n          _context4.next = 8;\n          return axios.patch('/header', {\n            users: _JSON$stringify(shareUser),\n            id: action.shareID,\n            model: action.cntType,\n            field: field\n          }, {\n            headers: {\n              'data-categ': 'shareuser'\n            }\n          });\n\n        case 8:\n          _context4.next = 10;\n          return delay(1000);\n\n        case 10:\n          _context4.next = 12;\n          return put(actions.shareUser());\n\n        case 12:\n          _context4.next = 22;\n          break;\n\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](2);\n          _context4.next = 18;\n          return put(actions.shareUserfail(_context4.t0));\n\n        case 18:\n          _context4.next = 20;\n          return delay(1000);\n\n        case 20:\n          _context4.next = 22;\n          return put(actions.shareUser());\n\n        case 22:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 14]]);\n}","map":null,"metadata":{},"sourceType":"module"}